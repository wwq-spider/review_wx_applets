{"version":3,"sources":["webpack:////Users/bytedance/Documents/HBuilderProjects/review_wx_applets/components/trtc-room/trtc-room.vue?0fb0","webpack:////Users/bytedance/Documents/HBuilderProjects/review_wx_applets/components/trtc-room/trtc-room.vue?882b","webpack:////Users/bytedance/Documents/HBuilderProjects/review_wx_applets/components/trtc-room/trtc-room.vue?520b","webpack:////Users/bytedance/Documents/HBuilderProjects/review_wx_applets/components/trtc-room/trtc-room.vue?a8f9","uni-app:///components/trtc-room/trtc-room.vue","webpack:////Users/bytedance/Documents/HBuilderProjects/review_wx_applets/components/trtc-room/trtc-room.vue?f27b"],"names":["renderjs","component","options","__file","components","render","_vm","this","_h","$createElement","_self","_c","recyclableRender","staticRenderFns","_withStripped"],"mappings":"+HAAA,yHACIA,EADJ,QASIC,EAAY,qBACd,aACA,YACA,sBACA,EACA,KACA,KACA,MACA,EACA,gBACAD,GAGFC,EAAUC,QAAQC,OAAS,qCACZ,aAAAF,E,0CCvBf,uQ,iCCAA,IAAIG,EAAJ,0LACA,IAAIC,EAAS,WACX,IAAIC,EAAMC,KACNC,EAAKF,EAAIG,eACJH,EAAII,MAAMC,IAEjBC,GAAmB,EACnBC,EAAkB,GACtBR,EAAOS,eAAgB,G,iCCRvB,8GAAu1B,eAAG,G,gHC2gB11B,gBACA,YACA,SAIA,YACA,YACA,YACA,Y,8vCACA,kBACA,kBACA,aAEA,IACA,I,EAEA,CACA,KADA,WAEA,OACA,YACA,cAEA,SAEA,cAEA,qBAEA,YAEA,YAEA,kBAEA,aAEA,cACA,oBACA,YAEA,eACA,kBACA,kBACA,eAEA,wBACA,uBACA,yBACA,yBACA,uBACA,gBAEA,kBAEA,oBAEA,iCAEA,0CACA,kBACA,aACA,aACA,cACA,qBACA,mBACA,eACA,WACA,YACA,CACA,eACA,WACA,YACA,CACA,cACA,WACA,aAEA,cACA,cACA,iBACA,YACA,CACA,aACA,YACA,CACA,kBACA,YACA,CACA,cACA,YACA,CACA,iBACA,YACA,CACA,aACA,YACA,CACA,gBACA,YACA,CACA,cACA,YACA,CACA,qBACA,YACA,CACA,kBACA,YACA,CACA,kBACA,aAEA,kBACA,mEACA,eAGE,SAAF,CACI,QADJ,WACA,IACM,EAAN,uBACM,MAAN,+DAGA,cACA,OAEA,QACA,YACA,0BACA,YACA,UACA,WACA,YACA,aAEA,gBAKA,OACA,QACA,sBACA,0BACA,cACA,SACA,YAGA,aACA,UAGA,mBAEA,2BACA,oBACA,kBACA,oBACA,cACA,gBAGA,uBAEA,0BACA,eACA,uBAEA,mBAEA,wBAEA,qBAEA,0BAEA,iBAEA,kBAEA,0BAEA,iCAIA,GAFA,0CAEA,sBAEA,yBASA,gBACA,4BACA,0BAMA,oFACA,qBASA,IAHA,sBACA,KAEA,mBACA,yCACA,WACA,UACA,uBACA,cAKA,iBACA,eACA,iBACA,2BACA,aAKA,cACA,eACA,iBACA,2BACA,6CACA,GAGA,WAGA,iCAGA,6BAEA,sBAEA,sBACA,6BAEA,yBAEA,2BAEA,SAIA,QAJA,WAKA,uBACA,wCACA,4BACA,mBACA,qBACA,oBACA,wBACA,uBACA,gDAGA,cAhBA,WAiBA,aACA,UAEA,aAEA,YAEA,sBAGA,oBAEA,0BAEA,yBACA,IACA,KAEA,uBAOA,oBA1CA,SA0CA,GAGA,GAFA,mDAEA,mBACA,4DACA,+CAEA,gCACA,kCAIA,wBACA,kBAGA,uDACA,iCACA,mBAKA,cACA,oBACA,oBACA,0BACA,wBAEA,6BAmBA,UA1FA,SA0FA,cACA,kCACA,2BACA,0BACA,iCACA,iCAEA,IACA,0BACA,2BAGA,2BAMA,4CACA,eACA,WACA,kBACA,WAEA,oCAEA,oCACA,mBACA,UAEA,mBAEA,qCACA,QAKA,oBACA,UADA,IAEA,oBA3BA,2BAoCA,SA3IA,WA2IA,WAMA,MALA,+BAEA,+EAGA,2BACA,0BACA,cACA,iBACA,mBACA,+BACA,WACA,gBACA,oBACA,wBACA,2DACA,WAEA,GACA,oBACA,0BAEA,yDACA,UAEA,qCACA,gCAUA,kBAhLA,WAmLA,OADA,yCACA,yBACA,mBAQA,oBA5LA,WA+LA,OADA,0CACA,yBACA,mBAQA,kBAxMA,WA2MA,OADA,yCACA,yBACA,gBAQA,oBApNA,WAuNA,OADA,0CACA,yBACA,gBASA,qBAjOA,SAiOA,GACA,wCAEA,OACA,cAGA,6CACA,iCACA,gBACA,eAoBA,OAlBA,mBAEA,+CACA,2BACA,yDAEA,wBACA,oCACA,2BACA,wBACA,oCACA,0BAGA,6CAIA,yBACA,gBACA,aACA,YASA,uBA3QA,SA2QA,GACA,0CACA,qCACA,gBACA,0BAKA,OAHA,mBAGA,yBACA,gBACA,wBACA,QACA,iBAUA,qBAlSA,SAkSA,GAEA,OADA,wCACA,yBACA,gBACA,kBACA,QACA,iBAUA,uBAlTA,SAkTA,GAEA,OADA,0CACA,yBACA,gBACA,kBACA,QACA,iBAKA,GA7TA,SA6TA,OACA,yBAGA,IAjUA,SAiUA,KACA,wBAGA,kBArUA,WAsUA,sBAMA,aA5UA,WA4UA,WACA,sBAEA,6CAGA,kDACA,iEACA,cACA,qCACA,WACA,0DAGA,+CAcA,YAxWA,SAwWA,GASA,OARA,+BAEA,0BACA,oGAGA,sEAEA,8BACA,yBACA,cACA,cACA,cACA,kBAIA,yBACA,gBACA,wBACA,QACA,cACA,cACA,cACA,oBAaA,eA9YA,SA8YA,GASA,OARA,kCAEA,0BACA,uGAGA,sEAEA,8BACA,yBACA,wBAIA,yBACA,gBACA,wBACA,QACA,0BAaA,cA9aA,SA8aA,GASA,OARA,iCAEA,0BACA,sGAGA,sEAEA,8BACA,yBACA,4BAIA,yBACA,gBACA,wBACA,QACA,8BAUA,QA3cA,SA2cA,cACA,kCACA,qCACA,UAEA,mBACA,cACA,WAEA,KAEA,gBACA,yBAEA,uCAEA,+BAUA,QAreA,WAseA,0CAGA,SAzeA,WA0eA,2CAGA,UA7eA,WA8eA,4CAOA,aArfA,SAqfA,GACA,gCACA,6CACA,mBAQA,aAhgBA,SAggBA,GACA,gCACA,6CACA,mBASA,QA5gBA,SA4gBA,cACA,kCACA,yCACA,cACA,oBACA,YAWA,SA5hBA,SA4hBA,cAEA,OADA,4BACA,2BACA,uCACA,0BACA,yBAEA,QAHA,SAGA,GACA,aACA,iBAEA,uCACA,MAGA,iBACA,aACA,YACA,eAEA,oCACA,WAGA,mBACA,YAUA,gBA/jBA,SA+jBA,cACA,kCACA,2BAEA,sCACA,cACA,qBACA,mCAEA,gBACA,MAEA,+BACA,yBAMA,sDACA,cACA,qBACA,mCAEA,gBACA,MAEA,+BACA,6BAaA,gBAxmBA,SAwmBA,cAEA,OADA,mCACA,2BACA,+DACA,yBACA,oBACA,2CACA,MAEA,iBACA,wCACA,YAWA,eA9nBA,SA8nBA,cAEA,OADA,kCACA,2BACA,4DACA,oBACA,0CACA,MAEA,iBACA,uCACA,YAWA,qBAnpBA,SAmpBA,GACA,gCACA,gBACA,wBACA,QACA,8BAMA,mBA9pBA,SA8pBA,GACA,gCACA,gBACA,wBACA,QACA,8BAUA,kBA7qBA,SA6qBA,GACA,gCACA,gBACA,wBACA,QACA,yBAMA,gBAxrBA,SAwrBA,GACA,gCACA,gBACA,wBACA,QACA,yBAUA,mBAvsBA,SAusBA,GACA,aAKA,sCACA,kCACA,eACA,0CACA,SACA,kBAGA,0BAQA,OAPA,oBAEA,iDACA,mBAEA,iDAEA,EApBA,qCA6BA,qBAtuBA,SAsuBA,GACA,aAKA,wCACA,oCACA,eACA,0CACA,oBAEA,0BAQA,OAPA,oBAEA,0CACA,mBAEA,0CAEA,EAlBA,qCA2BA,qBAnwBA,SAmwBA,GACA,aAKA,wCACA,kCACA,eACA,4CACA,SACA,kBAGA,0BAQA,OAPA,oBAEA,mDACA,mBAEA,mDAEA,EApBA,qCA6BA,uBAlyBA,SAkyBA,GACA,aAKA,0CACA,oCACA,eACA,4CACA,oBAEA,0BAQA,OAPA,oBAEA,0CACA,mBAEA,0CAEA,EAlBA,qCAoCA,mBAx0BA,SAw0BA,wEAKA,OAJA,GACA,gDAGA,2BACA,SAGA,0BAFA,0BAKA,WACA,kBACA,WACA,GACA,+DACA,oBAGA,YAUA,mBAt2BA,SAs2BA,cACA,WACA,eACA,WAEA,OADA,oCACA,2BAEA,kCAEA,iBACA,8BAEA,WACA,wBACA,8DACA,WAEA,SAIA,eACA,mCAUA,WAt4BA,SAs4BA,cACA,0CADA,IAGA,EAEA,EAFA,SACA,EACA,EADA,WAEA,kCACA,SACA,GACA,uBACA,4BAGA,sBACA,8BACA,2CACA,gEACA,oCACA,iCAGA,wBACA,YAUA,cAt6BA,SAs6BA,GAGA,OAFA,sCAEA,gBAKA,cACA,6BACA,GAGA,iCACA,+CACA,GAGA,SAKA,YAKA,aACA,+BACA,IANA,8BACA,IANA,6BACA,IAhBA,+BACA,IA+BA,cA18BA,SA08BA,GAIA,GAFA,+BAEA,UAEA,kCAKA,mCACA,MADA,YAEA,yCACA,GAEA,yBAEA,6BACA,0BAEA,8CAEA,oCAEA,iCACA,GAEA,uBACA,EAEA,SAIA,EAFA,uBAEA,oBAGA,uBAGA,uBACA,0DACA,4CACA,6CACA,gDACA,0CACA,8DACA,kDACA,wBACA,uCACA,OACA,MAIA,gFACA,wCAQA,oBA3gCA,SA2gCA,GACA,sCACA,iBACA,WACA,YACA,WACA,kBACA,2CACA,qFACA,gDACA,iEACA,0BACA,OACA,MACA,QACA,UACA,WAEA,GACA,iBACA,eACA,WACA,qBAGA,OADA,0CACA,2BACA,WACA,MACA,MACA,UACA,WAEA,cACA,oBACA,6CAEA,2DAEA,6BACA,MAGA,wCACA,yCACA,sCACA,sBAGA,mCACA,OACA,eACA,sBACA,cAIA,mBACA,sCACA,wBAEA,oCAIA,WACA,4CAEA,0BAGA,oDAGA,6BACA,MAEA,iBACA,0CACA,YAMA,6BA/lCA,SA+lCA,cACA,cACA,oBACA,0BACA,WAEA,mDACA,sBACA,0BAEA,8BAGA,GAFA,sDAEA,4BACA,IACA,IAYA,EAZA,iCACA,qCAEA,sBACA,qBACA,SACA,eACA,iBACA,sBACA,2BASA,sBACA,SACA,aACA,cACA,iBACA,sBACA,sBAGA,0BAGA,qBAMA,aAlpCA,WAkpCA,WAEA,6DACA,wCACA,WACA,2BACA,WACA,0CACA,0BAGA,0EACA,aAGA,8DACA,wCAEA,eACA,cACA,yBACA,+BACA,iBACA,2CACA,0BAKA,2EACA,aAGA,6DACA,+CACA,oBAEA,6BACA,8BACA,kBAGA,cACA,yBACA,+BACA,iBAEA,qDACA,GAIA,0CACA,gBACA,6BAGA,0EACA,aAGA,gEACA,+CACA,oBACA,cACA,yBACA,+BACA,iBAEA,wBACA,6CACA,gBACA,6BAIA,6EACA,aAGA,6DACA,0BACA,oBACA,cACA,yBACA,+BACA,iBACA,qDACA,GAIA,0CACA,gBACA,6BAGA,0EACA,aAGA,gEACA,+CACA,oBACA,cACA,yBACA,+BACA,iBAEA,wBACA,6CACA,gBACA,6BAIA,6EACA,cAQA,4BA/wCA,SA+wCA,GACA,oBACA,mBAGA,OAFA,wCAEA,GACA,OAEA,mBACA,MAEA,UACA,6BACA,MAEA,UACA,mCACA,MAEA,UACA,2BACA,MAEA,UACA,0BACA,MAEA,UACA,6BACA,MAEA,UACA,4BACA,MAEA,UACA,4BACA,MAEA,UACA,yBACA,MAEA,UACA,wBAEA,uCACA,4BAGA,MAEA,UACA,qBACA,GAGA,MAEA,UACA,0BACA,MAEA,UACA,UACA,UACA,UACA,UAEA,wCACA,MAEA,UACA,+BAEA,kCACA,OACA,YAGA,MAEA,UACA,+BAEA,kCACA,OACA,YAGA,MAEA,UACA,8BAEA,kCACA,OACA,YAGA,MAEA,UACA,8BAEA,kCACA,OACA,YAGA,MAEA,UACA,8BAEA,kCACA,OACA,YAGA,MAEA,YACA,6DAEA,kCACA,OACA,YAGA,MAEA,SACA,4BAGA,MAEA,UAEA,+BACA,yBAEA,oBACA,gBAGA,MAEA,UACA,mCACA,MAEA,UACA,mCACA,MAEA,UACA,8BACA,MAEA,QACA,qBAIA,0BAr7CA,SAq7CA,GAEA,sDAGA,sBA17CA,SA07CA,GAEA,iCAEA,IACA,uBACA,kBAEA,kCACA,OACA,YAEA,SACA,4DAIA,yBA38CA,SA28CA,KAIA,4BA/8CA,SA+8CA,GAEA,iDAGA,4BAp9CA,SAo9CA,GAEA,iDAGA,uCAEA,yDAKA,qBAh+CA,SAg+CA,GAEA,mDAGA,0BAr+CA,SAq+CA,GAEA,uDAEA,uDAGA,mBA5+CA,SA4+CA,GAGA,qCACA,sCACA,iDAGA,qEACA,mBACA,wDACA,sCACA,yCAGA,uDAGA,2BA9/CA,SA8/CA,GAEA,0DAGA,uBAngDA,SAmgDA,KACA,4BAIA,iCA8BA,OA3BA,sBACA,6BACA,yBAEA,YACA,EAGA,IACA,EAGA,KAGA,4BACA,oCACA,GAGA,4FAEA,2BAKA,GAGA,+BAziDA,SAyiDA,GAEA,eAEA,2DACA,sCACA,IAEA,EAFA,IAMA,EAFA,yBACA,yBACA,8BAQA,6EACA,0CAKA,6EACA,wCAIA,oBACA,gBACA,kBACA,+DACA,cACA,MAEA,kBACA,mBAKA,4BACA,2CACA,yCACA,iBAKA,UAMA,gBAnmDA,WAomDA,wBACA,mBACA,oBAEA,MAiBA,UAznDA,SAynDA,GACA,sCAIA,2BAEA,wBACA,sBAOA,YACA,iBAEA,iBAIA,mDACA,oEACA,0DACA,wDACA,+CAEA,uDACA,wEACA,8DACA,4DACA,mDACA,WACA,UAGA,WA9pDA,SA8pDA,GACA,YAKA,OADA,4BACA,gBACA,gBACA,qBAIA,YA1qDA,WA2qDA,YAKA,OADA,2BACA,mBAGA,UAnrDA,WAmrDA,WAEA,mCAIA,uBACA,+BACA,qBACA,qBACA,qBACA,WACA,kBAEA,uCAEA,mBACA,WACA,iBACA,oBACA,mBACA,mBACA,oBACA,mBAEA,0BACA,oBAEA,iBAGA,gBACA,WACA,iBACA,oBACA,mBACA,mBACA,oBACA,sBAGA,mBACA,oBAEA,qBAIA,eAnuDA,SAmuDA,GACA,aAIA,gCACA,eACA,iCAOA,OANA,oBAEA,2CACA,mBACA,8DAEA,IAQA,eAzvDA,SAyvDA,GACA,aAIA,gCACA,4BACA,oBACA,iBACA,SAQA,OANA,oBAEA,sDACA,mBACA,0CAEA,IAQA,aAlxDA,SAkxDA,GACA,aAIA,8BACA,0BACA,oBACA,SAyBA,OAvBA,oBACA,sBACA,+CAEA,MAEA,yCAEA,kDAMA,sCACA,MAEA,QACA,UAEA,mBACA,uCAEA,IAGA,aAtzDA,SAszDA,GACA,aAIA,8BACA,sCAMA,OALA,oBACA,yCACA,mBACA,uCAEA,IAGA,gBAr0DA,SAq0DA,GACA,aAIA,iCACA,yCAMA,OALA,oBACA,4CACA,mBACA,2CAEA,IAGA,aAp1DA,SAo1DA,cACA,4BAEA,uCAEA,yBAEA,qBACA,WACA,kBAGA,gBACA,cAEA,kBAEA,kBACA,WACA,kBAEA,gBACA,cAEA,mBACA,iBACA,6BACA,gBACA,mBAQA,uBAx3DA,SAw3DA,GAEA,uCAMA,IAJA,aACA,wBACA,wBAEA,oBACA,QACA,GAEA,wBAEA,uEAEA,kCACA,yBACA,YACA,yBAGA,0EAEA,yBACA,YACA,2BAQA,mDAGA,gBA75DA,SA65DA,GACA,gCAEA,4CAKA,iBAr6DA,SAq6DA,GACA,iCAEA,6CASA,aAj7DA,SAi7DA,GACA,4BAEA,wCAoBA,eAx8DA,WAy8DA,yBACA,2BAEA,0BAIA,eAh9DA,WAi9DA,sBACA,2BAEA,0BAIA,0BAx9DA,SAw9DA,GACA,iEACA,qCACA,qCACA,oCACA,yCAGA,YACA,2BACA,SACA,eAGA,6BACA,SACA,gBAKA,0BA7+DA,SA6+DA,GACA,iEACA,qCACA,qCACA,oCACA,yCAGA,YACA,2BACA,WAGA,6BACA,YAKA,yBAhgEA,WAigEA,cACA,qBAIA,iBAtgEA,WAugEA,iBAGA,kBA1gEA,WA0gEA,WACA,uCACA,gBACA,4BACA,iBACA,uBACA,sBACA,wBACA,SAIA,eAthEA,WAuhEA,gBACA,WAIA,oBA5hEA,WA6hEA,cACA,+BAIA,0BAliEA,WAmiEA,+BAEA,2BACA,SAGA,yBACA,+DACA,cACA,yBACA,SACA,YAEA,iCACA,SACA,YAGA,yBACA,OACA,YAEA,oBAEA,mDACA,aACA,aACA,eACA,kBAEA,mBAEA,kDACA,aACA,aACA,YACA,mBAKA,yBA5kEA,WA6kEA,0CACA,yBACA,0BAGA,yBACA,+BAKA,mBAxlEA,WAylEA,6BAIA,qCACA,+BACA,oBAGA,IACA,wBACA,qBAEA,yBAGA,yBACA,gBACA,kBACA,QACA,+BASA,UAtnEA,WAunEA,gBACA,gBACA,WAOA,qBAhoEA,WAioEA,sBACA,2BAEA,0BAQA,8BA5oEA,SA4oEA,GACA,qCACA,qCACA,oCACA,yCAGA,YACA,2BACA,SACA,eAGA,6BACA,SACA,gBASA,8BApqEA,SAoqEA,GACA,qCACA,qCACA,oCACA,yCAGA,YACA,2BACA,WAGA,6BACA,YAQA,yBAzrEA,WA0rEA,cACA,uEAOA,sBAlsEA,WAmsEA,cACA,iEAIA,kBAxsEA,WAysEA,cACA,yDAIA,qBA9sEA,WA+sEA,cACA,gBAIA,oBAptEA,SAotEA,GACA,uCACA,kCACA,oCACA,gCACA,KAEA,gBACA,aACA,sBAGA,iCACA,eAEA,8BACA,kBAEA,mBAIA,iCACA,eAEA,sBACA,UAEA,WAIA,4BAGA,qBAvvEA,SAuvEA,GACA,wCACA,qCACA,qCACA,8BACA,gCACA,iCACA,SACA,eAGA,MAIA,SAEA,WACA,KACA,cACA,MAGA,qBACA,WACA,wCACA,eAEA,YACA,UAEA,WAIA,wCACA,yBACA,SACA,aACA,aAIA,kBAlyEA,SAkyEA,GACA,2CACA,KACA,oBACA,gBACA,eAEA,UACA,gBACA,mBACA,WAEA,MAEA,gBACA,mBACA,WAEA,QAIA,oBAxzEA,SAwzEA,GACA,qCACA,qCACA,iCACA,SACA,eAGA,2BACA,4BACA,2BACA,SACA,oBAGA,2BACA,SACA,uBAMA,uBA/0EA,SA+0EA,GACA,aACA,aACA,YACA,eAEA,qCACA,qCACA,eACA,SACA,gBAOA,iBAh2EA,WAg2EA,WAEA,wDACA,aACA,iCACA,qCACA,WACA,OAEA,8BACA,SACA,4BACA,IAIA,IACA,YAGA,WACA,wBACA,8DACA,kBAEA,+CAEA,wDACA,WACA,mBAGA,uDAGA,2BAEA,sBACA,WACA,OAIA,wBA34EA,SA24EA,GACA,8BACA,+BAGA,sBAh5EA,SAg5EA,GACA,kCACA,8BAEA,yBAEA,uBACA,2BAEA,wBAIA,kBA75EA,SA65EA,GACA,6CAEA,sEAIA,SAHA,uBACA,2BAMA,gBAx6EA,WAy6EA,uBAEA,0CACA,wBAGA,2BAGA,gBAl7EA,WAm7EA,uBAEA,yBACA,yCAGA,2BAGA,mBA57EA,WA67EA,2BACA,mDACA,cACA,qCACA,iCACA,oBACA,2BACA,mEACA,gBAGA,oBAx8EA,SAw8EA,cACA,uBAIA,wCAEA,0BACA,uCAGA,kCACA,YACA,oBACA,gDACA,+BACA,WACA,CACA,aACA,sBACA,OAGA,oBA/9EA,SA+9EA,cACA,uCACA,qCACA,qCAEA,sBACA,qBACA,SACA,eACA,iBACA,sBACA,0BACA,CAEA,QAMA,sBACA,SACA,aACA,cACA,iBACA,sBACA,wBAIA,kBA7/EA,WA8/EA,cACA,uCAIA,iBAngFA,WAogFA,eACA,aACA,YACA,uCAIA,cACA,iCAIA,sBAhhFA,SAghFA,GACA,4CAEA,SACA,SACA,uFAKA,4CACA,mCACA,GAEA,qBACA,cAEA,gBACA,WACA,sBACA,4BACA,yCAIA,uCACA,iCACA,+BACA,cACA,gBACA,WACA,sBACA,oCAIA,qCACA,0CACA,+BACA,yBACA,qBAIA,iBA5jFA,SA4jFA,GAGA,GAFA,kCAEA,qBAIA,yBACA,sBACA,qBACA,2BACA,SACA,YAGA,yBACA,OACA,YAEA,cACA,sBAIA,kBAplFA,SAolFA,GAEA,cACA,iCAIA,mBA3lFA,SA2lFA,GACA,qDACA,yBAGA,yBACA,cACA,6BACA,mDACA,kB,2ECp3GA,8GAAosC,eAAG,G","file":"components/trtc-room/trtc-room.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./trtc-room.vue?vue&type=template&id=62884a08&\"\nvar renderjs\nimport script from \"./trtc-room.vue?vue&type=script&lang=js&\"\nexport * from \"./trtc-room.vue?vue&type=script&lang=js&\"\nimport style0 from \"./trtc-room.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"components/trtc-room/trtc-room.vue\"\nexport default component.exports","export * from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./trtc-room.vue?vue&type=template&id=62884a08&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./trtc-room.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./trtc-room.vue?vue&type=script&lang=js&\"","<template>\n\t<view>\n\t\t<!--<import src=\"./template/1v1/1v1.wxml\"></import>-->\n\t\t<!--<import src=\"./template/grid/grid.wxml\"></import>-->\n\t\t<!--<import src=\"./template/custom/custom.wxml\"></import>-->\n\n\t\t<view :class=\"'trtc-room-container ' + (isFullscreenDevice?'fullscreen-device-fix':'')\">\n\t\t\t<block v-if=\"template === '1v1'\">\n\t\t\t\t<block data-type=\"template\" data-is=\"1v1\" data-attr=\"pusher, streamList, debug, enableIM\">\n\t\t\t\t\t<view class=\"template-1v1\">\n\t\t\t\t\t\t<view v-for=\"(item, index) in streamList\" :key=\"index\"\n\t\t\t\t\t\t\tv-if=\"item.src && (item.hasVideo || item.hasAudio)\"\n\t\t\t\t\t\t\t:class=\"'view-container player-container ' + (item.isVisible?'':'none')\">\n\t\t\t\t\t\t\t<live-player class=\"player\" :id=\"item.streamID\" :data-userid=\"item.userID\"\n\t\t\t\t\t\t\t\t:data-streamid=\"item.streamID\" :data-streamtype=\"item.streamType\" :src=\"item.src\"\n\t\t\t\t\t\t\t\tmode=\"RTC\" :autoplay=\"item.autoplay\" :mute-audio=\"item.muteAudio\"\n\t\t\t\t\t\t\t\t:mute-video=\"item.muteVideo\" :orientation=\"item.orientation\"\n\t\t\t\t\t\t\t\t:object-fit=\"item.objectFit\" :background-mute=\"item.enableBackgroundMute\"\n\t\t\t\t\t\t\t\t:min-cache=\"item.minCache\" :max-cache=\"item.maxCache\" :sound-mode=\"item.soundMode\"\n\t\t\t\t\t\t\t\t:enable-recv-message=\"item.enableRecvMessage\"\n\t\t\t\t\t\t\t\t:auto-pause-if-navigate=\"item.autoPauseIfNavigate\"\n\t\t\t\t\t\t\t\t:auto-pause-if-open-native=\"item.autoPauseIfOpenNative\" :debug=\"debug\"\n\t\t\t\t\t\t\t\t@statechange=\"playerStateChangeFun\" @fullscreenchange=\"playerFullscreenChangeFun\"\n\t\t\t\t\t\t\t\t@netstatus=\"playerNetStatusFun\" @audiovolumenotify=\"playerAudioVolumeNotifyFun\">\n\t\t\t\t\t\t\t</live-player>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view\n\t\t\t\t\t\t\t:class=\"'view-container pusher-container ' + (pusher.isVisible?'':'none') + ' ' + (streamList.length===0? 'fullscreen':'')\">\n\t\t\t\t\t\t\t<live-pusher class=\"pusher\" :url=\"pusher.url\" :mode=\"pusher.mode\"\n\t\t\t\t\t\t\t\t:autopush=\"pusher.autopush\" :enable-camera=\"pusher.enableCamera\"\n\t\t\t\t\t\t\t\t:enable-mic=\"pusher.enableMic\" :muted=\"!pusher.enableMic\" :enable-agc=\"pusher.enableAgc\"\n\t\t\t\t\t\t\t\t:enable-ans=\"pusher.enableAns\" :enable-ear-monitor=\"pusher.enableEarMonitor\"\n\t\t\t\t\t\t\t\t:auto-focus=\"pusher.enableAutoFocus\" :zoom=\"pusher.enableZoom\"\n\t\t\t\t\t\t\t\t:min-bitrate=\"pusher.minBitrate\" :max-bitrate=\"pusher.maxBitrate\"\n\t\t\t\t\t\t\t\t:video-width=\"pusher.videoWidth\" :video-height=\"pusher.videoHeight\"\n\t\t\t\t\t\t\t\t:beauty=\"pusher.beautyLevel\" :whiteness=\"pusher.whitenessLevel\"\n\t\t\t\t\t\t\t\t:orientation=\"pusher.videoOrientation\" :aspect=\"pusher.videoAspect\"\n\t\t\t\t\t\t\t\t:device-position=\"pusher.frontCamera\" :remote-mirror=\"pusher.enableRemoteMirror\"\n\t\t\t\t\t\t\t\t:local-mirror=\"pusher.localMirror\" :background-mute=\"pusher.enableBackgroundMute\"\n\t\t\t\t\t\t\t\t:audio-quality=\"pusher.audioQuality\" :audio-volume-type=\"pusher.audioVolumeType\"\n\t\t\t\t\t\t\t\t:audio-reverb-type=\"pusher.audioReverbType\" :waiting-image=\"pusher.waitingImage\"\n\t\t\t\t\t\t\t\t:debug=\"debug\" @statechange=\"pusherStateChangeHandlerFun\"\n\t\t\t\t\t\t\t\t@netstatus=\"pusherNetStatusHandlerFun\" @error=\"pusherErrorHandlerFun\"\n\t\t\t\t\t\t\t\t@bgmstart=\"pusherBGMStartHandlerFun\" @bgmprogress=\"pusherBGMProgressHandlerFun\"\n\t\t\t\t\t\t\t\t@bgmcomplete=\"pusherBGMCompleteHandlerFun\" @audiovolumenotify=\"pusherAudioVolumeNotifyFun\">\n\t\t\t\t\t\t\t</live-pusher>\n\t\t\t\t\t\t\t<view class=\"loading\" v-if=\"streamList.length === 0\">\n\t\t\t\t\t\t\t\t<view class=\"loading-img\">\n\t\t\t\t\t\t\t\t\t<image src=\"../../static/components/trtc-room/static/loading.png\"\n\t\t\t\t\t\t\t\t\t\tclass=\"rotate-img\"></image>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t<view class=\"loading-text\">等待接听中...</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"handle-btns\">\n\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"toggleAudioFun\">\n\t\t\t\t\t\t\t\t<image class=\"btn-image\"\n\t\t\t\t\t\t\t\t\t:src=\"(pusher.enableMic? '../../static/components/trtc-room/static/audio-true.png': '../../static/components/trtc-room/static/audio-false.png') + ' '\">\n\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"switchCamera\">\n\t\t\t\t\t\t\t\t<image class=\"btn-image\" src=\"../../static/components/trtc-room/static/switch.png\">\n\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t<!-- <view class=\"btn-normal\" bindtap=\"toggleVideoFun\">\n        <image class=\"btn-image\" src=\"{{pusher.enableCamera? '../../static/components/trtc-room/static/camera-true.png': '../../static/components/trtc-room/static/camera-false.png'}} \"></image>\n      </view> -->\n\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"toggleSoundModeFun\">\n\t\t\t\t\t\t\t\t<image class=\"btn-image\"\n\t\t\t\t\t\t\t\t\t:src=\"(streamList[0].soundMode === 'ear' ? '../../static/components/trtc-room/static/phone.png': '../../static/components/trtc-room/static/speaker-true.png') + ' '\">\n\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"bottom-btns\">\n\t\t\t\t\t\t\t<view class=\"btn-normal\" data-key=\"beautyLevel\" data-value=\"9|0\" data-value-type=\"number\"\n\t\t\t\t\t\t\t\t@tap=\"setPuserPropertyFun\">\n\t\t\t\t\t\t\t\t<image class=\"btn-image\"\n\t\t\t\t\t\t\t\t\t:src=\"(pusher.beautyLevel == 9 ? '../../static/components/trtc-room/static/beauty-true.png': '../../static/components/trtc-room/static/beauty-false.png') + ' '\">\n\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t<view class=\"btn-hangup\" @tap=\"hangUpFun\">\n\t\t\t\t\t\t\t\t<image class=\"btn-image\" src=\"../../static/components/trtc-room/static/hangup.png\">\n\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"toggleIMPanelFun\">\n\t\t\t\t\t\t\t\t<image class=\"btn-image\"\n\t\t\t\t\t\t\t\t\t:src=\"enableIM? '../../static/components/trtc-room/static/im.png': '../../static/components/trtc-room/static/im-disable.png'\">\n\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</block>\n\t\t\t</block>\n\t\t\t<block v-if=\"template === 'grid'\">\n\t\t\t\t<block data-type=\"template\" data-is=\"grid\"\n\t\t\t\t\tdata-attr=\"pusher, streamList, visibleStreamList, debug, enableIM, panelName, gridPagePlaceholderStreamList, gridPageCount, gridCurrentPage, gridPlayerPerPage, isShowMoreMenu, MICVolume, BGMVolume, BGMProgress, beautyStyle, beautyStyleArray, filterIndex, filterArray, audioReverbTypeArray\">\n\t\t\t\t\t<view class=\"template-grid\">\n\t\t\t\t\t\t<view class=\"column-layout\">\n\t\t\t\t\t\t\t<view class=\"column-1\">\n\t\t\t\t\t\t\t\t<view class=\"grid-scroll-container\" @touchstart=\"handleGridTouchStartFun\"\n\t\t\t\t\t\t\t\t\t@touchend=\"handleGridTouchEndFun\">\n\t\t\t\t\t\t\t\t\t<!-- <view id=\"grid-container-id\" class=\"grid-container {{visibleStreamList.length < 4 ? 'stream-' + visibleStreamList.length : visibleStreamList.length%2 == 0? 'stream-odd':'stream-even'}}\"> -->\n\t\t\t\t\t\t\t\t\t<view id=\"grid-container-id\" :class=\"sbstyle\" >\n\t\t\t\t\t\t\t\t\t\t<!-- :class=\"'grid-container ' + (visibleStreamList.length < 4 ? 'stream-' + visibleStreamList.length : 'stream-3')\"> -->\n\n\t\t\t\t\t\t\t\t\t\t<view\n\t\t\t\t\t\t\t\t\t\t\t:class=\"'view-container pusher-container ' + (pusher.isVisible && ((gridCurrentPage === 1 && gridPlayerPerPage > 3) || gridPlayerPerPage < 4)?'':'none')\">\n\t\t\t\t\t\t\t\t\t\t\t<live-pusher class=\"pusher\" :url=\"pusher.url\" :mode=\"pusher.mode\"\n\t\t\t\t\t\t\t\t\t\t\t\t:autopush=\"pusher.autopush\" :enable-camera=\"pusher.enableCamera\"\n\t\t\t\t\t\t\t\t\t\t\t\t:enable-mic=\"pusher.enableMic\" :muted=\"!pusher.enableMic\"\n\t\t\t\t\t\t\t\t\t\t\t\t:enable-agc=\"pusher.enableAgc\" :enable-ans=\"pusher.enableAns\"\n\t\t\t\t\t\t\t\t\t\t\t\t:enable-ear-monitor=\"pusher.enableEarMonitor\"\n\t\t\t\t\t\t\t\t\t\t\t\t:auto-focus=\"pusher.enableAutoFocus\" :zoom=\"pusher.enableZoom\"\n\t\t\t\t\t\t\t\t\t\t\t\t:min-bitrate=\"pusher.minBitrate\" :max-bitrate=\"pusher.maxBitrate\"\n\t\t\t\t\t\t\t\t\t\t\t\t:video-width=\"pusher.videoWidth\" :video-height=\"pusher.videoHeight\"\n\t\t\t\t\t\t\t\t\t\t\t\t:beauty=\"pusher.beautyLevel\" :whiteness=\"pusher.whitenessLevel\"\n\t\t\t\t\t\t\t\t\t\t\t\t:orientation=\"pusher.videoOrientation\" :aspect=\"pusher.videoAspect\"\n\t\t\t\t\t\t\t\t\t\t\t\t:device-position=\"pusher.frontCamera\"\n\t\t\t\t\t\t\t\t\t\t\t\t:remote-mirror=\"pusher.enableRemoteMirror\"\n\t\t\t\t\t\t\t\t\t\t\t\t:local-mirror=\"pusher.localMirror\"\n\t\t\t\t\t\t\t\t\t\t\t\t:background-mute=\"pusher.enableBackgroundMute\"\n\t\t\t\t\t\t\t\t\t\t\t\t:audio-quality=\"pusher.audioQuality\"\n\t\t\t\t\t\t\t\t\t\t\t\t:audio-volume-type=\"pusher.audioVolumeType\"\n\t\t\t\t\t\t\t\t\t\t\t\t:audio-reverb-type=\"pusher.audioReverbType\"\n\t\t\t\t\t\t\t\t\t\t\t\t:waiting-image=\"pusher.waitingImage\" :debug=\"debug\"\n\t\t\t\t\t\t\t\t\t\t\t\t:beauty-style=\"pusher.beautyStyle\" :filter=\"pusher.filter\"\n\t\t\t\t\t\t\t\t\t\t\t\t@statechange=\"pusherStateChangeHandlerFun\"\n\t\t\t\t\t\t\t\t\t\t\t\t@netstatus=\"pusherNetStatusHandlerFun\" @error=\"pusherErrorHandlerFun\"\n\t\t\t\t\t\t\t\t\t\t\t\t@bgmstart=\"pusherBGMStartHandlerFun\"\n\t\t\t\t\t\t\t\t\t\t\t\t@bgmprogress=\"pusherBGMProgressHandlerFun\"\n\t\t\t\t\t\t\t\t\t\t\t\t@bgmcomplete=\"pusherBGMCompleteHandlerFun\"\n\t\t\t\t\t\t\t\t\t\t\t\t@audiovolumenotify=\"pusherAudioVolumeNotifyFun\"></live-pusher>\n\t\t\t\t\t\t\t\t\t\t\t<view class=\"no-video\" v-if=\"!pusher.enableCamera\">\n\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/mute-camera-white.png\">\n\t\t\t\t\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t\t\t<!-- <view class=\"no-audio\" wx:if=\"{{!pusher.enableMic}}\">\n                <image class=\"image\" src=\"../../static/components/trtc-room/static/mute-mic-white.png\"></image>\n              </view>\n              <view class=\"audio-volume\" wx:if=\"{{pusher.enableMic}}\">\n                <image class=\"image\" src=\"../../static/components/trtc-room/static/micro-open.png\"></image>\n                <view class=\"audio-active\" style=\"height:{{pusher.volume}}%\">\n                  <image class=\"image\" src=\"../../static/components/trtc-room/static/audio-active.png\"></image>\n                </view>\n              </view> -->\n\t\t\t\t\t\t\t\t\t\t</view>\n\n\t\t\t\t\t\t\t\t\t\t<view v-for=\"(item, index) in visibleStreamList\" :key=\"index\"\n\t\t\t\t\t\t\t\t\t\t\t:class=\"'view-container player-container ' + (item.isVisible?'':'none')\"\n\t\t\t\t\t\t\t\t\t\t\t:id=\"'player-'+item.streamID\" :data-userid=\"item.userID\"\n\t\t\t\t\t\t\t\t\t\t\t:data-streamtype=\"item.streamType\" @tap=\"doubleTabToggleFullscreenFun\">\n\t\t\t\t\t\t\t\t\t\t\t<live-player class=\"player\" :id=\"item.streamID\" :data-userid=\"item.userID\"\n\t\t\t\t\t\t\t\t\t\t\t\t:data-streamid=\"item.streamID\" :data-streamtype=\"item.streamType\"\n\t\t\t\t\t\t\t\t\t\t\t\t:src=\"item.src\" mode=\"RTC\" :autoplay=\"item.autoplay\"\n\t\t\t\t\t\t\t\t\t\t\t\t:mute-audio=\"item.muteAudio\" :mute-video=\"item.muteVideo\"\n\t\t\t\t\t\t\t\t\t\t\t\t:orientation=\"item.orientation\" :object-fit=\"item.objectFit\"\n\t\t\t\t\t\t\t\t\t\t\t\t:background-mute=\"item.enableBackgroundMute\" :min-cache=\"item.minCache\"\n\t\t\t\t\t\t\t\t\t\t\t\t:max-cache=\"item.maxCache\" :sound-mode=\"item.soundMode\"\n\t\t\t\t\t\t\t\t\t\t\t\t:enable-recv-message=\"item.enableRecvMessage\"\n\t\t\t\t\t\t\t\t\t\t\t\t:auto-pause-if-navigate=\"item.autoPauseIfNavigate\"\n\t\t\t\t\t\t\t\t\t\t\t\t:auto-pause-if-open-native=\"item.autoPauseIfOpenNative\" :debug=\"debug\"\n\t\t\t\t\t\t\t\t\t\t\t\t@statechange=\"playerStateChangeFun\"\n\t\t\t\t\t\t\t\t\t\t\t\t@fullscreenchange=\"playerFullscreenChangeFun\"\n\t\t\t\t\t\t\t\t\t\t\t\t@netstatus=\"playerNetStatusFun\"\n\t\t\t\t\t\t\t\t\t\t\t\t@audiovolumenotify=\"playerAudioVolumeNotifyFun\"></live-player>\n\t\t\t\t\t\t\t\t\t\t\t<view class=\"no-video\" v-if=\"item.muteVideo\">\n\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/display-pause-white.png\">\n\t\t\t\t\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t\t\t\t\t\t<view class=\"text\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{{item.userID}}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t\t\t<view class=\"no-video\" v-if=\"!item.hasVideo && !item.muteVideo\">\n\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/mute-camera-white.png\">\n\t\t\t\t\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t\t\t\t\t\t<view class=\"text\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{{item.userID}}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t\t\t\t<view class=\"text\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>对方摄像头未打开</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t\t\t<view class=\"no-audio\" v-if=\"!item.hasAudio\">\n\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/mute-mic-white.png\">\n\t\t\t\t\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t\t\t<view class=\"audio-volume\" v-if=\"item.hasAudio\">\n\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/micro-open.png\">\n\t\t\t\t\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t\t\t\t\t\t<view class=\"audio-active\" :style=\"'height:' + item.volume + '%'\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/audio-active.png\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t\t\t<view class=\"operation-bar\">\n\t\t\t\t\t\t\t\t\t\t\t\t<view class=\"operation-item-container\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<view class=\"operation-item\" @tap.stop=\"handleSubscribeRemoteAudioFun\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:data-user-i-d=\"item.userID\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:data-stream-type=\"item.streamType\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"item-image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:src=\"item.muteAudio? '../../static/components/trtc-room/static/speaker-false.png': '../../static/components/trtc-room/static/speaker-white.png'\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<view class=\"operation-item\" @tap.stop=\"handleSubscribeRemoteVideoFun\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:data-user-i-d=\"item.userID\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:data-stream-type=\"item.streamType\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"item-image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:src=\"item.muteVideo? '../../static/components/trtc-room/static/display-pause-false.png': '../../static/components/trtc-room/static/display-play-white.png'\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<view class=\"operation-item\" @tap=\"toggleFullscreenFun\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:data-user-i-d=\"item.userID\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:data-stream-type=\"item.streamType\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"item-image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/fullscreen-white.png\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t\t</view>\n\n\t\t\t\t\t\t\t\t\t\t<view v-for=\"(item, index) in gridPagePlaceholderStreamList\" :key=\"index\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"view-container player-container player-placeholder\">\n\t\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\n\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/mute-camera-white.png\">\n\t\t\t\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t<view class=\"column-2\">\n\t\t\t\t\t\t\t\t<view class=\"menu\" v-if=\"!isShowMoreMenu\">\n\t\t\t\t\t\t\t\t\t<view class=\"menu-item\" @tap=\"switchSettingPanelFun\">\n\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/setting-white.png\">\n\t\t\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t<view class=\"menu-item\" @tap=\"switchMemberListPanelFun\">\n\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/list-white.png\">\n\t\t\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t<view class=\"menu-item\" @tap=\"hangUpFun\">\n\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/hangup-red.png\">\n\t\t\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t<view class=\"menu-item\" @tap=\"toggleIMPanelFun\">\n\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\n\t\t\t\t\t\t\t\t\t\t\t:src=\"enableIM? '../../static/components/trtc-room/static/im-white.png': '../../static/components/trtc-room/static/im-disable.png'\">\n\t\t\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\n\t\t\t\t\t\t</view>\n\n\t\t\t\t\t\t<view class=\"pages-container\" v-if=\"gridPageCount > 1\">\n\t\t\t\t\t\t\t<view v-for=\"(item, index) in gridPageCount\" :key=\"index\"\n\t\t\t\t\t\t\t\t:class=\"'page-item ' + (index+1 === gridCurrentPage? 'current':'')\"></view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view :class=\"'panel memberlist-panel ' + (panelName === 'memberlist-panel' ? '' : 'none')\">\n\t\t\t\t\t\t\t<view @tap=\"handleMaskerClickFun\" class=\"close-btn\">X</view>\n\t\t\t\t\t\t\t<view class=\"panel-header\">成员列表</view>\n\t\t\t\t\t\t\t<view class=\"panel-body\">\n\t\t\t\t\t\t\t\t<view class=\"panel-tips\" v-if=\"streamList.length === 0\">暂无成员</view>\n\t\t\t\t\t\t\t\t<scroll-view class=\"scroll-container\" scroll-y=\"true\">\n\t\t\t\t\t\t\t\t\t<view v-for=\"(item, index) in streamList\" :key=\"index\" class=\"member-item\">\n\t\t\t\t\t\t\t\t\t\t<view class=\"member-id\">{{item.userID}}</view>\n\t\t\t\t\t\t\t\t\t\t<view class=\"member-btns\">\n\t\t\t\t\t\t\t\t\t\t\t<button class=\"btn\" hover-class=\"btn-hover\" :data-userid=\"item.userID\"\n\t\t\t\t\t\t\t\t\t\t\t\t:data-streamtype=\"item.streamType\" data-key=\"objectFit\"\n\t\t\t\t\t\t\t\t\t\t\t\tdata-value=\"fillCrop|contain\"\n\t\t\t\t\t\t\t\t\t\t\t\t@tap=\"setPlayerPropertyFun\">{{item.objectFit === 'fillCrop'? '填充':'适应'}}</button>\n\t\t\t\t\t\t\t\t\t\t\t<button class=\"btn\" hover-class=\"btn-hover\" :data-userid=\"item.userID\"\n\t\t\t\t\t\t\t\t\t\t\t\t:data-streamtype=\"item.streamType\" data-key=\"orientation\"\n\t\t\t\t\t\t\t\t\t\t\t\tdata-value=\"vertical|horizontal\"\n\t\t\t\t\t\t\t\t\t\t\t\t@tap=\"setPlayerPropertyFun\">{{item.orientation === 'vertical'? '竖屏':'横屏'}}</button>\n\t\t\t\t\t\t\t\t\t\t\t<button class=\"btn\" hover-class=\"btn-hover\" :data-userid=\"item.userID\"\n\t\t\t\t\t\t\t\t\t\t\t\t:data-streamtype=\"item.streamType\" @tap=\"switchStreamTypeFun\"\n\t\t\t\t\t\t\t\t\t\t\t\tv-if=\"item.streamType === 'main'\">{{item._definitionType === 'small'? '小画面':'主画面'}}</button>\n\t\t\t\t\t\t\t\t\t\t\t<button class=\"btn\" hover-class=\"btn-hover\" :data-userid=\"item.userID\"\n\t\t\t\t\t\t\t\t\t\t\t\t:data-streamtype=\"item.streamType\"\n\t\t\t\t\t\t\t\t\t\t\t\t@tap=\"handleSnapshotClickFun\">截屏</button>\n\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t</scroll-view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view :class=\"'panel setting-panel ' + (panelName === 'setting-panel' ? '' : 'none')\">\n\t\t\t\t\t\t\t<view @tap=\"handleMaskerClickFun\" class=\"close-btn\">X</view>\n\t\t\t\t\t\t\t<view class=\"panel-header\">推流设置</view>\n\t\t\t\t\t\t\t<view class=\"panel-body\">\n\t\t\t\t\t\t\t\t<scroll-view class=\"scroll-container\" scroll-y=\"true\">\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">启用摄像头</view>\n\t\t\t\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"toggleVideoFun\">\n\t\t\t\t\t\t\t\t\t\t\t<image class=\"btn-image\"\n\t\t\t\t\t\t\t\t\t\t\t\t:src=\"pusher.enableCamera? '../../static/components/trtc-room/static/camera-true.png': '../../static/components/trtc-room/static/camera-false.png'\">\n\t\t\t\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">启用麦克风</view>\n\t\t\t\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"toggleAudioFun\">\n\t\t\t\t\t\t\t\t\t\t\t<image class=\"btn-image\"\n\t\t\t\t\t\t\t\t\t\t\t\t:src=\"pusher.enableMic? '../../static/components/trtc-room/static/audio-true.png': '../../static/components/trtc-room/static/audio-false.png'\">\n\t\t\t\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">切换摄像头</view>\n\t\t\t\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"switchCamera\">\n\t\t\t\t\t\t\t\t\t\t\t<image class=\"btn-image\"\n\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/switch.png\">\n\t\t\t\t\t\t\t\t\t\t\t</image>\n\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">开启美颜</view>\n\t\t\t\t\t\t\t\t\t\t<switch class=\"setting-switch\" color=\"#006eff\"\n\t\t\t\t\t\t\t\t\t\t\t:checked=\"pusher.beautyLevel == 9 ? true: false\" data-key=\"beautyLevel\"\n\t\t\t\t\t\t\t\t\t\t\tdata-value=\"9|0\" data-value-type=\"number\" @change=\"setPuserPropertyFun\">\n\t\t\t\t\t\t\t\t\t\t</switch>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">开启AGC</view>\n\t\t\t\t\t\t\t\t\t\t<switch class=\"setting-switch\" color=\"#006eff\" :checked=\"pusher.enableAgc\"\n\t\t\t\t\t\t\t\t\t\t\tdata-key=\"enableAgc\" data-value=\"true\" data-value-type=\"boolean\"\n\t\t\t\t\t\t\t\t\t\t\t@change=\"setPuserPropertyFun\"></switch>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">开启ANS</view>\n\t\t\t\t\t\t\t\t\t\t<switch class=\"setting-switch\" color=\"#006eff\" :checked=\"pusher.enableAns\"\n\t\t\t\t\t\t\t\t\t\t\tdata-key=\"enableAns\" data-value=\"true\" data-value-type=\"boolean\"\n\t\t\t\t\t\t\t\t\t\t\t@change=\"setPuserPropertyFun\"></switch>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">开启横屏推流</view>\n\t\t\t\t\t\t\t\t\t\t<switch class=\"setting-switch\" color=\"#006eff\"\n\t\t\t\t\t\t\t\t\t\t\t:checked=\"pusher.videoOrientation === 'vertical' ? false: true\"\n\t\t\t\t\t\t\t\t\t\t\tdata-key=\"videoOrientation\" data-value=\"horizontal|vertical\"\n\t\t\t\t\t\t\t\t\t\t\tdata-value-type=\"string\" @change=\"setPuserPropertyFun\"></switch>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t</scroll-view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view :class=\"'panel bgm-panel ' + (panelName === 'bgm-panel' ? '' : 'none')\">\n\t\t\t\t\t\t\t<view @tap=\"handleMaskerClickFun\" class=\"close-btn\">X</view>\n\t\t\t\t\t\t\t<view class=\"panel-header\">背景音乐</view>\n\t\t\t\t\t\t\t<view class=\"panel-body\">\n\t\t\t\t\t\t\t\t<view class=\"setting-option\">\n\t\t\t\t\t\t\t\t\t<view class=\"label\">MIC音量</view>\n\t\t\t\t\t\t\t\t\t<view class=\"slider-content\">\n\t\t\t\t\t\t\t\t\t\t<slider :value=\"MICVolume\" min=\"0\" max=\"100\" show-value=\"true\"\n\t\t\t\t\t\t\t\t\t\t\tactiveColor=\"#006eff\" @change=\"changePropertyFun\"\n\t\t\t\t\t\t\t\t\t\t\tdata-property-name=\"MICVolume\"></slider>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t<view class=\"setting-option\">\n\t\t\t\t\t\t\t\t\t<view class=\"label\">BGM音量</view>\n\t\t\t\t\t\t\t\t\t<view class=\"slider-content\">\n\t\t\t\t\t\t\t\t\t\t<slider :value=\"BGMVolume\" min=\"0\" max=\"100\" show-value=\"true\"\n\t\t\t\t\t\t\t\t\t\t\tactiveColor=\"#006eff\" @change=\"changePropertyFun\"\n\t\t\t\t\t\t\t\t\t\t\tdata-property-name=\"BGMVolume\"></slider>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t<view class=\"setting-option\">\n\t\t\t\t\t\t\t\t\t<view class=\"label\">播放进度</view>\n\t\t\t\t\t\t\t\t\t<view class=\"slider-content\">\n\t\t\t\t\t\t\t\t\t\t<progress activeColor=\"#006eff\" :percent=\"BGMProgress\"></progress>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t<view class=\"menu\">\n\t\t\t\t\t\t\t\t\t<view class=\"menu-item\" @tap=\"handleBGMOperationFun\" data-operation-name=\"playBGM\">\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">播放</view>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t<view class=\"menu-item\" @tap=\"handleBGMOperationFun\" data-operation-name=\"pauseBGM\">\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">暂停</view>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t<view class=\"menu-item\" @tap=\"handleBGMOperationFun\" data-operation-name=\"resumeBGM\">\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">继续</view>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t<view class=\"menu-item\" @tap=\"handleBGMOperationFun\" data-operation-name=\"stopBGM\">\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">停止</view>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view :class=\"'masker ' + (panelName =='' ? 'none' : '')\" @tap=\"handleMaskerClickFun\"></view>\n\t\t\t\t\t</view>\n\t\t\t\t</block>\n\t\t\t</block>\n\t\t\t<block v-if=\"template === 'custom'\">\n\t\t\t\t<block data-type=\"template\" data-is=\"custom\" data-attr=\"pusher, streamList, debug\">\n\t\t\t\t\t<view class=\"template-custom\">\n\t\t\t\t\t\t<view class=\"players-container\">\n\t\t\t\t\t\t\t<view v-for=\"(item, index) in streamList\" :key=\"index\"\n\t\t\t\t\t\t\t\tv-if=\"item.src && (item.hasVideo || item.hasAudio)\"\n\t\t\t\t\t\t\t\t:class=\"'view-container player-container ' + (item.isVisible?'':'none')\"\n\t\t\t\t\t\t\t\t:style=\"'left:' + item.xAxis + 'top:' + item.yAxis + 'width:' + item.width + 'height:' + item.height + 'z-index:' + item.zIndex + ''\">\n\t\t\t\t\t\t\t\t<live-player class=\"player\" :id=\"item.streamID\" :data-userid=\"item.userID\"\n\t\t\t\t\t\t\t\t\t:data-streamid=\"item.streamID\" :data-streamtype=\"item.streamType\" :src=\"item.src\"\n\t\t\t\t\t\t\t\t\t:mode=\"item.mode\" :autoplay=\"item.autoplay\" :mute-audio=\"item.muteAudio\"\n\t\t\t\t\t\t\t\t\t:mute-video=\"item.muteVideo\" :orientation=\"item.orientation\"\n\t\t\t\t\t\t\t\t\t:object-fit=\"item.objectFit\" :background-mute=\"item.enableBackgroundMute\"\n\t\t\t\t\t\t\t\t\t:min-cache=\"item.minCache\" :max-cache=\"item.maxCache\" :sound-mode=\"item.soundMode\"\n\t\t\t\t\t\t\t\t\t:enable-recv-message=\"item.enableRecvMessage\"\n\t\t\t\t\t\t\t\t\t:auto-pause-if-navigate=\"item.autoPauseIfNavigate\"\n\t\t\t\t\t\t\t\t\t:auto-pause-if-open-native=\"item.autoPauseIfOpenNative\" :debug=\"debug\"\n\t\t\t\t\t\t\t\t\t@statechange=\"playerStateChangeFun\" @fullscreenchange=\"playerFullscreenChangeFun\"\n\t\t\t\t\t\t\t\t\t@netstatus=\"playerNetStatusFun\" @audiovolumenotify=\"playerAudioVolumeNotifyFun\">\n\t\t\t\t\t\t\t\t</live-player>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view :class=\"'view-container pusher-container ' + (pusher.isVisible?'':'none')\"\n\t\t\t\t\t\t\t:style=\"'left:' + pusher.xAxis + 'top:' + pusher.yAxis + 'width:' + pusher.width + 'height:' + pusher.height + 'z-index:' + pusher.zIndex + ''\">\n\t\t\t\t\t\t\t<live-pusher class=\"pusher\" :url=\"pusher.url\" :mode=\"pusher.mode\"\n\t\t\t\t\t\t\t\t:autopush=\"pusher.autopush\" :enable-camera=\"pusher.enableCamera\"\n\t\t\t\t\t\t\t\t:enable-mic=\"pusher.enableMic\" :muted=\"!pusher.enableMic\" :enable-agc=\"pusher.enableAgc\"\n\t\t\t\t\t\t\t\t:enable-ans=\"pusher.enableAns\" :enable-ear-monitor=\"pusher.enableEarMonitor\"\n\t\t\t\t\t\t\t\t:auto-focus=\"pusher.enableAutoFocus\" :zoom=\"pusher.enableZoom\"\n\t\t\t\t\t\t\t\t:min-bitrate=\"pusher.minBitrate\" :max-bitrate=\"pusher.maxBitrate\"\n\t\t\t\t\t\t\t\t:video-width=\"pusher.videoWidth\" :video-height=\"pusher.videoHeight\"\n\t\t\t\t\t\t\t\t:beauty=\"pusher.beautyLevel\" :whiteness=\"pusher.whitenessLevel\"\n\t\t\t\t\t\t\t\t:orientation=\"pusher.videoOrientation\" :aspect=\"pusher.videoAspect\"\n\t\t\t\t\t\t\t\t:device-position=\"pusher.frontCamera\" :remote-mirror=\"pusher.enableRemoteMirror\"\n\t\t\t\t\t\t\t\t:local-mirror=\"pusher.localMirror\" :background-mute=\"pusher.enableBackgroundMute\"\n\t\t\t\t\t\t\t\t:audio-quality=\"pusher.audioQuality\" :audio-volume-type=\"pusher.audioVolumeType\"\n\t\t\t\t\t\t\t\t:audio-reverb-type=\"pusher.audioReverbType\" :waiting-image=\"pusher.waitingImage\"\n\t\t\t\t\t\t\t\t:debug=\"debug\" @statechange=\"pusherStateChangeHandlerFun\"\n\t\t\t\t\t\t\t\t@netstatus=\"pusherNetStatusHandlerFun\" @error=\"pusherErrorHandlerFun\"\n\t\t\t\t\t\t\t\t@bgmstart=\"pusherBGMStartHandlerFun\" @bgmprogress=\"pusherBGMProgressHandlerFun\"\n\t\t\t\t\t\t\t\t@bgmcomplete=\"pusherBGMCompleteHandlerFun\" @audiovolumenotify=\"pusherAudioVolumeNotifyFun\">\n\t\t\t\t\t\t\t</live-pusher>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</block>\n\t\t\t</block>\n\n\t\t\t<view class=\"im-panel\" v-if=\"enableIM && showIMPanel\">\n\t\t\t\t<view class=\"message-panel-body\">\n\t\t\t\t\t<scroll-view scroll-y=\"true\" class=\"message-scroll-container\"\n\t\t\t\t\t\t:scroll-into-view=\"'message' + (messageList.length-1)\" scroll-with-animation=\"true\">\n\t\t\t\t\t\t<view class=\"message-list\">\n\t\t\t\t\t\t\t<view v-for=\"(item, index) in messageList\" :key=\"index\" class=\"message-item\"\n\t\t\t\t\t\t\t\t:id=\"'message' + index\">\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t:class=\"'user-name ' + (item.name == config.userID?'mine':'')\">{{item.name}}</span>\n\t\t\t\t\t\t\t\t<span class=\"message-content\">{{item.message}}</span>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t<view id=\"message-bottom\"></view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</scroll-view>\n\n\t\t\t\t</view>\n\t\t\t\t<view class=\"message-panel-bottom\">\n\t\t\t\t\t<view class=\"message-input-container\">\n\t\t\t\t\t\t<input class=\"message-input\" type=\"text\" :value=\"messageContent\" @input=\"inputIMMessageFun\"\n\t\t\t\t\t\t\t@confirm=\"sendIMMessageFun\" confirm-type=\"send\" placeholder=\"请输入消息\" maxlength=\"200\"\n\t\t\t\t\t\t\tplaceholder-style=\"color:#ffffff;opacity: 0.55;\"></input>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"message-send-btn\">\n\t\t\t\t\t\t<button class=\"btn\" @tap=\"sendIMMessageFun\" hover-class=\"btn-hover\">发送</button>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t<view @tap=\"toggleIMPanelFun\" class=\"close-btn\">X</view>\n\t\t\t</view>\n\n\t\t\t<view :class=\"'debug-info-btn ' + (debugMode && !debugPanel?'':'none')\">\n\t\t\t\t<button class=\"debug-btn\" @tap=\"debugTogglePanelFun\" hover-class=\"button-hover\">Debug</button>\n\t\t\t</view>\n\t\t\t<view :class=\"'debug-info ' + (debugMode && debugPanel?'':'none')\">\n\t\t\t\t<view @tap=\"debugTogglePanelFun\" class=\"close-btn\">X</view>\n\t\t\t\t<view>appVersion: {{appVersion}}</view>\n\t\t\t\t<view>libVersion: {{libVersion}}</view>\n\t\t\t\t<view>template: {{template}}</view>\n\t\t\t\t<view>debug: <button :class=\"(debug?'':'false') + ' debug-btn'\" @tap=\"debugToggleVideoDebugFun\"\n\t\t\t\t\t\thover-class=\"button-hover\">{{debug}}</button></view>\n\t\t\t\t<view>userID: {{pusher.userID}}</view>\n\t\t\t\t<view>roomID: {{pusher.roomID}}</view>\n\t\t\t\t<view>camera: <button :class=\"(pusher.enableCamera?'':'false') + ' debug-btn'\" @tap=\"toggleVideoFun\"\n\t\t\t\t\t\thover-class=\"button-hover\">{{pusher.enableCamera}}</button></view>\n\t\t\t\t<view>mic: <button :class=\"(pusher.enableMic?'':'false') + ' debug-btn'\" @tap=\"toggleAudioFun\"\n\t\t\t\t\t\thover-class=\"button-hover\">{{pusher.enableMic}}</button></view>\n\t\t\t\t<view>switch camera: <button class=\"debug-btn\" @tap=\"switchCamera\"\n\t\t\t\t\t\thover-class=\"button-hover\">{{cameraPosition||pusher.frontCamera}}</button></view>\n\t\t\t\t<view>Room:\n\t\t\t\t\t<button class=\"debug-btn\" @tap=\"debugEnterRoomFun\" hover-class=\"button-hover\">Enter</button>\n\t\t\t\t\t<button class=\"debug-btn\" @tap=\"debugExitRoomFun\" hover-class=\"button-hover\">Exit</button>\n\t\t\t\t\t<button class=\"debug-btn\" @tap=\"debugGoBackFun\" hover-class=\"button-hover\">Go back</button>\n\t\t\t\t</view>\n\t\t\t\t<view>IM: <button class=\"debug-btn\" @tap=\"debugSendRandomMessageFun\"\n\t\t\t\t\t\thover-class=\"button-hover\">send</button></view>\n\t\t\t\t<view>user count: {{userList.length}}</view>\n\t\t\t\t<view v-for=\"(item, index) in userList\" :key=\"index\">{{item.userID}}|\n\t\t\t\t\tmainV:<span\n\t\t\t\t\t\t:class=\"'text ' + (item.hasMainVideo? 'true' : 'false' )\">{{item.hasMainVideo||false}}</span>|\n\t\t\t\t\tmainA:<span\n\t\t\t\t\t\t:class=\"'text ' + (item.hasMainAudio? 'true' : 'false' )\">{{item.hasMainAudio||false}}</span>|\n\t\t\t\t\tauxV:<span\n\t\t\t\t\t\t:class=\"'text ' + (item.hasAuxVideo? 'true' : 'false' )\">{{item.hasAuxVideo||false}}</span>\n\t\t\t\t</view>\n\t\t\t\t<view>stream count: {{streamList.length}}</view>\n\t\t\t\t<view v-for=\"(item, index) in streamList\" :key=\"index\">{{item.userID}}|{{item.streamType}}|\n\t\t\t\t\tSubV:<button :class=\"(!item.muteVideo?'':'false') + ' debug-btn'\" @tap=\"debugToggleRemoteVideoFun\"\n\t\t\t\t\t\thover-class=\"button-hover\" :data-user-i-d=\"item.userID\"\n\t\t\t\t\t\t:data-stream-type=\"item.streamType\">{{!item.muteVideo}}</button>|\n\t\t\t\t\tSubA:<button :class=\"(!item.muteAudio?'':'false') + ' debug-btn'\" @tap=\"debugToggleRemoteAudioFun\"\n\t\t\t\t\t\thover-class=\"button-hover\" :data-user-i-d=\"item.userID\"\n\t\t\t\t\t\t:data-stream-type=\"item.streamType\">{{!item.muteAudio}}</button></view>\n\t\t\t</view>\n\t\t</view>\n\t</view>\n</template>\n\n<script>\n\timport UserController from \"./controller/user-controller\";\n\timport Pusher from \"./model/pusher\";\n\timport {\n\t\tEVENT,\n\t\tDEFAULT_COMPONENT_CONFIG\n\t} from \"./common/constants\";\n\timport Event from \"./utils/event\";\n\timport * as ENV from \"./utils/environment\";\n\timport TIM from \"./libs/tim-wx\";\n\timport MTA from \"./libs/mta_analysis\";\n\tconst TAG_NAME = 'TRTC-ROOM';\n\tconst IM_GROUP_TYPE = TIM.TYPES\n\t.GRP_CHATROOM; // TIM.TYPES.GRP_CHATROOM 体验版IM无数量限制，成员20个， TIM.TYPES.GRP_AVCHATROOM IM体验版最多10个，升级后无限制\n\t// TIM.TYPES.GRP_CHATROOM 体验版IM无数量限制，成员20个， TIM.TYPES.GRP_AVCHATROOM IM体验版最多10个，升级后无限制\n\tlet touchX = 0;\n\tlet touchY = 0;\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tpusher: null,\n\t\t\t\tdebugPanel: true,\n\t\t\t\t// 是否打开组件调试面板\n\t\t\t\tdebug: false,\n\t\t\t\t// 是否打开player pusher 的调试信息\n\t\t\t\tstreamList: [],\n\t\t\t\t// 用于渲染player列表,存储stram\n\t\t\t\tvisibleStreamList: [],\n\t\t\t\t// 有音频或者视频的StreamList\n\t\t\t\tuserList: [],\n\t\t\t\t// 扁平化的数据用来返回给用户\n\t\t\t\ttemplate: '',\n\t\t\t\t// 不能设置默认值，当默认值和传入组件的值不一致时，iOS渲染失败\n\t\t\t\tcameraPosition: '',\n\t\t\t\t// 摄像头位置，用于debug\n\t\t\t\tpanelName: '',\n\t\t\t\t// 控制面板名称，包括 setting-panel  memberlist-panel\n\t\t\t\tlocalVolume: 0,\n\t\t\t\tremoteVolumeList: [],\n\t\t\t\tenableIM: false,\n\t\t\t\t// 用于组件内渲染\n\t\t\t\tshowIMPanel: false,\n\t\t\t\texitIMThrottle: false,\n\t\t\t\tmessageContent: '',\n\t\t\t\tmessageList: [],\n\t\t\t\t// 仅保留10条消息\n\t\t\t\tmaxMessageListLength: 10,\n\t\t\t\tmessageListScrollTop: 0,\n\t\t\t\tappVersion: ENV.APP_VERSION,\n\t\t\t\tlibVersion: ENV.LIB_VERSION,\n\t\t\t\thasGridPageTipsShow: false,\n\t\t\t\tgridPageCount: 0,\n\t\t\t\t// grid 布局 player 分页的总页数\n\t\t\t\tgridCurrentPage: 1,\n\t\t\t\t// grid 布局 当前页码\n\t\t\t\tgridPlayerPerPage: 4,\n\t\t\t\t// grid 布局每页 player的数量, 如果大于3，在逻辑里第一页需要减1。等于3 pusher 在每一页都出现。可选值: 3,4\n\t\t\t\tgridPagePlaceholderStreamList: [],\n\t\t\t\t// 占位数量\n\t\t\t\tisFullscreenDevice: ENV.IS_FULLSCREEN_DEVICE,\n\t\t\t\tisShowMoreMenu: false,\n\t\t\t\tMICVolume: 50,\n\t\t\t\tBGMVolume: 50,\n\t\t\t\tBGMProgress: 0,\n\t\t\t\tbeautyStyle: 'smooth',\n\t\t\t\tbeautyStyleArray: [{\n\t\t\t\t\tvalue: 'smooth',\n\t\t\t\t\tlabel: '光滑',\n\t\t\t\t\tchecked: true\n\t\t\t\t}, {\n\t\t\t\t\tvalue: 'nature',\n\t\t\t\t\tlabel: '自然',\n\t\t\t\t\tchecked: false\n\t\t\t\t}, {\n\t\t\t\t\tvalue: 'close',\n\t\t\t\t\tlabel: '关闭',\n\t\t\t\t\tchecked: false\n\t\t\t\t}],\n\t\t\t\tfilterIndex: 0,\n\t\t\t\tfilterArray: [{\n\t\t\t\t\tvalue: 'standard',\n\t\t\t\t\tlabel: '标准'\n\t\t\t\t}, {\n\t\t\t\t\tvalue: 'pink',\n\t\t\t\t\tlabel: '粉嫩'\n\t\t\t\t}, {\n\t\t\t\t\tvalue: 'nostalgia',\n\t\t\t\t\tlabel: '怀旧'\n\t\t\t\t}, {\n\t\t\t\t\tvalue: 'blues',\n\t\t\t\t\tlabel: '蓝调'\n\t\t\t\t}, {\n\t\t\t\t\tvalue: 'romantic',\n\t\t\t\t\tlabel: '浪漫'\n\t\t\t\t}, {\n\t\t\t\t\tvalue: 'cool',\n\t\t\t\t\tlabel: '清凉'\n\t\t\t\t}, {\n\t\t\t\t\tvalue: 'fresher',\n\t\t\t\t\tlabel: '清新'\n\t\t\t\t}, {\n\t\t\t\t\tvalue: 'solor',\n\t\t\t\t\tlabel: '日系'\n\t\t\t\t}, {\n\t\t\t\t\tvalue: 'aestheticism',\n\t\t\t\t\tlabel: '唯美'\n\t\t\t\t}, {\n\t\t\t\t\tvalue: 'whitening',\n\t\t\t\t\tlabel: '美白'\n\t\t\t\t}, {\n\t\t\t\t\tvalue: 'cerisered',\n\t\t\t\t\tlabel: '樱红'\n\t\t\t\t}],\n\t\t\t\taudioReverbType: 0,\n\t\t\t\taudioReverbTypeArray: ['关闭', 'KTV', '小房间', '大会堂', '低沉', '洪亮', '金属声', '磁性'],\n\t\t\t\tdebugMode: \"\"\n\t\t\t};\n\t\t},\n        computed: {\n            sbstyle() {\n                let { visibleStreamList } = this\n                return 'grid-container ' + (visibleStreamList.length < 4 ? 'stream-' + visibleStreamList.length : 'stream-3')\n            }\n        },\n\t\tcomponents: {},\n\t\tprops: {\n\t\t\t// 必要的初始化参数\n\t\t\tconfig: {\n\t\t\t\ttype: Object,\n\t\t\t\tdefault: () => ({\n\t\t\t\t\tsdkAppID: '',\n\t\t\t\t\tuserID: '',\n\t\t\t\t\tuserSig: '',\n\t\t\t\t\ttemplate: '',\n\t\t\t\t\tdebugMode: false,\n\t\t\t\t\t// 是否开启调试模式\n\t\t\t\t\tenableIM: false // 是否开启 IM\n\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\twatch: {\n\t\t\tconfig: {\n\t\t\t\thandler: function(newVal, oldVal) {\n\t\t\t\t\tthis.propertyObserverFun({\n\t\t\t\t\t\t'name': 'config',\n\t\t\t\t\t\tnewVal,\n\t\t\t\t\t\toldVal\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\timmediate: true,\n\t\t\t\tdeep: true\n\t\t\t}\n\t\t},\n\t\tcreated: function() {\n\t\t\t// 在组件实例刚刚被创建时执行\n\t\t\tconsole.log(TAG_NAME, 'created', ENV);\n\t\t\tMTA.App.init({\n\t\t\t\tappID: '500710685',\n\t\t\t\teventID: '500710697',\n\t\t\t\tautoReport: true,\n\t\t\t\tstatParam: true\n\t\t\t});\n\t\t},\n\t\tbeforeMount: function() {\n\t\t\t// 在组件实例进入页面节点树时执行\n\t\t\tconsole.log(TAG_NAME, 'attached');\n\t\t\tthis.initFun();\n\t\t\tMTA.Page.stat();\n\t\t},\n\t\tmounted: function() {\n\t\t\t// 在组件在视图层布局完成后执行\n\t\t\tconsole.log(TAG_NAME, 'ready');\n\t\t},\n\t\tdestroyed: function() {\n\t\t\t// 在组件实例被从页面节点树移除时执行\n\t\t\tconsole.log(TAG_NAME, 'detached'); // 停止所有拉流，并重置数据\n\n\t\t\tthis.exitRoom();\n\t\t},\n\t\terror: function(error) {\n\t\t\t// 每当组件方法抛出错误时执行\n\t\t\tconsole.log(TAG_NAME, 'error', error);\n\t\t},\n\t\tonPageShow: function() {\n\t\t\t// 组件所在的页面被展示时执行\n\t\t\tconsole.log(TAG_NAME, 'show status:', this.status);\n\n\t\t\tif (this.status.isPending) {\n\t\t\t\t// 经历了 5000 挂起事件\n\t\t\t\tthis.status.isPending = false; // 修复iOS 最小化触发5000事件后，音频推流失败的问题\n\t\t\t\t// if (ENV.IS_IOS && this.data.pusher.enableMic) {\n\t\t\t\t//   this.unpublishLocalAudio().then(()=>{\n\t\t\t\t//     this.publishLocalAudio()\n\t\t\t\t//   })\n\t\t\t\t// }\n\t\t\t\t// 经历了 5001 浮窗关闭事件，小程序底层会自动退房，恢复小程序时组件需要重新进房\n\t\t\t\t// 重新进房\n\n\t\t\t\tthis.enterRoom({\n\t\t\t\t\troomID: this.config.roomID\n\t\t\t\t}).then(() => { // 进房后开始推送视频或音频\n\t\t\t\t\t// setTimeout(()=>{\n\t\t\t\t\t//   this.publishLocalVideo()\n\t\t\t\t\t//   this.publishLocalAudio()\n\t\t\t\t\t// }, 2000)\n\t\t\t\t});\n\t\t\t} else if (ENV.IS_ANDROID && this.status.pageLife === 'hide' && this.status.isOnHideAddStream && this\n\t\t\t\t.streamList.length > 0) {\n\t\t\t\t// 微信没有提供明确的最小化事件，onHide事件，不一定是最小化\n\t\t\t\t// 获取所有的player 清空 src 重新赋值 验证无效\n\t\t\t\t// 清空 visibleStreamList 重新赋值， 验证无效\n\t\t\t\t// 退房重新进房，有效但是成本比较高\n\t\t\t\t// 将标记了 isOnHideAdd 的 stream 的 palyer 销毁并重新渲染\n\t\t\t\tconst streamList = this.streamList;\n\t\t\t\tlet tempStreamList = []; // 过滤 onHide 时新增的 stream\n\n\t\t\t\tfor (let i = 0; i < streamList.length; i++) {\n\t\t\t\t\tif (streamList[i].isOnHideAdd && streamList[i].playerContext) {\n\t\t\t\t\t\tconst stream = streamList[i];\n\t\t\t\t\t\ttempStreamList.push(stream);\n\t\t\t\t\t\tstream.playerContext = undefined;\n\t\t\t\t\t\tstreamList.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t} // 设置渲染，销毁onHide 时新增的 player\n\n\n\t\t\t\tthis.setListFun({\n\t\t\t\t\tstreamList: streamList\n\t\t\t\t}).then(() => {\n\t\t\t\t\tfor (let i = 0; i < tempStreamList.length; i++) {\n\t\t\t\t\t\tstreamList.push(tempStreamList[i]);\n\t\t\t\t\t} // 设置渲染，重新创建 onHide 时新增的 player\n\t\t\t\t\t// setTimeout(()=>{\n\n\n\t\t\t\t\tthis.setListFun({\n\t\t\t\t\t\tstreamList: streamList\n\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\tfor (let i = 0; i < tempStreamList.length; i++) {\n\t\t\t\t\t\t\ttempStreamList[i] = uni.createLivePlayerContext(tempStreamList[i].streamID,\n\t\t\t\t\t\t\t\tthis);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttempStreamList = [];\n\t\t\t\t\t}); // }, 500)\n\t\t\t\t});\n\t\t\t\tthis.status.isOnHideAddStream = false;\n\t\t\t}\n\n\t\t\tthis.status.pageLife = 'show';\n\t\t},\n\t\tonPageHide: function() {\n\t\t\t// 组件所在的页面被隐藏时执行\n\t\t\tconsole.log(TAG_NAME, 'hide');\n\t\t\tthis.status.pageLife = 'hide';\n\t\t},\n\t\tonPageResize: function(size) {\n\t\t\t// 组件所在的页面尺寸变化时执行\n\t\t\tconsole.log(TAG_NAME, 'resize', size);\n\t\t},\n\t\tmethods: {\n\t\t\t/**\n\t\t\t * 初始化各项参数和用户控制模块，在组件实例触发 attached 时调用，此时不建议对View进行变更渲染（调用setData方法）\n\t\t\t */\n\t\t\tinitFun() {\n\t\t\t\tconsole.log(TAG_NAME, '_init');\n\t\t\t\tthis.userController = new UserController(this);\n\t\t\t\tthis._emitter = new Event();\n\t\t\t\tthis.EVENT = EVENT;\n\t\t\t\tthis.initStatusFun();\n\t\t\t\tthis.bindEventFun();\n\t\t\t\tthis.gridBindEventFun();\n\t\t\t\tthis.keepScreenOnFun();\n\t\t\t\tconsole.log(TAG_NAME, '_init success component:', this);\n\t\t\t},\n\n\t\t\tinitStatusFun() {\n\t\t\t\tthis.status = {\n\t\t\t\t\tisPush: false,\n\t\t\t\t\t// 推流状态\n\t\t\t\t\tisPending: false,\n\t\t\t\t\t// 挂起状态，触发5000事件标记为true，onShow后标记为false\n\t\t\t\t\tpageLife: '',\n\t\t\t\t\t// 页面生命周期 hide, show\n\t\t\t\t\tisOnHideAddStream: false // onHide后有新增Stream\n\n\t\t\t\t};\n\t\t\t\tthis._lastTapTime = 0; // 点击时间戳 用于判断双击事件\n\n\t\t\t\tthis._beforeLastTapTime = 0; // 点击时间戳 用于判断双击事件\n\n\t\t\t\tthis._lastTapCoordinate = {\n\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\ty: 0\n\t\t\t\t\t}, // 点击时的坐标\n\t\t\t\t\tthis._isFullscreen = false; // 是否进入全屏状态\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 监听组件属性变更，外部变更组件属性时触发该监听\n\t\t\t * @param {Object} data newVal，oldVal\n\t\t\t */\n\t\t\tpropertyObserverFun(data) {\n\t\t\t\tconsole.log(TAG_NAME, 'propertyObserverFun', data, this.config);\n\n\t\t\t\tif (data.name === 'config') {\n\t\t\t\t\tconst config = Object.assign({}, DEFAULT_COMPONENT_CONFIG, data.newVal);\n\t\t\t\t\tconsole.log(TAG_NAME, 'propertyObserverFun config:', config); // 由于 querystring 只支持 String 类型，做一个类型防御\n\n\t\t\t\t\tif (typeof config.debugMode === 'string') {\n\t\t\t\t\t\tconfig.debugMode = config.debugMode === 'true' ? true : false;\n\t\t\t\t\t} // 初始化IM\n\n\n\t\t\t\t\tif (config.enableIM && config.sdkAppID) {\n\t\t\t\t\t\tthis.initIMFun(config);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (config.sdkAppID && data.oldVal.sdkAppID !== config.sdkAppID && MTA) {\n\t\t\t\t\t\tMTA.Event.stat('sdkAppID', {\n\t\t\t\t\t\t\t'value': config.sdkAppID\n\t\t\t\t\t\t});\n\t\t\t\t\t} // 独立设置与pusher无关的配置\n\n\n\t\t\t\t\tthis.setData({\n\t\t\t\t\t\tenableIM: config.enableIM,\n\t\t\t\t\t\ttemplate: config.template,\n\t\t\t\t\t\tdebugMode: config.debugMode || false,\n\t\t\t\t\t\tdebug: config.debugMode || false\n\t\t\t\t\t});\n\t\t\t\t\tthis.setPusherConfigFun(config);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t//  _______             __        __  __\n\t\t\t//  |       \\           |  \\      |  \\|  \\\n\t\t\t//  | $$$$$$$\\ __    __ | $$____  | $$ \\$$  _______\n\t\t\t//  | $$__/ $$|  \\  |  \\| $$    \\ | $$|  \\ /       \\\n\t\t\t//  | $$    $$| $$  | $$| $$$$$$$\\| $$| $$|  $$$$$$$\n\t\t\t//  | $$$$$$$ | $$  | $$| $$  | $$| $$| $$| $$\n\t\t\t//  | $$      | $$__/ $$| $$__/ $$| $$| $$| $$_____\n\t\t\t//  | $$       \\$$    $$| $$    $$| $$| $$ \\$$     \\\n\t\t\t//   \\$$        \\$$$$$$  \\$$$$$$$  \\$$ \\$$  \\$$$$$$$\n\n\t\t\t/**\n\t\t\t * 进房\n\t\t\t * @param {Object} params 必传 roomID 取值范围 1 ~ 4294967295\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tenterRoom(params) {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tconsole.log(TAG_NAME, 'enterRoom');\n\t\t\t\t\tconsole.log(TAG_NAME, 'params', params);\n\t\t\t\t\tconsole.log(TAG_NAME, 'config', this.config);\n\t\t\t\t\tconsole.log(TAG_NAME, 'pusher', this.pusher); // 1. 补齐进房参数，校验必要参数是否齐全\n\n\t\t\t\t\tif (params) {\n\t\t\t\t\t\tObject.assign(this.pusher, params);\n\t\t\t\t\t\tObject.assign(this.config, params);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.checkParamFun(this.config)) {\n\t\t\t\t\t\treject(new Error('缺少必要参数'));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} // 2. 根据参数拼接 push url，赋值给 live-pusher，\n\n\n\t\t\t\t\tthis.getPushUrlFun(this.config).then(pushUrl => {\n\t\t\t\t\t\tthis.pusher.url = pushUrl;\n\t\t\t\t\t\tthis.setData({\n\t\t\t\t\t\t\tpusher: this.pusher\n\t\t\t\t\t\t}, () => {\n\t\t\t\t\t\t\t// 真正进房成功需要通过 1018 事件通知\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'enterRoom', this.pusher); // view 渲染成功回调后，开始推流\n\n\t\t\t\t\t\t\tthis.pusher.getPusherContext().start();\n\t\t\t\t\t\t\tthis.status.isPush = true;\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t});\n\t\t\t\t\t}).catch(res => {\n\t\t\t\t\t\t// 进房失败需要通过 pusher state 事件通知，目前还没有准确的事件通知\n\t\t\t\t\t\tconsole.error(TAG_NAME, 'enterRoom error', res);\n\t\t\t\t\t\treject(res);\n\t\t\t\t\t}); // 初始化 IM SDK\n\t\t\t\t\t// this._initIM(this.data.config)\n\t\t\t\t\t// 登录IM\n\n\t\t\t\t\tthis.loginIMFun({\n\t\t\t\t\t\t...this.config,\n\t\t\t\t\t\troomID: params.roomID\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 退房，停止推流和拉流，并重置数据\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\texitRoom() {\n\t\t\t\tif (this.status.pageLife === 'hide') {\n\t\t\t\t\t// 如果是退后台触发 onHide，不能调用 pusher API\n\t\t\t\t\tconsole.warn(TAG_NAME, '小程序最小化时不能调用 exitRoom，如果不想听到远端声音，可以调用取消订阅，如果不想远端听到声音，可以调用取消发布');\n\t\t\t\t}\n\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tconsole.log(TAG_NAME, 'exitRoom');\n\t\t\t\t\tthis.exitIMFun();\n\t\t\t\t\tthis.pusher.reset();\n\t\t\t\t\tthis.status.isPush = false;\n\t\t\t\t\tconst result = this.userController.reset();\n\t\t\t\t\tthis.setData({\n\t\t\t\t\t\tpusher: this.pusher,\n\t\t\t\t\t\tuserList: result.userList,\n\t\t\t\t\t\tstreamList: result.streamList,\n\t\t\t\t\t\tvisibleStreamList: this.filterVisibleStreamFun(result.streamList)\n\t\t\t\t\t}, () => {\n\t\t\t\t\t\t// 在销毁页面时调用exitRoom时，不会走到这里\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\tuserList: this.userList,\n\t\t\t\t\t\t\tstreamList: this.streamList\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconsole.log(TAG_NAME, 'exitRoom success', this.pusher, this.streamList, this\n\t\t\t\t\t\t\t.userList); // 20200421 iOS 仍然没有1019事件通知退房，退房事件移动到 exitRoom 方法里，但不是后端通知的退房成功\n\n\t\t\t\t\t\tthis._emitter.emit(EVENT.LOCAL_LEAVE, {\n\t\t\t\t\t\t\tuserID: this.pusher.userID\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 开启摄像头\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tpublishLocalVideo() {\n\t\t\t\t// 设置 pusher enableCamera\n\t\t\t\tconsole.log(TAG_NAME, 'publishLocalVideo 开启摄像头');\n\t\t\t\treturn this.setPusherConfigFun({\n\t\t\t\t\tenableCamera: true\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 关闭摄像头\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tunpublishLocalVideo() {\n\t\t\t\t// 设置 pusher enableCamera\n\t\t\t\tconsole.log(TAG_NAME, 'unpublshLocalVideo 关闭摄像头');\n\t\t\t\treturn this.setPusherConfigFun({\n\t\t\t\t\tenableCamera: false\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 开启麦克风\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tpublishLocalAudio() {\n\t\t\t\t// 设置 pusher enableCamera\n\t\t\t\tconsole.log(TAG_NAME, 'publishLocalAudio 开启麦克风');\n\t\t\t\treturn this.setPusherConfigFun({\n\t\t\t\t\tenableMic: true\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 关闭麦克风\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tunpublishLocalAudio() {\n\t\t\t\t// 设置 pusher enableCamera\n\t\t\t\tconsole.log(TAG_NAME, 'unpublshLocalAudio 关闭麦克风');\n\t\t\t\treturn this.setPusherConfigFun({\n\t\t\t\t\tenableMic: false\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 订阅远端视频 主流 小画面 辅流\n\t\t\t * @param {Object} params {userID,streamType} streamType 传入 small 时修改对应的主流 url 的 _definitionType 参数为 small, stream.streamType 仍为 main\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tsubscribeRemoteVideo(params) {\n\t\t\t\tconsole.log(TAG_NAME, 'subscribeRemoteVideo', params); // 设置指定 user streamType 的 muteVideo 为 false\n\n\t\t\t\tconst config = {\n\t\t\t\t\tmuteVideo: false\n\t\t\t\t}; // 本地数据结构里的 streamType 只支持 main 和 aux ，订阅 small 也是对 main 进行处理\n\n\t\t\t\tconst streamType = params.streamType === 'small' ? 'main' : params.streamType;\n\t\t\t\tconst stream = this.userController.getStream({\n\t\t\t\t\tuserID: params.userID,\n\t\t\t\t\tstreamType: streamType\n\t\t\t\t});\n\t\t\t\tstream.muteVideoPrev = false; // 用于分页切换时保留player当前的订阅状态\n\n\t\t\t\tif (params.streamType === 'small' || params.streamType === 'main') {\n\t\t\t\t\tif (stream && stream.streamType === 'main') {\n\t\t\t\t\t\tconsole.log(TAG_NAME, 'subscribeRemoteVideo switch small', stream.src);\n\n\t\t\t\t\t\tif (params.streamType === 'small') {\n\t\t\t\t\t\t\tconfig.src = stream.src.replace('main', 'small');\n\t\t\t\t\t\t\tconfig._definitionType = 'small'; // 用于设置面板的渲染\n\t\t\t\t\t\t} else if (params.streamType === 'main') {\n\t\t\t\t\t\t\tstream.src = stream.src.replace('small', 'main');\n\t\t\t\t\t\t\tconfig._definitionType = 'main';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconsole.log(TAG_NAME, 'subscribeRemoteVideo', stream.src);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn this.setPlayerConfigFun({\n\t\t\t\t\tuserID: params.userID,\n\t\t\t\t\tstreamType: streamType,\n\t\t\t\t\tconfig: config\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 取消订阅远端视频\n\t\t\t * @param {Object} params {userID,streamType}\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tunsubscribeRemoteVideo(params) {\n\t\t\t\tconsole.log(TAG_NAME, 'unsubscribeRemoteVideo', params);\n\t\t\t\tconst stream = this.userController.getStream({\n\t\t\t\t\tuserID: params.userID,\n\t\t\t\t\tstreamType: params.streamType\n\t\t\t\t});\n\t\t\t\tstream.muteVideoPrev = true; // 用于分页切换时保留player当前的订阅状态\n\t\t\t\t// 设置指定 user streamType 的 muteVideo 为 true\n\n\t\t\t\treturn this.setPlayerConfigFun({\n\t\t\t\t\tuserID: params.userID,\n\t\t\t\t\tstreamType: params.streamType,\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\tmuteVideo: true\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 订阅远端音频\n\t\t\t * @param {Object} params userID 用户ID\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tsubscribeRemoteAudio(params) {\n\t\t\t\tconsole.log(TAG_NAME, 'subscribeRemoteAudio', params);\n\t\t\t\treturn this.setPlayerConfigFun({\n\t\t\t\t\tuserID: params.userID,\n\t\t\t\t\tstreamType: 'main',\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\tmuteAudio: false\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 取消订阅远端音频\n\t\t\t * @param {Object} params userID 用户ID\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tunsubscribeRemoteAudio(params) {\n\t\t\t\tconsole.log(TAG_NAME, 'unsubscribeRemoteAudio', params);\n\t\t\t\treturn this.setPlayerConfigFun({\n\t\t\t\t\tuserID: params.userID,\n\t\t\t\t\tstreamType: 'main',\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\tmuteAudio: true\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\ton(eventCode, handler, context) {\n\t\t\t\tthis._emitter.on(eventCode, handler, context);\n\t\t\t},\n\n\t\t\toff(eventCode, handler) {\n\t\t\t\tthis._emitter.off(eventCode, handler);\n\t\t\t},\n\n\t\t\tgetRemoteUserList() {\n\t\t\t\treturn this.userList;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 切换前后摄像头\n\t\t\t */\n\t\t\tswitchCamera() {\n\t\t\t\tif (!this.cameraPosition) {\n\t\t\t\t\t// this.data.pusher.cameraPosition 是初始值，不支持动态设置\n\t\t\t\t\tthis.cameraPosition = this.pusher.frontCamera;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(TAG_NAME, 'switchCamera', this.cameraPosition);\n\t\t\t\tthis.cameraPosition = this.cameraPosition === 'front' ? 'back' : 'front';\n\t\t\t\tthis.setData({\n\t\t\t\t\tcameraPosition: this.cameraPosition\n\t\t\t\t}, () => {\n\t\t\t\t\tconsole.log(TAG_NAME, 'switchCamera success', this.cameraPosition);\n\t\t\t\t}); // wx 7.0.9 不支持动态设置 pusher.frontCamera ，只支持调用 API switchCamer() 设置，这里修改 cameraPosition 是为了记录状态\n\n\t\t\t\tthis.pusher.getPusherContext().switchCamera();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 设置指定player view的渲染坐标和尺寸\n\t\t\t * @param {object} params\n\t\t\t * userID: string\n\t\t\t * streamType: string\n\t\t\t * xAxis: number\n\t\t\t * yAxis: number\n\t\t\t * width: number\n\t\t\t * height: number\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tsetViewRect(params) {\n\t\t\t\tconsole.log(TAG_NAME, 'setViewRect', params);\n\n\t\t\t\tif (this.template !== 'custom') {\n\t\t\t\t\tconsole.warn(`如需使用setViewRect方法，请初始化时设置template:\"custom\", 当前 template:\"${this.template}\"`);\n\t\t\t\t}\n\n\t\t\t\tconsole.info(`不建议使用该方法动态修改样式，避免引起微信小程序渲染问题，建议直接修改 wxml wxss 进行样式定制化`);\n\n\t\t\t\tif (this.pusher.userID === params.userID) {\n\t\t\t\t\treturn this.setPusherConfigFun({\n\t\t\t\t\t\txAxis: params.xAxis,\n\t\t\t\t\t\tyAxis: params.yAxis,\n\t\t\t\t\t\twidth: params.width,\n\t\t\t\t\t\theight: params.height\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn this.setPlayerConfigFun({\n\t\t\t\t\tuserID: params.userID,\n\t\t\t\t\tstreamType: params.streamType,\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\txAxis: params.xAxis,\n\t\t\t\t\t\tyAxis: params.yAxis,\n\t\t\t\t\t\twidth: params.width,\n\t\t\t\t\t\theight: params.height\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 设置指定 player 或者 pusher view 是否可见\n\t\t\t * @param {object} params\n\t\t\t * userID: string\n\t\t\t * streamType: string\n\t\t\t * isVisible：boolean\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tsetViewVisible(params) {\n\t\t\t\tconsole.log(TAG_NAME, 'setViewVisible', params);\n\n\t\t\t\tif (this.template !== 'custom') {\n\t\t\t\t\tconsole.warn(`如需使用setViewVisible方法，请初始化时设置template:\"custom\", 当前 template:\"${this.template}\"`);\n\t\t\t\t}\n\n\t\t\t\tconsole.info(`不建议使用该方法动态修改样式，避免引起微信小程序渲染问题，建议直接修改 wxml wxss 进行样式定制化`);\n\n\t\t\t\tif (this.pusher.userID === params.userID) {\n\t\t\t\t\treturn this.setPusherConfigFun({\n\t\t\t\t\t\tisVisible: params.isVisible\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn this.setPlayerConfigFun({\n\t\t\t\t\tuserID: params.userID,\n\t\t\t\t\tstreamType: params.streamType,\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\tisVisible: params.isVisible\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 设置指定player view的层级\n\t\t\t * @param {Object} params\n\t\t\t * userID: string\n\t\t\t * streamType: string\n\t\t\t * zIndex: number\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tsetViewZIndex(params) {\n\t\t\t\tconsole.log(TAG_NAME, 'setViewZIndex', params);\n\n\t\t\t\tif (this.template !== 'custom') {\n\t\t\t\t\tconsole.warn(`如需使用setViewZIndex方法，请初始化时设置template:\"custom\", 当前 template:\"${this.template}\"`);\n\t\t\t\t}\n\n\t\t\t\tconsole.info(`不建议使用该方法动态修改样式，避免引起微信小程序渲染问题，建议直接修改 wxml wxss 进行样式定制化`);\n\n\t\t\t\tif (this.pusher.userID === params.userID) {\n\t\t\t\t\treturn this.setPusherConfigFun({\n\t\t\t\t\t\tzIndex: params.zindex || params.zIndex\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn this.setPlayerConfigFun({\n\t\t\t\t\tuserID: params.userID,\n\t\t\t\t\tstreamType: params.streamType,\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\tzIndex: params.zindex || params.zIndex\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 播放背景音\n\t\t\t * @param {Object} params url\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tplayBGM(params) {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tthis.pusher.getPusherContext().playBGM({\n\t\t\t\t\t\turl: params.url,\n\t\t\t\t\t\t// 已经有相关事件不需要在这里监听,目前用于测试\n\t\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\t\tconsole.log(TAG_NAME,\n\t\t\t\t\t\t\t'播放背景音成功'); // this._emitter.emit(EVENT.BGM_PLAY_START)\n\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfail: () => {\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, '播放背景音失败');\n\n\t\t\t\t\t\t\tthis._emitter.emit(EVENT.BGM_PLAY_FAIL);\n\n\t\t\t\t\t\t\treject(new Error('播放背景音失败'));\n\t\t\t\t\t\t} // complete: () => {\n\t\t\t\t\t\t//   console.log(TAG_NAME, '背景完成')\n\t\t\t\t\t\t//   this._emitter.emit(EVENT.BGM_PLAY_COMPLETE)\n\t\t\t\t\t\t// },\n\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tstopBGM() {\n\t\t\t\tthis.pusher.getPusherContext().stopBGM();\n\t\t\t},\n\n\t\t\tpauseBGM() {\n\t\t\t\tthis.pusher.getPusherContext().pauseBGM();\n\t\t\t},\n\n\t\t\tresumeBGM() {\n\t\t\t\tthis.pusher.getPusherContext().resumeBGM();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 设置背景音音量\n\t\t\t * @param {Object} params volume\n\t\t\t */\n\t\t\tsetBGMVolume(params) {\n\t\t\t\tconsole.log(TAG_NAME, 'setBGMVolume', params);\n\t\t\t\tthis.pusher.getPusherContext().setBGMVolume({\n\t\t\t\t\tvolume: params.volume\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 设置麦克风音量\n\t\t\t * @param {Object} params volume\n\t\t\t */\n\t\t\tsetMICVolume(params) {\n\t\t\t\tconsole.log(TAG_NAME, 'setMICVolume', params);\n\t\t\t\tthis.pusher.getPusherContext().setMICVolume({\n\t\t\t\t\tvolume: params.volume\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 发送SEI消息\n\t\t\t * @param {Object} params message\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tsendSEI(params) {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tthis.pusher.getPusherContext().sendMessage({\n\t\t\t\t\t\tmsg: params.message,\n\t\t\t\t\t\tsuccess: function(result) {\n\t\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * pusher 和 player 的截图并保存\n\t\t\t * @param {Object} params userID streamType\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tsnapshot(params) {\n\t\t\t\tconsole.log(TAG_NAME, 'snapshot', params);\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tthis.captureSnapshot(params).then(result => {\n\t\t\t\t\t\tuni.saveImageToPhotosAlbum({\n\t\t\t\t\t\t\tfilePath: result.tempImagePath,\n\n\t\t\t\t\t\t\tsuccess(res) {\n\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\ttitle: '已保存到相册'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tconsole.log('save photo is success', res);\n\t\t\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tfail: function(error) {\n\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\ticon: 'none',\n\t\t\t\t\t\t\t\t\ttitle: '保存失败'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tconsole.log('save photo is fail', error);\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 获取pusher 和 player 的截图\n\t\t\t * @param {Object} params userID streamType\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tcaptureSnapshot(params) {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tif (params.userID === this.pusher.userID) {\n\t\t\t\t\t\t// pusher\n\t\t\t\t\t\tthis.pusher.getPusherContext().snapshot({\n\t\t\t\t\t\t\tquality: 'raw',\n\t\t\t\t\t\t\tcomplete: result => {\n\t\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'snapshot pusher', result);\n\n\t\t\t\t\t\t\t\tif (result.tempImagePath) {\n\t\t\t\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tconsole.log('snapShot 回调失败', result);\n\t\t\t\t\t\t\t\t\treject(new Error('截图失败'));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// player\n\t\t\t\t\t\tthis.userController.getStream(params).playerContext.snapshot({\n\t\t\t\t\t\t\tquality: 'raw',\n\t\t\t\t\t\t\tcomplete: result => {\n\t\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'snapshot player', result);\n\n\t\t\t\t\t\t\t\tif (result.tempImagePath) {\n\t\t\t\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tconsole.log('snapShot 回调失败', result);\n\t\t\t\t\t\t\t\t\treject(new Error('截图失败'));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 将远端视频全屏\n\t\t\t * @param {Object} params userID streamType direction\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tenterFullscreen(params) {\n\t\t\t\tconsole.log(TAG_NAME, 'enterFullscreen', params);\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tthis.userController.getStream(params).playerContext.requestFullScreen({\n\t\t\t\t\t\tdirection: params.direction || 0,\n\t\t\t\t\t\tsuccess: event => {\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'enterFullscreen success', event);\n\t\t\t\t\t\t\tresolve(event);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfail: event => {\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'enterFullscreen fail', event);\n\t\t\t\t\t\t\treject(event);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 将远端视频取消全屏\n\t\t\t * @param {Object} params userID streamType\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\texitFullscreen(params) {\n\t\t\t\tconsole.log(TAG_NAME, 'exitFullscreen', params);\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tthis.userController.getStream(params).playerContext.exitFullScreen({\n\t\t\t\t\t\tsuccess: event => {\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'exitFullScreen success', event);\n\t\t\t\t\t\t\tresolve(event);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfail: event => {\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'exitFullScreen fail', event);\n\t\t\t\t\t\t\treject(event);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 设置 player 视图的横竖屏显示\n\t\t\t * @param {Object} params userID streamType orientation: vertical, horizontal\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tsetRemoteOrientation(params) {\n\t\t\t\treturn this.setPlayerConfigFun({\n\t\t\t\t\tuserID: params.userID,\n\t\t\t\t\tstreamType: params.streamType,\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\torientation: params.orientation\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t// 改为：\n\t\t\tsetViewOrientation(params) {\n\t\t\t\treturn this.setPlayerConfigFun({\n\t\t\t\t\tuserID: params.userID,\n\t\t\t\t\tstreamType: params.streamType,\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\torientation: params.orientation\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 设置 player 视图的填充模式\n\t\t\t * @param {Object} params userID streamType fillMode: contain，fillCrop\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tsetRemoteFillMode(params) {\n\t\t\t\treturn this.setPlayerConfigFun({\n\t\t\t\t\tuserID: params.userID,\n\t\t\t\t\tstreamType: params.streamType,\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\tobjectFit: params.fillMode\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t// 改为：\n\t\t\tsetViewFillMode(params) {\n\t\t\t\treturn this.setPlayerConfigFun({\n\t\t\t\t\tuserID: params.userID,\n\t\t\t\t\tstreamType: params.streamType,\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\tobjectFit: params.fillMode\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 发送C2C文本消息\n\t\t\t * @param {*} params userID,message\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tsendC2CTextMessage(params) {\n\t\t\t\tif (!this.tim) {\n\t\t\t\t\tconsole.warn(TAG_NAME, '未开启IM功能，该方法无法使用', params);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(TAG_NAME, 'sendC2CTextMessage', params);\n\t\t\t\tconst message = this.tim.createTextMessage({\n\t\t\t\t\tto: params.userID + '',\n\t\t\t\t\tconversationType: TIM.TYPES.CONV_C2C,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\ttext: params.message\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tconst promise = this.tim.sendMessage(message);\n\t\t\t\tpromise.then(function(imResponse) {\n\t\t\t\t\t// 发送成功\n\t\t\t\t\tconsole.log(TAG_NAME, 'sendC2CTextMessage success', imResponse);\n\t\t\t\t}).catch(function(imError) {\n\t\t\t\t\t// 发送失败\n\t\t\t\t\tconsole.warn(TAG_NAME, 'sendC2CTextMessage error:', imError);\n\t\t\t\t});\n\t\t\t\treturn promise;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 发送C2C自定义消息\n\t\t\t * @param {*} params: userID payload\n\t\t\t * @returns {Promise}\n\t\t\t *\n\t\t\t */\n\t\t\tsendC2CCustomMessage(params) {\n\t\t\t\tif (!this.tim) {\n\t\t\t\t\tconsole.warn(TAG_NAME, '未开启IM功能，该方法无法使用', params);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(TAG_NAME, 'sendC2CCustomMessage', params);\n\t\t\t\tconst message = this.tim.createCustomMessage({\n\t\t\t\t\tto: params.userID + '',\n\t\t\t\t\tconversationType: TIM.TYPES.CONV_C2C,\n\t\t\t\t\tpayload: params.payload\n\t\t\t\t});\n\t\t\t\tconst promise = this.tim.sendMessage(message);\n\t\t\t\tpromise.then(function(imResponse) {\n\t\t\t\t\t// 发送成功\n\t\t\t\t\tconsole.log(TAG_NAME, 'sendMessage success', imResponse);\n\t\t\t\t}).catch(function(imError) {\n\t\t\t\t\t// 发送失败\n\t\t\t\t\tconsole.warn(TAG_NAME, 'sendMessage error:', imError);\n\t\t\t\t});\n\t\t\t\treturn promise;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 发送群组文本消息\n\t\t\t * @param {*} params roomID message\n\t\t\t * @returns {Promise}\n\t\t\t *\n\t\t\t */\n\t\t\tsendGroupTextMessage(params) {\n\t\t\t\tif (!this.tim) {\n\t\t\t\t\tconsole.warn(TAG_NAME, '未开启IM功能，该方法无法使用', params);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(TAG_NAME, 'sendGroupTextMessage', params);\n\t\t\t\tconst message = this.tim.createTextMessage({\n\t\t\t\t\tto: params.roomID + '',\n\t\t\t\t\tconversationType: TIM.TYPES.CONV_GROUP,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\ttext: params.message\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tconst promise = this.tim.sendMessage(message);\n\t\t\t\tpromise.then(function(imResponse) {\n\t\t\t\t\t// 发送成功\n\t\t\t\t\tconsole.log(TAG_NAME, 'sendGroupTextMessage success', imResponse);\n\t\t\t\t}).catch(function(imError) {\n\t\t\t\t\t// 发送失败\n\t\t\t\t\tconsole.warn(TAG_NAME, 'sendGroupTextMessage error:', imError);\n\t\t\t\t});\n\t\t\t\treturn promise;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 发送群组自定义消息\n\t\t\t * @param {*} params roomID payload\n\t\t\t * @returns {Promise}\n\t\t\t *\n\t\t\t */\n\t\t\tsendGroupCustomMessage(params) {\n\t\t\t\tif (!this.tim) {\n\t\t\t\t\tconsole.warn(TAG_NAME, '未开启IM功能，该方法无法使用', params);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(TAG_NAME, 'sendGroupCustomMessage', params);\n\t\t\t\tconst message = this.tim.createCustomMessage({\n\t\t\t\t\tto: params.roomID + '',\n\t\t\t\t\tconversationType: TIM.TYPES.CONV_GROUP,\n\t\t\t\t\tpayload: params.payload\n\t\t\t\t});\n\t\t\t\tconst promise = this.tim.sendMessage(message);\n\t\t\t\tpromise.then(function(imResponse) {\n\t\t\t\t\t// 发送成功\n\t\t\t\t\tconsole.log(TAG_NAME, 'sendMessage success', imResponse);\n\t\t\t\t}).catch(function(imError) {\n\t\t\t\t\t// 发送失败\n\t\t\t\t\tconsole.warn(TAG_NAME, 'sendMessage error:', imError);\n\t\t\t\t});\n\t\t\t\treturn promise;\n\t\t\t},\n\n\t\t\t// ______             __                                              __\n\t\t\t// |      \\           |  \\                                            |  \\\n\t\t\t//  \\$$$$$$ _______  _| $$_     ______    ______   _______    ______  | $$\n\t\t\t//   | $$  |       \\|   $$ \\   /      \\  /      \\ |       \\  |      \\ | $$\n\t\t\t//   | $$  | $$$$$$$\\\\$$$$$$  |  $$$$$$\\|  $$$$$$\\| $$$$$$$\\  \\$$$$$$\\| $$\n\t\t\t//   | $$  | $$  | $$ | $$ __ | $$    $$| $$   \\$$| $$  | $$ /      $$| $$\n\t\t\t//  _| $$_ | $$  | $$ | $$|  \\| $$$$$$$$| $$      | $$  | $$|  $$$$$$$| $$\n\t\t\t// |   $$ \\| $$  | $$  \\$$  $$ \\$$     \\| $$      | $$  | $$ \\$$    $$| $$\n\t\t\t//  \\$$$$$$ \\$$   \\$$   \\$$$$   \\$$$$$$$ \\$$       \\$$   \\$$  \\$$$$$$$ \\$$\n\n\t\t\t/**\n\t\t\t * 设置推流参数并触发页面渲染更新\n\t\t\t * @param {Object} config live-pusher 的配置\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tsetPusherConfigFun(config, skipLog = false) {\n\t\t\t\tif (!skipLog) {\n\t\t\t\t\tconsole.log(TAG_NAME, '_setPusherConfig', config, this.pusher);\n\t\t\t\t}\n\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tif (!this.pusher) {\n\t\t\t\t\t\tthis.pusher = new Pusher(config);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tObject.assign(this.pusher, config);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.setData({\n\t\t\t\t\t\tpusher: this.pusher\n\t\t\t\t\t}, () => {\n\t\t\t\t\t\tif (!skipLog) {\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, '_setPusherConfig setData compelete', 'config:', config,\n\t\t\t\t\t\t\t\t'pusher:', this.pusher);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve(config);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 设置指定 player 属性并触发页面渲染\n\t\t\t * @param {Object} params include userID,streamType,config\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tsetPlayerConfigFun(params) {\n\t\t\t\tconst userID = params.userID;\n\t\t\t\tconst streamType = params.streamType;\n\t\t\t\tconst config = params.config;\n\t\t\t\tconsole.log(TAG_NAME, '_setPlayerConfig', params);\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t// 获取指定的userID streamType 的 stream\n\t\t\t\t\tconst user = this.userController.getUser(userID);\n\n\t\t\t\t\tif (user && user.streams[streamType]) {\n\t\t\t\t\t\tObject.assign(user.streams[streamType], config); // user.streams引用的对象和 streamList 里的是同一个\n\n\t\t\t\t\t\tthis.setData({\n\t\t\t\t\t\t\tstreamList: this.streamList,\n\t\t\t\t\t\t\tvisibleStreamList: this.filterVisibleStreamFun(this.streamList, true)\n\t\t\t\t\t\t}, () => {\n\t\t\t\t\t\t\t// console.log(TAG_NAME, '_setPlayerConfig complete', params, 'streamList:', this.data.streamList)\n\t\t\t\t\t\t\tresolve(params);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 不需要reject，静默处理\n\t\t\t\t\t\tconsole.warn(TAG_NAME,\n\t\t\t\t\t\t'指定 userID 或者 streamType 不存在'); // reject(new Error('指定 userID 或者 streamType 不存在'))\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 设置列表数据，并触发页面渲染\n\t\t\t * @param {Object} params include userList, stramList\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tsetListFun(params) {\n\t\t\t\tconsole.log(TAG_NAME, '_setList', params, this.template);\n\t\t\t\tconst {\n\t\t\t\t\tuserList,\n\t\t\t\t\tstreamList\n\t\t\t\t} = params;\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tlet visibleStreamList = [];\n\t\t\t\t\tconst data = {\n\t\t\t\t\t\tuserList: userList || this.userList,\n\t\t\t\t\t\tstreamList: streamList || this.streamList\n\t\t\t\t\t};\n\n\t\t\t\t\tif (this.template === 'grid') {\n\t\t\t\t\t\tvisibleStreamList = this.filterVisibleStreamFun(streamList);\n\t\t\t\t\t\tdata.visibleStreamList = visibleStreamList || this.visibleStreamList;\n\t\t\t\t\t\tdata.gridPagePlaceholderStreamList = this.gridPagePlaceholderStreamList;\n\t\t\t\t\t\tdata.gridCurrentPage = this.gridCurrentPage;\n\t\t\t\t\t\tdata.gridPageCount = this.gridPageCount;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.setData(data, () => {\n\t\t\t\t\t\tresolve(params);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 必选参数检测\n\t\t\t * @param {Object} rtcConfig rtc参数\n\t\t\t * @returns {Boolean}\n\t\t\t */\n\t\t\tcheckParamFun(rtcConfig) {\n\t\t\t\tconsole.log(TAG_NAME, 'checkParam config:', rtcConfig);\n\n\t\t\t\tif (!rtcConfig.sdkAppID) {\n\t\t\t\t\tconsole.error('未设置 sdkAppID');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (rtcConfig.roomID === undefined) {\n\t\t\t\t\tconsole.error('未设置 roomID');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (rtcConfig.roomID < 1 || rtcConfig.roomID > 4294967296) {\n\t\t\t\t\tconsole.error('roomID 超出取值范围 1 ~ 4294967295');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (!rtcConfig.userID) {\n\t\t\t\t\tconsole.error('未设置 userID');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (!rtcConfig.userSig) {\n\t\t\t\t\tconsole.error('未设置 userSig');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (!rtcConfig.template) {\n\t\t\t\t\tconsole.error('未设置 template');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\tgetPushUrlFun(rtcConfig) {\n\t\t\t\t// 拼接 puhser url rtmp 方案\n\t\t\t\tconsole.log(TAG_NAME, '_getPushUrl', rtcConfig);\n\n\t\t\t\tif (ENV.IS_TRTC) {\n\t\t\t\t\t// 版本高于7.0.8，基础库版本高于2.10.0 使用新的 url\n\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\t// appscene videocall live\n\t\t\t\t\t\t// cloudenv PRO CCC DEV UAT\n\t\t\t\t\t\t// encsmall 0\n\t\t\t\t\t\t// 对外的默认值是rtc ，对内的默认值是videocall\n\t\t\t\t\t\trtcConfig.scene = !rtcConfig.scene || rtcConfig.scene === 'rtc' ? 'videocall' : rtcConfig\n\t\t\t\t\t\t\t.scene;\n\t\t\t\t\t\trtcConfig.enableBlackStream = rtcConfig.enableBlackStream ||\n\t\t\t\t\t\t''; // 是否支持在纯音频下推送SEI消息，注意：在关闭enable-recv-message后还是无法接收\n\n\t\t\t\t\t\trtcConfig.encsmall = rtcConfig.encsmall || 0; // 是否编小画面，这个特性不建议学生默认开启，只有老师端才比较有意义\n\n\t\t\t\t\t\trtcConfig.cloudenv = rtcConfig.cloudenv || 'PRO';\n\t\t\t\t\t\trtcConfig.streamID = rtcConfig.streamID || ''; // 指定旁边路直播的流ID\n\n\t\t\t\t\t\trtcConfig.userDefineRecordID = rtcConfig.userDefineRecordID || ''; // 指定录制文件的recordid\n\n\t\t\t\t\t\trtcConfig.privateMapKey = rtcConfig.privateMapKey || ''; // 字符串房间号\n\n\t\t\t\t\t\trtcConfig.pureAudioMode = rtcConfig.pureAudioMode ||\n\t\t\t\t\t\t''; // 指定是否纯音频推流及录制，默认不填，值为1 或 2，其他值非法不处理\n\n\t\t\t\t\t\trtcConfig.recvMode = rtcConfig.recvMode ||\n\t\t\t\t\t\t1; // 1. 自动接收音视频 2. 仅自动接收音频 3. 仅自动接收视频 4. 音视频都不自动接收, 不能绑定player\n\n\t\t\t\t\t\tlet roomID = '';\n\n\t\t\t\t\t\tif (/^\\d+$/.test(rtcConfig.roomID)) {\n\t\t\t\t\t\t\t// 数字房间号\n\t\t\t\t\t\t\troomID = '&roomid=' + rtcConfig.roomID;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// 字符串房间号\n\t\t\t\t\t\t\troomID = '&strroomid=' + rtcConfig.roomID;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tconst pushUrl = 'room://cloud.tencent.com/rtc?sdkappid=' + rtcConfig.sdkAppID +\n\t\t\t\t\t\t\t\troomID + '&userid=' + rtcConfig.userID + '&usersig=' + rtcConfig.userSig +\n\t\t\t\t\t\t\t\t'&appscene=' + rtcConfig.scene + '&encsmall=' + rtcConfig.encsmall +\n\t\t\t\t\t\t\t\t'&cloudenv=' + rtcConfig.cloudenv + '&enableBlackStream=' + rtcConfig\n\t\t\t\t\t\t\t\t.enableBlackStream + '&streamid=' + rtcConfig.streamID +\n\t\t\t\t\t\t\t\t'&userdefinerecordid=' + rtcConfig.userDefineRecordID + '&privatemapkey=' +\n\t\t\t\t\t\t\t\trtcConfig.privateMapKey + '&pureaudiomode=' + rtcConfig.pureAudioMode +\n\t\t\t\t\t\t\t\t'&recvmode=' + rtcConfig.recvMode;\n\t\t\t\t\t\t\tconsole.warn(TAG_NAME, 'getPushUrl result:', pushUrl);\n\t\t\t\t\t\t\tresolve(pushUrl);\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconsole.error(TAG_NAME, '组件仅支持微信 App iOS >=7.0.9, Android >= 7.0.8, 小程序基础库版 >= 2.10.0');\n\t\t\t\tconsole.error(TAG_NAME, '需要真机运行，开发工具不支持实时音视频');\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 获取签名和推流地址\n\t\t\t * @param {Object} rtcConfig 进房参数配置\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\trequestSigServerFun(rtcConfig) {\n\t\t\t\tconsole.log(TAG_NAME, '_requestSigServer:', rtcConfig);\n\t\t\t\tconst sdkAppID = rtcConfig.sdkAppID;\n\t\t\t\tconst userID = rtcConfig.userID;\n\t\t\t\tconst userSig = rtcConfig.userSig;\n\t\t\t\tconst roomID = rtcConfig.roomID;\n\t\t\t\tconst privateMapKey = rtcConfig.privateMapKey;\n\t\t\t\trtcConfig.useCloud = rtcConfig.useCloud === undefined ? true : rtcConfig.useCloud;\n\t\t\t\tlet url = rtcConfig.useCloud ? 'https://official.opensso.tencent-cloud.com/v4/openim/jsonvideoapp' :\n\t\t\t\t\t'https://yun.tim.qq.com/v4/openim/jsonvideoapp';\n\t\t\t\turl += '?sdkappid=' + sdkAppID + '&identifier=' + userID + '&usersig=' + userSig + '&random=' + Date\n\t\t\t\t.now() + '&contenttype=json';\n\t\t\t\tconst reqHead = {\n\t\t\t\t\t'Cmd': 1,\n\t\t\t\t\t'SeqNo': 1,\n\t\t\t\t\t'BusType': 7,\n\t\t\t\t\t'GroupId': roomID\n\t\t\t\t};\n\t\t\t\tconst reqBody = {\n\t\t\t\t\t'PrivMapEncrypt': privateMapKey,\n\t\t\t\t\t'TerminalType': 1,\n\t\t\t\t\t'FromType': 3,\n\t\t\t\t\t'SdkVersion': 26280566\n\t\t\t\t};\n\t\t\t\tconsole.log(TAG_NAME, '_requestSigServer:', url, reqHead, reqBody);\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tuni.request({\n\t\t\t\t\t\turl: url,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t'ReqHead': reqHead,\n\t\t\t\t\t\t\t'ReqBody': reqBody\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\tsuccess: res => {\n\t\t\t\t\t\t\tconsole.log('_requestSigServer success:', res);\n\n\t\t\t\t\t\t\tif (res.data['ErrorCode'] || res.data['RspHead']['ErrorCode'] !== 0) {\n\t\t\t\t\t\t\t\t// console.error(res.data['ErrorInfo'] || res.data['RspHead']['ErrorInfo'])\n\t\t\t\t\t\t\t\tconsole.error('获取roomsig失败');\n\t\t\t\t\t\t\t\treject(res);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst roomSig = JSON.stringify(res.data['RspBody']);\n\t\t\t\t\t\t\tlet pushUrl = 'room://cloud.tencent.com?sdkappid=' + sdkAppID +\n\t\t\t\t\t\t\t\t'&roomid=' + roomID + '&userid=' + userID + '&roomsig=' +\n\t\t\t\t\t\t\t\tencodeURIComponent(roomSig); // TODO 需要重新整理的逻辑 TRTC尚未支持 20200213\n\t\t\t\t\t\t\t// 如果有配置纯音频推流或者recordId参数\n\n\t\t\t\t\t\t\tif (rtcConfig.pureAudioPushMod || rtcConfig.recordId) {\n\t\t\t\t\t\t\t\tconst bizbuf = {\n\t\t\t\t\t\t\t\t\tStr_uc_params: {\n\t\t\t\t\t\t\t\t\t\tpure_audio_push_mod: 0,\n\t\t\t\t\t\t\t\t\t\trecord_id: 0\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}; // 纯音频推流\n\n\t\t\t\t\t\t\t\tif (rtcConfig.pureAudioPushMod) {\n\t\t\t\t\t\t\t\t\tbizbuf.Str_uc_params.pure_audio_push_mod = rtcConfig\n\t\t\t\t\t\t\t\t\t\t.pureAudioPushMod;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdelete bizbuf.Str_uc_params.pure_audio_push_mod;\n\t\t\t\t\t\t\t\t} // 自动录制时业务自定义id\n\n\n\t\t\t\t\t\t\t\tif (rtcConfig.recordId) {\n\t\t\t\t\t\t\t\t\tbizbuf.Str_uc_params.record_id = rtcConfig.recordId;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdelete bizbuf.Str_uc_params.record_id;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tpushUrl += '&bizbuf=' + encodeURIComponent(JSON.stringify(bizbuf));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconsole.log('roomSigInfo', pushUrl);\n\t\t\t\t\t\t\tresolve(pushUrl);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfail: res => {\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'requestSigServer fail:', res);\n\t\t\t\t\t\t\treject(res);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tdoubleTabToggleFullscreenFun(event) {\n\t\t\t\tconst curTime = event.timeStamp;\n\t\t\t\tconst lastTime = this._lastTapTime;\n\t\t\t\tconst lastTapCoordinate = this._lastTapCoordinate;\n\t\t\t\tconst currentTapCoordinate = event.detail; // 计算两次点击的距离\n\n\t\t\t\tconst distence = Math.sqrt(Math.pow(Math.abs(currentTapCoordinate.x - lastTapCoordinate.x), 2) + Math.pow(\n\t\t\t\t\tMath.abs(currentTapCoordinate.y - lastTapCoordinate.y), 2));\n\t\t\t\tthis._lastTapCoordinate = currentTapCoordinate; // 已知问题：上次全屏操作后，必须等待1.5s后才能再次进行全屏操作，否则引发SDK全屏异常，因此增加节流逻辑\n\n\t\t\t\tconst beforeLastTime = this._beforeLastTapTime;\n\t\t\t\tconsole.log(TAG_NAME, 'doubleTabToggleFullscreenFun', event, lastTime, beforeLastTime, distence);\n\n\t\t\t\tif (curTime - lastTime > 0 && curTime - lastTime < 300 && lastTime - beforeLastTime > 1500 && distence <\n\t\t\t\t\t20) {\n\t\t\t\t\tconst userID = event.currentTarget.dataset.userid;\n\t\t\t\t\tconst streamType = event.currentTarget.dataset.streamtype;\n\n\t\t\t\t\tif (this._isFullscreen) {\n\t\t\t\t\t\tthis.exitFullscreen({\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tstreamType\n\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\tthis._isFullscreen = false;\n\t\t\t\t\t\t}).catch(() => {});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// const stream = this.userController.getStream({ userID, streamType })\n\t\t\t\t\t\tlet direction; // // 已知问题：视频的尺寸需要等待player触发NetStatus事件才能获取到，如果进房就双击全屏，全屏后的方向有可能不对。\n\t\t\t\t\t\t// if (stream && stream.videoWidth && stream.videoHeight) {\n\t\t\t\t\t\t//   // 如果是横视频，全屏时进行横屏处理。如果是竖视频，则为0\n\t\t\t\t\t\t//   direction = stream.videoWidth > stream.videoHeight ? 90 : 0\n\t\t\t\t\t\t// }\n\n\t\t\t\t\t\tthis.enterFullscreen({\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tstreamType,\n\t\t\t\t\t\t\tdirection\n\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\tthis._isFullscreen = true;\n\t\t\t\t\t\t}).catch(() => {});\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._beforeLastTapTime = lastTime;\n\t\t\t\t}\n\n\t\t\t\tthis._lastTapTime = curTime;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * TRTC-room 远端用户和音视频状态处理\n\t\t\t */\n\t\t\tbindEventFun() {\n\t\t\t\t// 远端用户进房\n\t\t\t\tthis.userController.on(EVENT.REMOTE_USER_JOIN, event => {\n\t\t\t\t\tconsole.log(TAG_NAME, '远端用户进房', event, event.data.userID);\n\t\t\t\t\tthis.setData({\n\t\t\t\t\t\tuserList: event.data.userList\n\t\t\t\t\t}, () => {\n\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_USER_JOIN, {\n\t\t\t\t\t\t\tuserID: event.data.userID\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_USER_JOIN', 'streamList:', this.streamList, 'userList:', this\n\t\t\t\t\t\t.userList);\n\t\t\t\t}); // 远端用户离开\n\n\t\t\t\tthis.userController.on(EVENT.REMOTE_USER_LEAVE, event => {\n\t\t\t\t\tconsole.log(TAG_NAME, '远端用户离开', event, event.data.userID);\n\n\t\t\t\t\tif (event.data.userID) {\n\t\t\t\t\t\tthis.setListFun({\n\t\t\t\t\t\t\tuserList: event.data.userList,\n\t\t\t\t\t\t\tstreamList: event.data.streamList\n\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_USER_LEAVE, {\n\t\t\t\t\t\t\t\tuserID: event.data.userID\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_USER_LEAVE', 'streamList:', this.streamList, 'userList:', this\n\t\t\t\t\t\t.userList);\n\t\t\t\t}); // 视频状态 true\n\n\t\t\t\tthis.userController.on(EVENT.REMOTE_VIDEO_ADD, event => {\n\t\t\t\t\tconsole.log(TAG_NAME, '远端视频可用', event, event.data.stream.userID);\n\t\t\t\t\tconst stream = event.data.stream; // 如果Android onHide 时，新增的player 无法播放 记录标识位\n\n\t\t\t\t\tif (this.status.pageLife === 'hide') {\n\t\t\t\t\t\tthis.status.isOnHideAddStream = true;\n\t\t\t\t\t\tstream.isOnHideAdd = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.setListFun({\n\t\t\t\t\t\tuserList: event.data.userList,\n\t\t\t\t\t\tstreamList: event.data.streamList\n\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t// 完善 的stream 的 playerContext\n\t\t\t\t\t\tstream.playerContext = uni.createLivePlayerContext(stream.streamID,\n\t\t\t\t\t\tthis); // 新增的需要触发一次play 默认属性才能生效\n\t\t\t\t\t\t// stream.playerContext.play()\n\t\t\t\t\t\t// console.log(TAG_NAME, 'REMOTE_VIDEO_ADD playerContext.play()', stream)\n\n\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_VIDEO_ADD, {\n\t\t\t\t\t\t\tuserID: stream.userID,\n\t\t\t\t\t\t\tstreamType: stream.streamType\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_VIDEO_ADD', 'streamList:', this.streamList, 'userList:', this\n\t\t\t\t\t\t.userList);\n\t\t\t\t}); // 视频状态 false\n\n\t\t\t\tthis.userController.on(EVENT.REMOTE_VIDEO_REMOVE, event => {\n\t\t\t\t\tconsole.log(TAG_NAME, '远端视频移除', event, event.data.stream.userID);\n\t\t\t\t\tconst stream = event.data.stream;\n\t\t\t\t\tthis.setListFun({\n\t\t\t\t\t\tuserList: event.data.userList,\n\t\t\t\t\t\tstreamList: event.data.streamList\n\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t// 有可能先触发了退房事件，用户名下的所有stream都已清除\n\t\t\t\t\t\tif (stream.userID && stream.streamType) {\n\t\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_VIDEO_REMOVE, {\n\t\t\t\t\t\t\t\tuserID: stream.userID,\n\t\t\t\t\t\t\t\tstreamType: stream.streamType\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_VIDEO_REMOVE', 'streamList:', this.streamList, 'userList:', this\n\t\t\t\t\t\t.userList);\n\t\t\t\t}); // 音频可用\n\n\t\t\t\tthis.userController.on(EVENT.REMOTE_AUDIO_ADD, event => {\n\t\t\t\t\tconsole.log(TAG_NAME, '远端音频可用', event);\n\t\t\t\t\tconst stream = event.data.stream;\n\t\t\t\t\tthis.setListFun({\n\t\t\t\t\t\tuserList: event.data.userList,\n\t\t\t\t\t\tstreamList: event.data.streamList\n\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\tstream.playerContext = uni.createLivePlayerContext(stream.streamID,\n\t\t\t\t\t\tthis); // 新增的需要触发一次play 默认属性才能生效\n\t\t\t\t\t\t// stream.playerContext.play()\n\t\t\t\t\t\t// console.log(TAG_NAME, 'REMOTE_AUDIO_ADD playerContext.play()', stream)\n\n\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_AUDIO_ADD, {\n\t\t\t\t\t\t\tuserID: stream.userID,\n\t\t\t\t\t\t\tstreamType: stream.streamType\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_AUDIO_ADD', 'streamList:', this.streamList, 'userList:', this\n\t\t\t\t\t\t.userList);\n\t\t\t\t}); // 音频不可用\n\n\t\t\t\tthis.userController.on(EVENT.REMOTE_AUDIO_REMOVE, event => {\n\t\t\t\t\tconsole.log(TAG_NAME, '远端音频移除', event, event.data.stream.userID);\n\t\t\t\t\tconst stream = event.data.stream;\n\t\t\t\t\tthis.setListFun({\n\t\t\t\t\t\tuserList: event.data.userList,\n\t\t\t\t\t\tstreamList: event.data.streamList\n\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t// 有可能先触发了退房事件，用户名下的所有stream都已清除\n\t\t\t\t\t\tif (stream.userID && stream.streamType) {\n\t\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_AUDIO_REMOVE, {\n\t\t\t\t\t\t\t\tuserID: stream.userID,\n\t\t\t\t\t\t\t\tstreamType: stream.streamType\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_AUDIO_REMOVE', 'streamList:', this.streamList, 'userList:', this\n\t\t\t\t\t\t.userList);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * pusher event handler\n\t\t\t * @param {*} event 事件实例\n\t\t\t */\n\t\t\tpusherStateChangeHandlerFun(event) {\n\t\t\t\tconst code = event.detail.code;\n\t\t\t\tconst message = event.detail.message;\n\t\t\t\tconsole.log(TAG_NAME, 'pusherStateChange：', code, event);\n\n\t\t\t\tswitch (code) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\t// 未知状态码，不做处理\n\t\t\t\t\t\tconsole.log(TAG_NAME, message, code);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1001:\n\t\t\t\t\t\tconsole.log(TAG_NAME, '已经连接推流服务器', code);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1002:\n\t\t\t\t\t\tconsole.log(TAG_NAME, '已经与服务器握手完毕,开始推流', code);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1003:\n\t\t\t\t\t\tconsole.log(TAG_NAME, '打开摄像头成功', code);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1004:\n\t\t\t\t\t\tconsole.log(TAG_NAME, '录屏启动成功', code);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1005:\n\t\t\t\t\t\tconsole.log(TAG_NAME, '推流动态调整分辨率', code);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1006:\n\t\t\t\t\t\tconsole.log(TAG_NAME, '推流动态调整码率', code);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1007:\n\t\t\t\t\t\tconsole.log(TAG_NAME, '首帧画面采集完成', code);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1008:\n\t\t\t\t\t\tconsole.log(TAG_NAME, '编码器启动', code);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1018:\n\t\t\t\t\t\tconsole.log(TAG_NAME, '进房成功', code);\n\n\t\t\t\t\t\tthis._emitter.emit(EVENT.LOCAL_JOIN, {\n\t\t\t\t\t\t\tuserID: this.pusher.userID\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1019:\n\t\t\t\t\t\tconsole.log(TAG_NAME, '退出房间',\n\t\t\t\t\t\tcode); // 20200421 iOS 仍然没有1019事件通知退房，退房事件移动到 exitRoom 方法里，但不是后端通知的退房成功\n\t\t\t\t\t\t// this._emitter.emit(EVENT.LOCAL_LEAVE, { userID: this.data.pusher.userID })\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2003:\n\t\t\t\t\t\tconsole.log(TAG_NAME, '渲染首帧视频', code);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1020:\n\t\t\t\t\tcase 1031:\n\t\t\t\t\tcase 1032:\n\t\t\t\t\tcase 1033:\n\t\t\t\t\tcase 1034:\n\t\t\t\t\t\t// 通过 userController 处理 1020 1031 1032 1033 1034\n\t\t\t\t\t\tthis.userController.userEventHandler(event);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase -1301:\n\t\t\t\t\t\tconsole.error(TAG_NAME, '打开摄像头失败: ', code);\n\n\t\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\n\t\t\t\t\t\t\tcode,\n\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase -1302:\n\t\t\t\t\t\tconsole.error(TAG_NAME, '打开麦克风失败: ', code);\n\n\t\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\n\t\t\t\t\t\t\tcode,\n\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase -1303:\n\t\t\t\t\t\tconsole.error(TAG_NAME, '视频编码失败: ', code);\n\n\t\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\n\t\t\t\t\t\t\tcode,\n\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase -1304:\n\t\t\t\t\t\tconsole.error(TAG_NAME, '音频编码失败: ', code);\n\n\t\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\n\t\t\t\t\t\t\tcode,\n\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase -1307:\n\t\t\t\t\t\tconsole.error(TAG_NAME, '推流连接断开: ', code);\n\n\t\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\n\t\t\t\t\t\t\tcode,\n\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase -100018:\n\t\t\t\t\t\tconsole.error(TAG_NAME, '进房失败: userSig 校验失败，请检查 userSig 是否填写正确', code, message);\n\n\t\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\n\t\t\t\t\t\t\tcode,\n\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 5000:\n\t\t\t\t\t\tconsole.log(TAG_NAME, '小程序被挂起: ', code); // 20200421 iOS 微信点击胶囊圆点会触发该事件\n\t\t\t\t\t\t// 触发 5000 后，底层SDK会退房，返回前台后会自动进房\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 5001:\n\t\t\t\t\t\t// 20200421 仅有 Android 微信会触发该事件\n\t\t\t\t\t\tconsole.log(TAG_NAME, '小程序悬浮窗被关闭: ', code);\n\t\t\t\t\t\tthis.status.isPending = true;\n\n\t\t\t\t\t\tif (this.status.isPush) {\n\t\t\t\t\t\t\tthis.exitRoom();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1021:\n\t\t\t\t\t\tconsole.log(TAG_NAME, '网络类型发生变化，需要重新进房', code);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2007:\n\t\t\t\t\t\tconsole.log(TAG_NAME, '本地视频播放loading: ', code);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2004:\n\t\t\t\t\t\tconsole.log(TAG_NAME, '本地视频播放开始: ', code);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log(TAG_NAME, message, code);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tpusherNetStatusHandlerFun(event) {\n\t\t\t\t// 触发 LOCAL_NET_STATE_UPDATE\n\t\t\t\tthis._emitter.emit(EVENT.LOCAL_NET_STATE_UPDATE, event);\n\t\t\t},\n\n\t\t\tpusherErrorHandlerFun(event) {\n\t\t\t\t// 触发 ERROR\n\t\t\t\tconsole.warn(TAG_NAME, 'pusher error', event);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst code = event.detail.errCode;\n\t\t\t\t\tconst message = event.detail.errMsg;\n\n\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tmessage\n\t\t\t\t\t});\n\t\t\t\t} catch (exception) {\n\t\t\t\t\tconsole.error(TAG_NAME, 'pusher error data parser exception', event, exception);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tpusherBGMStartHandlerFun(event) { // 触发 BGM_START 已经在playBGM方法中进行处理\n\t\t\t\t// this._emitter.emit(EVENT.BGM_PLAY_START, { data: event })\n\t\t\t},\n\n\t\t\tpusherBGMProgressHandlerFun(event) {\n\t\t\t\t// BGM_PROGRESS\n\t\t\t\tthis._emitter.emit(EVENT.BGM_PLAY_PROGRESS, event);\n\t\t\t},\n\n\t\t\tpusherBGMCompleteHandlerFun(event) {\n\t\t\t\t// BGM_COMPLETE\n\t\t\t\tthis._emitter.emit(EVENT.BGM_PLAY_COMPLETE, event);\n\t\t\t},\n\n\t\t\tpusherAudioVolumeNotifyFun: function(event) {\n\t\t\t\t// console.log(TAG_NAME, 'pusherAudioVolumeNotifyFun', event)\n\t\t\t\tthis._emitter.emit(EVENT.LOCAL_AUDIO_VOLUME_UPDATE, event);\n\t\t\t},\n\n\t\t\t// player event handler\n\t\t\t// 获取 player ID 再进行触发\n\t\t\tplayerStateChangeFun(event) {\n\t\t\t\t// console.log(TAG_NAME, 'playerStateChangeFun', event)\n\t\t\t\tthis._emitter.emit(EVENT.REMOTE_STATE_UPDATE, event);\n\t\t\t},\n\n\t\t\tplayerFullscreenChangeFun(event) {\n\t\t\t\t// console.log(TAG_NAME, 'playerFullscreenChangeFun', event)\n\t\t\t\tthis._emitter.emit(EVENT.REMOTE_FULLSCREEN_UPDATE, event);\n\n\t\t\t\tthis._emitter.emit(EVENT.VIDEO_FULLSCREEN_UPDATE, event);\n\t\t\t},\n\n\t\t\tplayerNetStatusFun(event) {\n\t\t\t\t// console.log(TAG_NAME, 'playerNetStatusFun', event)\n\t\t\t\t// 获取player 视频的宽高\n\t\t\t\tconst stream = this.userController.getStream({\n\t\t\t\t\tuserID: event.currentTarget.dataset.userid,\n\t\t\t\t\tstreamType: event.currentTarget.dataset.streamtype\n\t\t\t\t});\n\n\t\t\t\tif (stream && (stream.videoWidth !== event.detail.info.videoWidth || stream.videoHeight !== event.detail\n\t\t\t\t\t\t.info.videoHeight)) {\n\t\t\t\t\tconsole.log(TAG_NAME, 'playerNetStatusFun update video size', event);\n\t\t\t\t\tstream.videoWidth = event.detail.info.videoWidth;\n\t\t\t\t\tstream.videoHeight = event.detail.info.videoHeight;\n\t\t\t\t}\n\n\t\t\t\tthis._emitter.emit(EVENT.REMOTE_NET_STATE_UPDATE, event);\n\t\t\t},\n\n\t\t\tplayerAudioVolumeNotifyFun(event) {\n\t\t\t\t// console.log(TAG_NAME, 'playerAudioVolumeNotifyFun', event)\n\t\t\t\tthis._emitter.emit(EVENT.REMOTE_AUDIO_VOLUME_UPDATE, event);\n\t\t\t},\n\n\t\t\tfilterVisibleStreamFun(streamList, skipPagination) {\n\t\t\t\tconst list = streamList.filter(item => {\n\t\t\t\t\t// 全部显示\n\t\t\t\t\t// return true\n\t\t\t\t\t// 只显示有视频或者有音频的 stream\n\t\t\t\t\treturn item.hasVideo || item.hasAudio;\n\t\t\t\t}); // 按 userID 进行排序\n\n\t\t\t\tlist.sort((item1, item2) => {\n\t\t\t\t\tconst id1 = item1.userID.toUpperCase();\n\t\t\t\t\tconst id2 = item2.userID.toUpperCase();\n\n\t\t\t\t\tif (id1 < id2) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (id1 > id2) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\t\t\tif (this.template === 'grid' && !skipPagination) {\n\t\t\t\t\tthis.filterGridPageVisibleStreamFun(\n\t\t\t\t\tlist); // console.log(TAG_NAME, '_filterVisibleStream gridPagePlaceholderStreamList:', this.data.gridPagePlaceholderStreamList)\n\n\t\t\t\t\tif ( // list.length > this.data.gridPlayerPerPage - 2 &&\n\t\t\t\t\t\tthis.gridCurrentPage > 1 && this.gridPagePlaceholderStreamList.length === this.gridPlayerPerPage) {\n\t\t\t\t\t\t// 如果stream 数量大于每页可显示数量，当前页面已经没有可显示的stream(占位数量==3) 回到上一个页面。\n\t\t\t\t\t\tthis.gridPageToPrevFun(list);\n\t\t\t\t\t}\n\t\t\t\t} // console.log(TAG_NAME, '_filterVisibleStream list:', list)\n\n\n\t\t\t\treturn list;\n\t\t\t},\n\n\t\t\tfilterGridPageVisibleStreamFun(list) {\n\t\t\t\t// 最多只显示 gridPlayerPerPage 个stream\n\t\t\t\tconst length = list.length; // +1 pusher\n\n\t\t\t\tthis.gridPageCount = Math.ceil((length + 1) / this.gridPlayerPerPage);\n\t\t\t\tthis.gridPagePlaceholderStreamList = [];\n\t\t\t\tlet visibleCount = 0; // 需要显示的player区间\n\n\t\t\t\tlet interval;\n\n\t\t\t\tif (this.gridPlayerPerPage > 3) {\n\t\t\t\t\tif (this.gridCurrentPage === 1) {\n\t\t\t\t\t\tinterval = [-1, this.gridPlayerPerPage - 1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 每页显示4个时，第一页显示3个，pusher只在第一页\n\t\t\t\t\t\t// -1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14\n\t\t\t\t\t\t//    1     2       3        4\n\t\t\t\t\t\t// -1 3\n\t\t\t\t\t\t// 2 7\n\t\t\t\t\t\t// 6 11\n\t\t\t\t\t\tinterval = [this.gridCurrentPage * this.gridPlayerPerPage - (this.gridPlayerPerPage + 2), this\n\t\t\t\t\t\t\t.gridCurrentPage * this.gridPlayerPerPage - 1\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// 每页显示3个，每页都有pusher\n\t\t\t\t\tinterval = [this.gridCurrentPage * this.gridPlayerPerPage - (this.gridPlayerPerPage + 1), this\n\t\t\t\t\t\t.gridCurrentPage * this.gridPlayerPerPage\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tif (i > interval[0] && i < interval[1]) {\n\t\t\t\t\t\tlist[i].isVisible = true;\n\t\t\t\t\t\tlist[i].muteVideo = list[i].muteVideoPrev === undefined ? list[i].muteVideo : list[i]\n\t\t\t\t\t\t.muteVideoPrev;\n\t\t\t\t\t\tvisibleCount++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlist[i].isVisible = false;\n\t\t\t\t\t\tlist[i].muteVideo = true;\n\t\t\t\t\t}\n\t\t\t\t} // 第一页，不需要占位\n\n\n\t\t\t\tif (this.gridCurrentPage !== 1) {\n\t\t\t\t\tfor (let i = 0; i < this.gridPlayerPerPage - visibleCount; i++) {\n\t\t\t\t\t\tthis.gridPagePlaceholderStreamList.push({\n\t\t\t\t\t\t\tid: 'holder-' + i\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn list;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 保持屏幕常亮\n\t\t\t */\n\t\t\tkeepScreenOnFun() {\n\t\t\t\tsetInterval(() => {\n\t\t\t\t\tuni.setKeepScreenOn({\n\t\t\t\t\t\tkeepScreenOn: true\n\t\t\t\t\t});\n\t\t\t\t}, 20000);\n\t\t\t},\n\n\t\t\t//  ______  __       __        ______             __                                              __\n\t\t\t//  |      \\|  \\     /  \\      |      \\           |  \\                                            |  \\\n\t\t\t//   \\$$$$$$| $$\\   /  $$       \\$$$$$$ _______  _| $$_     ______    ______   _______    ______  | $$\n\t\t\t//    | $$  | $$$\\ /  $$$        | $$  |       \\|   $$ \\   /      \\  /      \\ |       \\  |      \\ | $$\n\t\t\t//    | $$  | $$$$\\  $$$$        | $$  | $$$$$$$\\\\$$$$$$  |  $$$$$$\\|  $$$$$$\\| $$$$$$$\\  \\$$$$$$\\| $$\n\t\t\t//    | $$  | $$\\$$ $$ $$        | $$  | $$  | $$ | $$ __ | $$    $$| $$   \\$$| $$  | $$ /      $$| $$\n\t\t\t//   _| $$_ | $$ \\$$$| $$       _| $$_ | $$  | $$ | $$|  \\| $$$$$$$$| $$      | $$  | $$|  $$$$$$$| $$\n\t\t\t//  |   $$ \\| $$  \\$ | $$      |   $$ \\| $$  | $$  \\$$  $$ \\$$     \\| $$      | $$  | $$ \\$$    $$| $$\n\t\t\t//   \\$$$$$$ \\$$      \\$$       \\$$$$$$ \\$$   \\$$   \\$$$$   \\$$$$$$$ \\$$       \\$$   \\$$  \\$$$$$$$ \\$$\n\n\t\t\t/**\n\t\t\t * 初始化 IM SDK\n\t\t\t * @param {Object} config sdkAppID\n\t\t\t */\n\t\t\tinitIMFun(config) {\n\t\t\t\tif (!config.enableIM || !config.sdkAppID || this.tim) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(TAG_NAME, '_initIM', config); // 初始化 sdk 实例\n\n\t\t\t\tconst tim = TIM.create({\n\t\t\t\t\tSDKAppID: config.sdkAppID\n\t\t\t\t}); // 0 普通级别，日志量较多，接入时建议使用\n\t\t\t\t// 1 release级别，SDK 输出关键信息，生产环境时建议使用\n\t\t\t\t// 2 告警级别，SDK 只输出告警和错误级别的日志\n\t\t\t\t// 3 错误级别，SDK 只输出错误级别的日志\n\t\t\t\t// 4 无日志级别，SDK 将不打印任何日志\n\n\t\t\t\tif (config.debugMode) {\n\t\t\t\t\ttim.setLogLevel(1);\n\t\t\t\t} else {\n\t\t\t\t\ttim.setLogLevel(4);\n\t\t\t\t} // 取消监听\n\n\n\t\t\t\ttim.off(TIM.EVENT.SDK_READY, this.onIMReadyFun);\n\t\t\t\ttim.off(TIM.EVENT.MESSAGE_RECEIVED, this.onIMMessageReceivedFun);\n\t\t\t\ttim.off(TIM.EVENT.SDK_NOT_READY, this.onIMNotReadyFun);\n\t\t\t\ttim.off(TIM.EVENT.KICKED_OUT, this.onIMKickedOutFun);\n\t\t\t\ttim.off(TIM.EVENT.ERROR, this.onIMErrorFun); // 监听事件\n\n\t\t\t\ttim.on(TIM.EVENT.SDK_READY, this.onIMReadyFun, this);\n\t\t\t\ttim.on(TIM.EVENT.MESSAGE_RECEIVED, this.onIMMessageReceivedFun, this);\n\t\t\t\ttim.on(TIM.EVENT.SDK_NOT_READY, this.onIMNotReadyFun, this);\n\t\t\t\ttim.on(TIM.EVENT.KICKED_OUT, this.onIMKickedOutFun, this);\n\t\t\t\ttim.on(TIM.EVENT.ERROR, this.onIMErrorFun, this);\n\t\t\t\tthis.tim = tim;\n\t\t\t\tuni.tim = tim;\n\t\t\t},\n\n\t\t\tloginIMFun(params) {\n\t\t\t\tif (!this.tim) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(TAG_NAME, '_loginIM', params);\n\t\t\t\treturn this.tim.login({\n\t\t\t\t\tuserID: params.userID,\n\t\t\t\t\tuserSig: params.userSig\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tlogoutIMFun() {\n\t\t\t\tif (!this.tim) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(TAG_NAME, '_logoutIM');\n\t\t\t\treturn this.tim.logout();\n\t\t\t},\n\n\t\t\texitIMFun() {\n\t\t\t\t// 方法需要调用限制，否则重复解散群 退群会有warn\n\t\t\t\tif (this.exitIMThrottle || !this.tim) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.exitIMThrottle = true;\n\t\t\t\tconst userList = this.getRemoteUserList();\n\t\t\t\tconst roomID = this.config.roomID;\n\t\t\t\tconst userID = this.config.userID;\n\t\t\t\tthis.searchGroupFun({\n\t\t\t\t\troomID\n\t\t\t\t}).then(imResponse => {\n\t\t\t\t\t// 查询群资料，判断是否为群主\n\t\t\t\t\tif (imResponse.data.group.ownerID === userID && userList.length === 0) {\n\t\t\t\t\t\t// 如果 userList 为 0 群主可以解散群，并登出IM\n\t\t\t\t\t\tthis.dismissGroupFun({\n\t\t\t\t\t\t\troomID\n\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\tthis.exitIMThrottle = false;\n\t\t\t\t\t\t\tthis.logoutIMFun();\n\t\t\t\t\t\t}).catch(imError => {\n\t\t\t\t\t\t\tthis.exitIMThrottle = false;\n\t\t\t\t\t\t\tthis.logoutIMFun();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (imResponse.data.group.ownerID === userID) {\n\t\t\t\t\t\tthis.exitIMThrottle = false; // 群主不能退群只能登出\n\n\t\t\t\t\t\tthis.logoutIMFun();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 普通成员退群并登出IM\n\t\t\t\t\t\tthis.quitGroupFun({\n\t\t\t\t\t\t\troomID\n\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\tthis.exitIMThrottle = false;\n\t\t\t\t\t\t\tthis.logoutIMFun();\n\t\t\t\t\t\t}).catch(imError => {\n\t\t\t\t\t\t\tthis.exitIMThrottle = false;\n\t\t\t\t\t\t\tthis.logoutIMFun();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}).catch(imError => {\n\t\t\t\t\tthis.exitIMThrottle = false; // 查询异常直接登出\n\n\t\t\t\t\tthis.logoutIMFun();\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tsearchGroupFun(params) {\n\t\t\t\tif (!this.tim) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(TAG_NAME, '_searchGroup', params);\n\t\t\t\tconst tim = this.tim;\n\t\t\t\tconst promise = tim.searchGroupByID(params.roomID + '');\n\t\t\t\tpromise.then(function(imResponse) {\n\t\t\t\t\t// const group = imResponse.data.group // 群组信息\n\t\t\t\t\tconsole.log(TAG_NAME, '_searchGroup success', imResponse);\n\t\t\t\t}).catch(function(imError) {\n\t\t\t\t\tconsole.warn(TAG_NAME, '_searchGroup fail，TIM 报错信息不影响后续逻辑，可以忽略', imError); // 搜素群组失败的相关信息\n\t\t\t\t});\n\t\t\t\treturn promise;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 创建 AVchatroom\n\t\t\t * @param {*} params roomID\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tcreateGroupFun(params) {\n\t\t\t\tif (!this.tim) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(TAG_NAME, '_createGroup', params);\n\t\t\t\tconst promise = this.tim.createGroup({\n\t\t\t\t\tgroupID: params.roomID + '',\n\t\t\t\t\tname: params.roomID + '',\n\t\t\t\t\ttype: IM_GROUP_TYPE\n\t\t\t\t});\n\t\t\t\tpromise.then(imResponse => {\n\t\t\t\t\t// 创建成功\n\t\t\t\t\tconsole.log(TAG_NAME, '_createGroup success', imResponse.data.group); // 创建的群的资料\n\t\t\t\t}).catch(imError => {\n\t\t\t\t\tconsole.warn(TAG_NAME, '_createGroup error', imError); // 创建群组失败的相关信息\n\t\t\t\t});\n\t\t\t\treturn promise;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 进入 AVchatroom\n\t\t\t * @param {*} params roomID\n\t\t\t * @returns {Promise}\n\t\t\t */\n\t\t\tjoinGroupFun(params) {\n\t\t\t\tif (!this.tim) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(TAG_NAME, '_joinGroup', params);\n\t\t\t\tconst promise = this.tim.joinGroup({\n\t\t\t\t\tgroupID: params.roomID + '',\n\t\t\t\t\ttype: IM_GROUP_TYPE\n\t\t\t\t});\n\t\t\t\tpromise.then(imResponse => {\n\t\t\t\t\tswitch (imResponse.data.status) {\n\t\t\t\t\t\tcase TIM.TYPES.JOIN_STATUS_WAIT_APPROVAL:\n\t\t\t\t\t\t\t// 等待管理员同意\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TIM.TYPES.JOIN_STATUS_SUCCESS: // 加群成功\n\n\t\t\t\t\t\tcase TIM.TYPES.JOIN_STATUS_ALREADY_IN_GROUP:\n\t\t\t\t\t\t\t// 已经在群中\n\t\t\t\t\t\t\t// console.log(imResponse.data.group) // 加入的群组资料\n\t\t\t\t\t\t\t// wx.showToast({\n\t\t\t\t\t\t\t//   title: '进群成功',\n\t\t\t\t\t\t\t// })\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, '_joinGroup success', imResponse);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}).catch(imError => {\n\t\t\t\t\tconsole.warn(TAG_NAME, 'joinGroup error', imError); // 申请加群失败的相关信息\n\t\t\t\t});\n\t\t\t\treturn promise;\n\t\t\t},\n\n\t\t\tquitGroupFun(params) {\n\t\t\t\tif (!this.tim) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(TAG_NAME, '_quitGroup', params);\n\t\t\t\tconst promise = this.tim.quitGroup(params.roomID + '');\n\t\t\t\tpromise.then(imResponse => {\n\t\t\t\t\tconsole.log(TAG_NAME, '_quitGroup success', imResponse);\n\t\t\t\t}).catch(imError => {\n\t\t\t\t\tconsole.warn(TAG_NAME, 'quitGroup error', imError);\n\t\t\t\t});\n\t\t\t\treturn promise;\n\t\t\t},\n\n\t\t\tdismissGroupFun(params) {\n\t\t\t\tif (!this.tim) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(TAG_NAME, '_dismissGroup', params);\n\t\t\t\tconst promise = this.tim.dismissGroup(params.roomID + '');\n\t\t\t\tpromise.then(imResponse => {\n\t\t\t\t\tconsole.log(TAG_NAME, '_dismissGroup success', imResponse);\n\t\t\t\t}).catch(imError => {\n\t\t\t\t\tconsole.warn(TAG_NAME, '_dismissGroup error', imError);\n\t\t\t\t});\n\t\t\t\treturn promise;\n\t\t\t},\n\n\t\t\tonIMReadyFun(event) {\n\t\t\t\tconsole.log(TAG_NAME, 'IM.READY', event);\n\n\t\t\t\tthis._emitter.emit(EVENT.IM_READY, event);\n\n\t\t\t\tconst roomID = this.config.roomID; // 查询群组是否存在\n\n\t\t\t\tthis.searchGroupFun({\n\t\t\t\t\troomID\n\t\t\t\t}).then(res => {\n\t\t\t\t\t// console.log(TAG_NAME, 'searchGroup', res)\n\t\t\t\t\t// 存在直接进群\n\t\t\t\t\tthis.joinGroupFun({\n\t\t\t\t\t\troomID\n\t\t\t\t\t});\n\t\t\t\t}).catch(() => {\n\t\t\t\t\t// 不存在则创建，如果是avchatroom 创建后进群\n\t\t\t\t\tthis.createGroupFun({\n\t\t\t\t\t\troomID\n\t\t\t\t\t}).then(res => {\n\t\t\t\t\t\t// 进群\n\t\t\t\t\t\tthis.joinGroupFun({\n\t\t\t\t\t\t\troomID\n\t\t\t\t\t\t});\n\t\t\t\t\t}).catch(imError => {\n\t\t\t\t\t\tif (imError.code === 10021) {\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, '群已存在，直接进群', event);\n\t\t\t\t\t\t\tthis.joinGroupFun({\n\t\t\t\t\t\t\t\troomID\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}); // 收到离线消息和会话列表同步完毕通知，接入侧可以调用 sendMessage 等需要鉴权的接口\n\t\t\t\t// event.name - TIM.EVENT.IM_READY\n\t\t\t},\n\n\t\t\tonIMMessageReceivedFun(event) {\n\t\t\t\t// 收到推送的单聊、群聊、群提示、群系统通知的新消息，可通过遍历 event.data 获取消息列表数据并渲染到页面\n\t\t\t\tconsole.log(TAG_NAME, 'IM.MESSAGE_RECEIVED', event); // messageList 仅保留10条消息\n\n\t\t\t\tconst messageData = event.data;\n\t\t\t\tconst roomID = this.config.roomID + '';\n\t\t\t\tconst userID = this.config.userID + '';\n\n\t\t\t\tfor (let i = 0; i < messageData.length; i++) {\n\t\t\t\t\tconst message = messageData[\n\t\t\t\t\ti]; // console.log(TAG_NAME, 'IM.MESSAGE_RECEIVED', message, this.data.config, TIM.TYPES.MSG_TEXT)\n\n\t\t\t\t\tif (message.to === roomID + '' || message.to === userID) {\n\t\t\t\t\t\t// 遍历messageData 获取当前room 或者当前user的消息\n\t\t\t\t\t\tconsole.log(TAG_NAME, 'IM.MESSAGE_RECEIVED', message, message.type, TIM.TYPES.MSG_TEXT);\n\n\t\t\t\t\t\tif (message.type === TIM.TYPES.MSG_TEXT) {\n\t\t\t\t\t\t\tthis.pushMessageListFun({\n\t\t\t\t\t\t\t\tname: message.from,\n\t\t\t\t\t\t\t\tmessage: message.payload.text\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (message.type === TIM.TYPES.MSG_GRP_SYS_NOTICE && message.payload.operationType === 2) {\n\t\t\t\t\t\t\t\t// 群系统通知\n\t\t\t\t\t\t\t\tthis.pushMessageListFun({\n\t\t\t\t\t\t\t\t\tname: '系统通知',\n\t\t\t\t\t\t\t\t\tmessage: `欢迎 ${userID}`\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} // 其他消息暂不处理\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._emitter.emit(EVENT.IM_MESSAGE_RECEIVED, event);\n\t\t\t},\n\n\t\t\tonIMNotReadyFun(event) {\n\t\t\t\tconsole.log(TAG_NAME, 'IM.NOT_READY', event);\n\n\t\t\t\tthis._emitter.emit(EVENT.IM_NOT_READY, event); // 收到 SDK 进入 not ready 状态通知，此时 SDK 无法正常工作\n\t\t\t\t// event.name - TIM.EVENT.IM_NOT_READY\n\n\t\t\t},\n\n\t\t\tonIMKickedOutFun(event) {\n\t\t\t\tconsole.log(TAG_NAME, 'IM.KICKED_OUT', event);\n\n\t\t\t\tthis._emitter.emit(EVENT.IM_KICKED_OUT, event); // 收到被踢下线通知\n\t\t\t\t// event.name - TIM.EVENT.KICKED_OUT\n\t\t\t\t// event.data.type - 被踢下线的原因，例如 :\n\t\t\t\t//    - TIM.TYPES.KICKED_OUT_MULT_ACCOUNT 多实例登录被踢\n\t\t\t\t//    - TIM.TYPES.KICKED_OUT_MULT_DEVICE 多终端登录被踢\n\t\t\t\t//    - TIM.TYPES.KICKED_OUT_USERSIG_EXPIRED 签名过期被踢。使用前需要将SDK版本升级至v2.4.0或以上。\n\n\t\t\t},\n\n\t\t\tonIMErrorFun(event) {\n\t\t\t\tconsole.log(TAG_NAME, 'IM.ERROR', event);\n\n\t\t\t\tthis._emitter.emit(EVENT.IM_ERROR, event); // 收到 SDK 发生错误通知，可以获取错误码和错误信息\n\t\t\t\t// event.name - TIM.EVENT.ERROR\n\t\t\t\t// event.data.code - 错误码\n\t\t\t\t// event.data.message - 错误信息\n\n\t\t\t},\n\n\t\t\t//  ________                                  __             __\n\t\t\t//  |        \\                                |  \\           |  \\\n\t\t\t//   \\$$$$$$$$______   ______ ____    ______  | $$  ______  _| $$_     ______\n\t\t\t//     | $$  /      \\ |      \\    \\  /      \\ | $$ |      \\|   $$ \\   /      \\\n\t\t\t//     | $$ |  $$$$$$\\| $$$$$$\\$$$$\\|  $$$$$$\\| $$  \\$$$$$$\\\\$$$$$$  |  $$$$$$\\\n\t\t\t//     | $$ | $$    $$| $$ | $$ | $$| $$  | $$| $$ /      $$ | $$ __ | $$    $$\n\t\t\t//     | $$ | $$$$$$$$| $$ | $$ | $$| $$__/ $$| $$|  $$$$$$$ | $$|  \\| $$$$$$$$\n\t\t\t//     | $$  \\$$     \\| $$ | $$ | $$| $$    $$| $$ \\$$    $$  \\$$  $$ \\$$     \\\n\t\t\t//      \\$$   \\$$$$$$$ \\$$  \\$$  \\$$| $$$$$$$  \\$$  \\$$$$$$$   \\$$$$   \\$$$$$$$\n\t\t\t//                                  | $$\n\t\t\t//                                  | $$\n\t\t\t//                                   \\$$\n\t\t\t// 以下为 debug & template 相关函数\n\t\t\ttoggleVideoFun() {\n\t\t\t\tif (this.pusher.enableCamera) {\n\t\t\t\t\tthis.unpublishLocalVideo();\n\t\t\t\t} else {\n\t\t\t\t\tthis.publishLocalVideo();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ttoggleAudioFun() {\n\t\t\t\tif (this.pusher.enableMic) {\n\t\t\t\t\tthis.unpublishLocalAudio();\n\t\t\t\t} else {\n\t\t\t\t\tthis.publishLocalAudio();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tdebugToggleRemoteVideoFun(event) {\n\t\t\t\tconsole.log(TAG_NAME, '_debugToggleRemoteVideo', event.currentTarget.dataset);\n\t\t\t\tconst userID = event.currentTarget.dataset.userID;\n\t\t\t\tconst streamType = event.currentTarget.dataset.streamType;\n\t\t\t\tconst stream = this.streamList.find(item => {\n\t\t\t\t\treturn item.userID === userID && item.streamType === streamType;\n\t\t\t\t});\n\n\t\t\t\tif (stream.muteVideo) {\n\t\t\t\t\tthis.subscribeRemoteVideo({\n\t\t\t\t\t\tuserID,\n\t\t\t\t\t\tstreamType\n\t\t\t\t\t}); // this.setViewVisible({ userID, streamType, isVisible: true })\n\t\t\t\t} else {\n\t\t\t\t\tthis.unsubscribeRemoteVideo({\n\t\t\t\t\t\tuserID,\n\t\t\t\t\t\tstreamType\n\t\t\t\t\t}); // this.setViewVisible({ userID, streamType, isVisible: false })\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tdebugToggleRemoteAudioFun(event) {\n\t\t\t\tconsole.log(TAG_NAME, '_debugToggleRemoteAudio', event.currentTarget.dataset);\n\t\t\t\tconst userID = event.currentTarget.dataset.userID;\n\t\t\t\tconst streamType = event.currentTarget.dataset.streamType;\n\t\t\t\tconst stream = this.streamList.find(item => {\n\t\t\t\t\treturn item.userID === userID && item.streamType === streamType;\n\t\t\t\t});\n\n\t\t\t\tif (stream.muteAudio) {\n\t\t\t\t\tthis.subscribeRemoteAudio({\n\t\t\t\t\t\tuserID\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.unsubscribeRemoteAudio({\n\t\t\t\t\t\tuserID\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tdebugToggleVideoDebugFun() {\n\t\t\t\tthis.setData({\n\t\t\t\t\tdebug: !this.debug\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tdebugExitRoomFun() {\n\t\t\t\tthis.exitRoom();\n\t\t\t},\n\n\t\t\tdebugEnterRoomFun() {\n\t\t\t\tObject.assign(this.pusher, this.config);\n\t\t\t\tthis.enterRoom({\n\t\t\t\t\troomID: this.config.roomID\n\t\t\t\t}).then(() => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.publishLocalVideo();\n\t\t\t\t\t\tthis.publishLocalAudio();\n\t\t\t\t\t}, 2000); // 进房后开始推送视频或音频\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tdebugGoBackFun() {\n\t\t\t\tuni.navigateBack({\n\t\t\t\t\tdelta: 1\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tdebugTogglePanelFun() {\n\t\t\t\tthis.setData({\n\t\t\t\t\tdebugPanel: !this.debugPanel\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tdebugSendRandomMessageFun() {\n\t\t\t\tconst userList = this.getRemoteUserList();\n\n\t\t\t\tif (userList.length === 0 || !this.tim) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst roomID = this.config.roomID;\n\t\t\t\tconst message = `Hello! ${userList[0].userID} ${9999 * Math.random()}`;\n\t\t\t\tconst userID = userList[0].userID;\n\t\t\t\tthis.sendC2CTextMessage({\n\t\t\t\t\tuserID: userID,\n\t\t\t\t\tmessage: message\n\t\t\t\t});\n\t\t\t\tconst promise = this.sendGroupTextMessage({\n\t\t\t\t\troomID: roomID,\n\t\t\t\t\tmessage: message\n\t\t\t\t}); // 消息上屏\n\n\t\t\t\tthis.pushMessageListFun({\n\t\t\t\t\tname: userID,\n\t\t\t\t\tmessage: message\n\t\t\t\t});\n\t\t\t\tpromise.then(function(imResponse) {\n\t\t\t\t\t// 发送成功\n\t\t\t\t\tconsole.log(TAG_NAME, '_debugSendRandomMessage success', imResponse);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '发送成功',\n\t\t\t\t\t\ticon: 'success',\n\t\t\t\t\t\tduration: 1000\n\t\t\t\t\t});\n\t\t\t\t}).catch(function(imError) {\n\t\t\t\t\t// 发送失败\n\t\t\t\t\tconsole.warn(TAG_NAME, '_debugSendRandomMessage error', imError);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '发送失败',\n\t\t\t\t\t\ticon: 'none',\n\t\t\t\t\t\tduration: 1000\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\n\t\t\ttoggleAudioVolumeTypeFun() {\n\t\t\t\tif (this.pusher.audioVolumeType === 'voicecall') {\n\t\t\t\t\tthis.setPusherConfigFun({\n\t\t\t\t\t\taudioVolumeType: 'media'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.setPusherConfigFun({\n\t\t\t\t\t\taudioVolumeType: 'voicecall'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ttoggleSoundModeFun() {\n\t\t\t\tif (this.userList.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst stream = this.userController.getStream({\n\t\t\t\t\tuserID: this.userList[0].userID,\n\t\t\t\t\tstreamType: 'main'\n\t\t\t\t});\n\n\t\t\t\tif (stream) {\n\t\t\t\t\tif (stream.soundMode === 'speaker') {\n\t\t\t\t\t\tstream['soundMode'] = 'ear';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstream['soundMode'] = 'speaker';\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.setPlayerConfigFun({\n\t\t\t\t\t\tuserID: stream.userID,\n\t\t\t\t\t\tstreamType: 'main',\n\t\t\t\t\t\tconfig: {\n\t\t\t\t\t\t\tsoundMode: stream['soundMode']\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 退出通话\n\t\t\t */\n\t\t\thangUpFun() {\n\t\t\t\tthis.exitRoom();\n\t\t\t\tuni.navigateBack({\n\t\t\t\t\tdelta: 1\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 切换订阅音频状态\n\t\t\t */\n\t\t\thandleSubscribeAudio() {\n\t\t\t\tif (this.pusher.enableMic) {\n\t\t\t\t\tthis.unpublishLocalAudio();\n\t\t\t\t} else {\n\t\t\t\t\tthis.publishLocalAudio();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 切换订阅远端视频状态\n\t\t\t * @param {Object} event native 事件对象\n\t\t\t */\n\t\t\thandleSubscribeRemoteVideoFun(event) {\n\t\t\t\tconst userID = event.currentTarget.dataset.userID;\n\t\t\t\tconst streamType = event.currentTarget.dataset.streamType;\n\t\t\t\tconst stream = this.streamList.find(item => {\n\t\t\t\t\treturn item.userID === userID && item.streamType === streamType;\n\t\t\t\t});\n\n\t\t\t\tif (stream.muteVideo) {\n\t\t\t\t\tthis.subscribeRemoteVideo({\n\t\t\t\t\t\tuserID,\n\t\t\t\t\t\tstreamType\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.unsubscribeRemoteVideo({\n\t\t\t\t\t\tuserID,\n\t\t\t\t\t\tstreamType\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t * @param {Object} event native 事件对象\n\t\t\t */\n\t\t\thandleSubscribeRemoteAudioFun(event) {\n\t\t\t\tconst userID = event.currentTarget.dataset.userID;\n\t\t\t\tconst streamType = event.currentTarget.dataset.streamType;\n\t\t\t\tconst stream = this.streamList.find(item => {\n\t\t\t\t\treturn item.userID === userID && item.streamType === streamType;\n\t\t\t\t});\n\n\t\t\t\tif (stream.muteAudio) {\n\t\t\t\t\tthis.subscribeRemoteAudio({\n\t\t\t\t\t\tuserID\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.unsubscribeRemoteAudio({\n\t\t\t\t\t\tuserID\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * grid布局, 唤起 memberlist-panel\n\t\t\t */\n\t\t\tswitchMemberListPanelFun() {\n\t\t\t\tthis.setData({\n\t\t\t\t\tpanelName: this.panelName !== 'memberlist-panel' ? 'memberlist-panel' : ''\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * grid布局, 唤起 setting-panel\n\t\t\t */\n\t\t\tswitchSettingPanelFun() {\n\t\t\t\tthis.setData({\n\t\t\t\t\tpanelName: this.panelName !== 'setting-panel' ? 'setting-panel' : ''\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tswitchBGMPanelFun() {\n\t\t\t\tthis.setData({\n\t\t\t\t\tpanelName: this.panelName !== 'bgm-panel' ? 'bgm-panel' : ''\n\t\t\t\t});\n\t\t\t},\n\n\t\t\thandleMaskerClickFun() {\n\t\t\t\tthis.setData({\n\t\t\t\t\tpanelName: ''\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tsetPuserPropertyFun(event) {\n\t\t\t\tconsole.log(TAG_NAME, 'setPuserPropertyFun', event);\n\t\t\t\tconst key = event.currentTarget.dataset.key;\n\t\t\t\tconst valueType = event.currentTarget.dataset.valueType;\n\t\t\t\tlet value = event.currentTarget.dataset.value;\n\t\t\t\tconst config = {};\n\n\t\t\t\tif (valueType === 'boolean') {\n\t\t\t\t\tvalue = value === 'true' ? true : false;\n\t\t\t\t\tconfig[key] = !this.pusher[key];\n\t\t\t\t}\n\n\t\t\t\tif (valueType === 'number' && value.indexOf('|') > 0) {\n\t\t\t\t\tvalue = value.split('|'); // console.log(this.data.pusher, this.data.pusher[key], key, value)\n\n\t\t\t\t\tif (this.pusher[key] === Number(value[0])) {\n\t\t\t\t\t\tconfig[key] = Number(value[1]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconfig[key] = Number(value[0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (valueType === 'string' && value.indexOf('|') > 0) {\n\t\t\t\t\tvalue = value.split('|');\n\n\t\t\t\t\tif (this.pusher[key] === value[0]) {\n\t\t\t\t\t\tconfig[key] = value[1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconfig[key] = value[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.setPusherConfigFun(config);\n\t\t\t},\n\n\t\t\tsetPlayerPropertyFun(event) {\n\t\t\t\tconsole.log(TAG_NAME, 'setPlayerPropertyFun', event);\n\t\t\t\tconst userID = event.currentTarget.dataset.userid;\n\t\t\t\tconst streamType = event.currentTarget.dataset.streamtype;\n\t\t\t\tconst key = event.currentTarget.dataset.key;\n\t\t\t\tlet value = event.currentTarget.dataset.value;\n\t\t\t\tconst stream = this.userController.getStream({\n\t\t\t\t\tuserID: userID,\n\t\t\t\t\tstreamType: streamType\n\t\t\t\t});\n\n\t\t\t\tif (!stream) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst config = {};\n\n\t\t\t\tif (value === 'true') {\n\t\t\t\t\tvalue = true;\n\t\t\t\t} else if (value === 'false') {\n\t\t\t\t\tvalue = false;\n\t\t\t\t}\n\n\t\t\t\tif (typeof value === 'boolean') {\n\t\t\t\t\tconfig[key] = !stream[key];\n\t\t\t\t} else if (typeof value === 'string' && value.indexOf('|') > 0) {\n\t\t\t\t\tvalue = value.split('|');\n\n\t\t\t\t\tif (stream[key] === value[0]) {\n\t\t\t\t\t\tconfig[key] = value[1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconfig[key] = value[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconsole.log(TAG_NAME, 'setPlayerPropertyFun', config);\n\t\t\t\tthis.setPlayerConfigFun({\n\t\t\t\t\tuserID,\n\t\t\t\t\tstreamType,\n\t\t\t\t\tconfig\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tchangePropertyFun(event) {\n\t\t\t\tconst propertyName = event.currentTarget.dataset.propertyName;\n\t\t\t\tconst newData = {};\n\t\t\t\tnewData[propertyName] = event.detail.value;\n\t\t\t\tthis.setData(newData);\n\t\t\t\tconst volume = newData[propertyName] / 100;\n\n\t\t\t\tswitch (propertyName) {\n\t\t\t\t\tcase 'MICVolume':\n\t\t\t\t\t\tthis.setMICVolume({\n\t\t\t\t\t\t\tvolume\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BGMVolume':\n\t\t\t\t\t\tthis.setBGMVolume({\n\t\t\t\t\t\t\tvolume\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tswitchStreamTypeFun(event) {\n\t\t\t\tconst userID = event.currentTarget.dataset.userid;\n\t\t\t\tconst streamType = event.currentTarget.dataset.streamtype;\n\t\t\t\tconst stream = this.userController.getStream({\n\t\t\t\t\tuserID: userID,\n\t\t\t\t\tstreamType: streamType\n\t\t\t\t});\n\n\t\t\t\tif (stream && stream.streamType === 'main') {\n\t\t\t\t\tif (stream._definitionType === 'small') {\n\t\t\t\t\t\tthis.subscribeRemoteVideo({\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tstreamType: 'main'\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.subscribeRemoteVideo({\n\t\t\t\t\t\t\tuserID,\n\t\t\t\t\t\t\tstreamType: 'small'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\thandleSnapshotClickFun(event) {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '开始截屏',\n\t\t\t\t\ticon: 'none',\n\t\t\t\t\tduration: 1000\n\t\t\t\t});\n\t\t\t\tconst userID = event.currentTarget.dataset.userid;\n\t\t\t\tconst streamType = event.currentTarget.dataset.streamtype;\n\t\t\t\tthis.snapshot({\n\t\t\t\t\tuserID,\n\t\t\t\t\tstreamType\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * grid布局, 绑定事件\n\t\t\t */\n\t\t\tgridBindEventFun() {\n\t\t\t\t// 远端音量变更\n\t\t\t\tthis.on(EVENT.REMOTE_AUDIO_VOLUME_UPDATE, event => {\n\t\t\t\t\tconst data = event.data;\n\t\t\t\t\tconst userID = data.currentTarget.dataset.userid;\n\t\t\t\t\tconst streamType = data.currentTarget.dataset.streamtype;\n\t\t\t\t\tconst volume = data.detail\n\t\t\t\t\t.volume; // console.log(TAG_NAME, '远端音量变更', userID, streamType, volume, event)\n\n\t\t\t\t\tconst stream = this.userController.getStream({\n\t\t\t\t\t\tuserID: userID,\n\t\t\t\t\t\tstreamType: streamType === 'aux' ? 'main' :\n\t\t\t\t\t\t\tstreamType // 远端推辅流后，音量回调会从辅流的 player 返回，而不是主流player 返回。需要等 native SDK修复。\n\n\t\t\t\t\t});\n\n\t\t\t\t\tif (stream) {\n\t\t\t\t\t\tstream.volume = volume;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.setData({\n\t\t\t\t\t\tstreamList: this.streamList,\n\t\t\t\t\t\tvisibleStreamList: this.filterVisibleStreamFun(this.streamList, true)\n\t\t\t\t\t}, () => {});\n\t\t\t\t});\n\t\t\t\tthis.on(EVENT.BGM_PLAY_PROGRESS, event => {\n\t\t\t\t\t// console.log(TAG_NAME, '_gridBindEvent on BGM_PLAY_PROGRESS', event)\n\t\t\t\t\tconst BGMProgress = event.data.detail.progress / event.data.detail.duration * 100;\n\t\t\t\t\tthis.setData({\n\t\t\t\t\t\tBGMProgress\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tthis.on(EVENT.LOCAL_AUDIO_VOLUME_UPDATE, event => {\n\t\t\t\t\t// console.log(TAG_NAME, '_gridBindEvent on LOCAL_AUDIO_VOLUME_UPDATE', event)\n\t\t\t\t\t// const data = event.data\n\t\t\t\t\tconst volume = event.data.detail.volume; // 避免频繁输出log\n\n\t\t\t\t\tthis.setPusherConfigFun({\n\t\t\t\t\t\tvolume\n\t\t\t\t\t}, true);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\thandleGridTouchStartFun(event) {\n\t\t\t\ttouchX = event.changedTouches[0].clientX;\n\t\t\t\ttouchY = event.changedTouches[0].clientY;\n\t\t\t},\n\n\t\t\thandleGridTouchEndFun(event) {\n\t\t\t\tconst x = event.changedTouches[0].clientX;\n\t\t\t\tconst y = event.changedTouches[0].clientY;\n\n\t\t\t\tif (x - touchX > 50 && Math.abs(y - touchY) < 50) {\n\t\t\t\t\t// console.log(TAG_NAME, '向右滑 当前页面', this.data.gridCurrentPage, this.data.gridPageCount)\n\t\t\t\t\tthis.gridPagePrevFun();\n\t\t\t\t} else if (x - touchX < -50 && Math.abs(y - touchY) < 50) {\n\t\t\t\t\t// console.log(TAG_NAME, '向左滑 当前页面', this.data.gridCurrentPage, this.data.gridPageCount)\n\t\t\t\t\tthis.gridPageNextFun();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tgridPageToPrevFun(streamList) {\n\t\t\t\tconst visibleStreamList = this.filterGridPageVisibleStreamFun(streamList);\n\n\t\t\t\tif (this.gridPagePlaceholderStreamList.length === this.gridPlayerPerPage) {\n\t\t\t\t\tthis.gridCurrentPage--;\n\t\t\t\t\tthis.gridPageToPrevFun(streamList);\n\t\t\t\t} else {\n\t\t\t\t\treturn visibleStreamList;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tgridPageNextFun() {\n\t\t\t\tthis.gridCurrentPage++;\n\n\t\t\t\tif (this.gridCurrentPage > this.gridPageCount) {\n\t\t\t\t\tthis.gridCurrentPage = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.gridPageSetDataFun();\n\t\t\t},\n\n\t\t\tgridPagePrevFun() {\n\t\t\t\tthis.gridCurrentPage--;\n\n\t\t\t\tif (this.gridCurrentPage < 1) {\n\t\t\t\t\tthis.gridCurrentPage = this.gridPageCount;\n\t\t\t\t}\n\n\t\t\t\tthis.gridPageSetDataFun();\n\t\t\t},\n\n\t\t\tgridPageSetDataFun() {\n\t\t\t\tthis.gridShowPageTipsFun();\n\t\t\t\tconst visibleStreamList = this.filterVisibleStreamFun(this.streamList);\n\t\t\t\tthis.setData({\n\t\t\t\t\tgridCurrentPage: this.gridCurrentPage,\n\t\t\t\t\tgridPageCount: this.gridPageCount,\n\t\t\t\t\tvisibleStreamList: visibleStreamList,\n\t\t\t\t\tstreamList: this.streamList,\n\t\t\t\t\tgridPagePlaceholderStreamList: this.gridPagePlaceholderStreamList\n\t\t\t\t}, () => {});\n\t\t\t},\n\n\t\t\tgridShowPageTipsFun(event) {\n\t\t\t\tif (this.gridPageCount < 2) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(TAG_NAME, '_gridShowPageTips', this);\n\n\t\t\t\tif (this.hasGridPageTipsShow) {\n\t\t\t\t\tclearTimeout(this.hasGridPageTipsShow);\n\t\t\t\t}\n\n\t\t\t\tthis.animate('.pages-container', [{\n\t\t\t\t\topacity: 1\n\t\t\t\t}], 100, () => {});\n\t\t\t\tthis.hasGridPageTipsShow = setTimeout(() => {\n\t\t\t\t\tthis.animate('.pages-container', [{\n\t\t\t\t\t\topacity: 1\n\t\t\t\t\t}, {\n\t\t\t\t\t\topacity: 0.3\n\t\t\t\t\t}], 600, () => {});\n\t\t\t\t}, 3000);\n\t\t\t},\n\n\t\t\ttoggleFullscreenFun(event) {\n\t\t\t\tconsole.log(TAG_NAME, 'toggleFullscreenFun', event);\n\t\t\t\tconst userID = event.currentTarget.dataset.userID;\n\t\t\t\tconst streamType = event.currentTarget.dataset.streamType;\n\n\t\t\t\tif (this._isFullscreen) {\n\t\t\t\t\tthis.exitFullscreen({\n\t\t\t\t\t\tuserID,\n\t\t\t\t\t\tstreamType\n\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\tthis._isFullscreen = false;\n\t\t\t\t\t}).catch(() => {});\n\t\t\t\t} else {\n\t\t\t\t\t// const stream = this.userController.getStream({ userID, streamType })\n\t\t\t\t\tconst direction = 0; // 已知问题：视频的尺寸需要等待player触发NetStatus事件才能获取到，如果进房就双击全屏，全屏后的方向有可能不对。\n\t\t\t\t\t// if (stream && stream.videoWidth && stream.videoHeight) {\n\t\t\t\t\t//   // 如果是横视频，全屏时进行横屏处理。如果是竖视频，则为0\n\t\t\t\t\t//   direction = stream.videoWidth > stream.videoHeight ? 90 : 0\n\t\t\t\t\t// }\n\n\t\t\t\t\tthis.enterFullscreen({\n\t\t\t\t\t\tuserID,\n\t\t\t\t\t\tstreamType,\n\t\t\t\t\t\tdirection\n\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\tthis._isFullscreen = true;\n\t\t\t\t\t}).catch(() => {});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ttoggleMoreMenuFun() {\n\t\t\t\tthis.setData({\n\t\t\t\t\tisShowMoreMenu: !this.isShowMoreMenu\n\t\t\t\t});\n\t\t\t},\n\n\t\t\ttoggleIMPanelFun() {\n\t\t\t\tif (!this.enableIM) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ticon: 'none',\n\t\t\t\t\t\ttitle: '当前没有开启IM功能，请设置 enableIM:true'\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.setData({\n\t\t\t\t\tshowIMPanel: !this.showIMPanel\n\t\t\t\t});\n\t\t\t},\n\n\t\t\thandleBGMOperationFun(event) {\n\t\t\t\tconst operationName = event.currentTarget.dataset.operationName;\n\n\t\t\t\tif (this[operationName]) {\n\t\t\t\t\tthis[operationName]({\n\t\t\t\t\t\turl: 'https://trtc-1252463788.cos.ap-guangzhou.myqcloud.com/web/assets/bgm-test.mp3'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tselectBeautyStyleFun: function(event) {\n\t\t\t\tconsole.log(TAG_NAME, '_selectBeautyStyle',\n\t\t\t\tevent); // this.data.beauty = (event.detail.value === 'close' ? 0 : 9)\n\n\t\t\t\tconst value = event.detail.value;\n\t\t\t\tthis.setData({\n\t\t\t\t\t// beauty: (value === 'close' ? 0 : 9),\n\t\t\t\t\tbeautyStyle: value\n\t\t\t\t}, () => {\n\t\t\t\t\tthis.setPusherConfigFun({\n\t\t\t\t\t\tbeautyLevel: value === 'close' ? 0 : 9,\n\t\t\t\t\t\tbeautyStyle: value === 'close' ? 'smooth' : value\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectFilterFun: function(event) {\n\t\t\t\tconsole.log(TAG_NAME, '_selectFilter', event);\n\t\t\t\tconst index = parseInt(event.detail.value);\n\t\t\t\tthis.setData({\n\t\t\t\t\tfilterIndex: index\n\t\t\t\t}, () => {\n\t\t\t\t\tthis.setPusherConfigFun({\n\t\t\t\t\t\tfilter: this.filterArray[index].value\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectAudioReverbTypeFun: function(event) {\n\t\t\t\tconsole.log(TAG_NAME, '_selectAudioReverbType', event);\n\t\t\t\tconst audioReverbType = parseInt(event.detail.value);\n\t\t\t\tthis.setPusherConfigFun({\n\t\t\t\t\taudioReverbType\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tsendIMMessageFun(event) {\n\t\t\t\tconsole.log(TAG_NAME, '_sendIMMessage', event);\n\n\t\t\t\tif (!this.messageContent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst roomID = this.config.roomID;\n\t\t\t\tconst message = this.messageContent;\n\t\t\t\tconst userID = this.config.userID;\n\t\t\t\tthis.sendGroupTextMessage({\n\t\t\t\t\troomID,\n\t\t\t\t\tmessage\n\t\t\t\t}); // 消息上屏\n\n\t\t\t\tthis.pushMessageListFun({\n\t\t\t\t\tname: userID,\n\t\t\t\t\tmessage: message\n\t\t\t\t});\n\t\t\t\tthis.setData({\n\t\t\t\t\tmessageContent: ''\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tinputIMMessageFun(event) {\n\t\t\t\t// console.log(TAG_NAME, '_inputIMMessage', event)\n\t\t\t\tthis.setData({\n\t\t\t\t\tmessageContent: event.detail.value\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tpushMessageListFun(params) {\n\t\t\t\tif (this.messageList.length === this.maxMessageListLength) {\n\t\t\t\t\tthis.messageList.shift();\n\t\t\t\t}\n\n\t\t\t\tthis.messageList.push(params);\n\t\t\t\tthis.setData({\n\t\t\t\t\tmessageList: this.messageList,\n\t\t\t\t\tmessageListScrollTop: this.messageList.length * 100\n\t\t\t\t}, () => {});\n\t\t\t}\n\n\t\t}\n\t};\n</script>\n<style>\n\t@import \"./template/1v1/1v1.css\";\n\t@import \"./template/grid/grid.css\";\n\t@import \"./template/custom/custom.css\";\n\n\t.pusher {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\n\t.player {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\n\t.debug-info {\n\t\tmax-width: 100vw;\n\t\tmax-height: 90vh;\n\t\tbox-sizing: border-box;\n\t\toverflow-y: scroll;\n\t\tposition: absolute;\n\t\tz-index: 9999;\n\t\tbackground-color: rgba(0, 0, 0, .5);\n\t\tcolor: #fff;\n\t\tbottom: 20rpx;\n\t\tleft: 0;\n\t\tpadding: 10rpx;\n\t\tfont-size: 12px;\n\t}\n\n\t.debug-info-btn .debug-btn,\n\t.debug-info .debug-btn {\n\t\tpadding: 0 8px;\n\t\tmin-height: 18px;\n\t\twidth: auto;\n\t\tfont-size: 12px;\n\t\tline-height: 18px;\n\t\tdisplay: inline-block;\n\t\tcolor: #06ae56;\n\t\tbackground-color: #f2f2f2;\n\t}\n\n\t.debug-info .debug-btn.false {\n\t\tcolor: rgb(114, 114, 114);\n\t}\n\n\t.debug-info-btn .debug-btn,\n\t.debug-info .button-hover {\n\t\tbackground-color: rgb(219, 219, 219);\n\t}\n\n\t.debug-info .close-btn {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tpadding: 5px 10px;\n\t}\n\n\t.debug-info .text.true {\n\t\tcolor: #1fff8b;\n\t}\n\n\t.debug-info .text.false {\n\t\tcolor: #ff2e2e;\n\t}\n\n\t.debug-info-btn {\n\t\tposition: absolute;\n\t\tz-index: 9998;\n\t\tbottom: 160rpx;\n\t\tleft: 0;\n\t}\n\n\t.trtc-room-container .btn {\n\t\tdisplay: inline-block;\n\t\twidth: auto;\n\t\theight: 60rpx;\n\t\tmin-height: 60rpx;\n\t\tline-height: 60rpx;\n\t\tfont-size: 12px;\n\t\tfont-weight: normal;\n\t\tpadding: 0 10rpx;\n\t\tcolor: #006eff;\n\t\tbackground-color: #f2f2f2;\n\t\tmargin: 0 16rpx;\n\t}\n\n\t.trtc-room-container .btn.active {\n\t\tcolor: #f2f2f2;\n\t\tbackground-color: #006eff;\n\t}\n\n\t.trtc-room-container .btn-hover {\n\t\tbackground-color: #d1d1d1;\n\t}\n\n\t.im-panel {\n\t\tposition: absolute;\n\t\tz-index: 9;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\twidth: 90vw;\n\t\theight: 320rpx;\n\t\ttop: 50vh;\n\t\tleft: 50vw;\n\t\ttransform: translate(-50%, -50%);\n\t\tpadding: 20rpx 0;\n\t\tborder-radius: 10rpx;\n\t\tfont-size: 12px;\n\t\t/* bottom: 25vh; */\n\t\tcolor: #fff;\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\n\t}\n\n\t.im-panel .close-btn {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: -3px;\n\t\tpadding: 5px 10px;\n\t\tz-index: 99;\n\t}\n\n\t.message-panel-body {\n\t\twidth: 100%;\n\t\theight: 80%;\n\t\toverflow-x: hidden;\n\t\toverflow-y: scroll;\n\t}\n\n\t.message-scroll-container {\n\t\theight: 100%;\n\t\t/* box-sizing: border-box;\n  padding: 0 20rpx; */\n\t}\n\n\t.message-list {\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t\tpadding: 0 20rpx;\n\t\t/* display: flex;\n  flex-direction: column; */\n\t}\n\n\t.message-item {\n\t\twidth: 100%;\n\t\t/* height: 36rpx; */\n\t\t/* padding: 0 20rpx; */\n\t\tpadding-bottom: 10rpx;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n\n\t.message-item .user-name {\n\t\twidth: 20%;\n\t\tcolor: #2483ff;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t\twhite-space: nowrap;\n\t}\n\n\t.user-name.mine {\n\t\tcolor: #ff7424;\n\t}\n\n\t.message-item .separate {\n\t\tpadding: 0 5px;\n\t\tcolor: #fff;\n\t}\n\n\t.message-item .message-content {\n\t\tword-wrap: break-word;\n\t\tword-break: break-all;\n\t\tpadding-left: 20rpx;\n\t\tposition: relative;\n\t\tmax-width: 80%;\n\t\tbox-sizing: border-box;\n\t}\n\n\t.message-content::after {\n\t\tcontent: ':';\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t}\n\n\t.message-panel-bottom {\n\t\twidth: 100%;\n\t\theight: 50rpx;\n\t\tbox-sizing: border-box;\n\t\tpadding: 0 20rpx 0;\n\t\tmargin-top: 20rpx;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n\n\t.message-input-container {\n\t\tflex-grow: 1;\n\t}\n\n\t.message-input-container .message-input {\n\t\tfont-size: 12px;\n\t\tpadding-left: 20rpx;\n\t\tborder-radius: 10rpx;\n\t\theight: 100%;\n\t\tbackground-color: rgba(0, 0, 0, 0.1);\n\t}\n\n\t.message-send-btn .btn {\n\t\tmargin-right: 0;\n\t\theight: 50rpx;\n\t\tmin-height: 50rpx;\n\t\tline-height: 50rpx;\n\t}\n\n\t.volume-animation {\n\t\tposition: absolute;\n\t\twidth: 80rpx;\n\t\theight: 80rpx;\n\t\tleft: 0;\n\t\ttop: initial;\n\t\tbottom: 20rpx;\n\t\tz-index: 9;\n\t\t/* transform: translate(-50%, 0); */\n\t}\n\n\t.volume-animation .image {\n\t\tposition: absolute;\n\t\twidth: 80rpx;\n\t\theight: 80rpx;\n\t}\n\n\t.volume-animation .audio-active {\n\t\tanimation: viewlinear 1.5s linear infinite;\n\t}\n\n\t@keyframes viewlinear {\n\n\t\t/** 第一种写法**/\n\t\t0% {\n\t\t\theight: 0;\n\t\t}\n\n\t\t100% {\n\t\t\theight: 100%;\n\t\t}\n\t}\n\n\t.none,\n\t.view-container.none,\n\t.template-grid .view-container.none,\n\t.template-1v1 .view-container.none {\n\t\tdisplay: none !important;\n\t}\n</style>\n","import mod from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./trtc-room.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./trtc-room.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}