{"version":3,"sources":["webpack:////Users/bytedance/Documents/HBuilderProjects/review_wx_applets/components/trtc-room/trtc-room.vue?0fb0","webpack:////Users/bytedance/Documents/HBuilderProjects/review_wx_applets/components/trtc-room/trtc-room.vue?882b","webpack:////Users/bytedance/Documents/HBuilderProjects/review_wx_applets/components/trtc-room/trtc-room.vue?520b","webpack:////Users/bytedance/Documents/HBuilderProjects/review_wx_applets/components/trtc-room/trtc-room.vue?a8f9","uni-app:///components/trtc-room/trtc-room.vue","webpack:////Users/bytedance/Documents/HBuilderProjects/review_wx_applets/components/trtc-room/trtc-room.vue?f27b","webpack:////Users/bytedance/Documents/HBuilderProjects/review_wx_applets/components/trtc-room/trtc-room.vue?5901"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsH;AACtH;AAC6D;AACL;AACa;;;AAGrE;AACgN;AAChN,gBAAgB,iNAAU;AAC1B,EAAE,+EAAM;AACR,EAAE,oFAAM;AACR,EAAE,6FAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,wFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAu0B,CAAgB,uygB31B;AACA;AACA;;;;AAIA;AACA;AACA;AACA,gG;AACA;AACA;AACA,YADA,C,CACA;AACA;AACA;AACA,e;;AAEA;AACA,MADA,kBACA;AACA;AACA,kBADA;AAEA,sBAFA;AAGA;AACA,kBAJA;AAKA;AACA,oBANA;AAOA;AACA,2BARA;AASA;AACA,kBAVA;AAWA;AACA,kBAZA;AAaA;AACA,wBAdA;AAeA;AACA,mBAhBA;AAiBA;AACA,oBAlBA;AAmBA,0BAnBA;AAoBA,qBApBA;AAqBA;AACA,wBAtBA;AAuBA,2BAvBA;AAwBA,wBAxBA;AAyBA,qBAzBA;AA0BA;AACA,8BA3BA;AA4BA,6BA5BA;AA6BA,iCA7BA;AA8BA,iCA9BA;AA+BA,gCA/BA;AAgCA,sBAhCA;AAiCA;AACA,wBAlCA;AAmCA;AACA,0BApCA;AAqCA;AACA,uCAtCA;AAuCA;AACA,kDAxCA;AAyCA,2BAzCA;AA0CA,mBA1CA;AA2CA,mBA3CA;AA4CA,oBA5CA;AA6CA,2BA7CA;AA8CA;AACA,uBADA;AAEA,mBAFA;AAGA,qBAHA;AAIA;AACA,uBADA;AAEA,mBAFA;AAGA,sBAHA,EAJA;AAQA;AACA,sBADA;AAEA,mBAFA;AAGA,sBAHA,EARA,CA9CA;;AA2DA,oBA3DA;AA4DA;AACA,yBADA;AAEA,mBAFA;AAGA;AACA,qBADA;AAEA,mBAFA,EAHA;AAMA;AACA,0BADA;AAEA,mBAFA,EANA;AASA;AACA,sBADA;AAEA,mBAFA,EATA;AAYA;AACA,yBADA;AAEA,mBAFA,EAZA;AAeA;AACA,qBADA;AAEA,mBAFA,EAfA;AAkBA;AACA,wBADA;AAEA,mBAFA,EAlBA;AAqBA;AACA,sBADA;AAEA,mBAFA,EArBA;AAwBA;AACA,6BADA;AAEA,mBAFA,EAxBA;AA2BA;AACA,0BADA;AAEA,mBAFA,EA3BA;AA8BA;AACA,0BADA;AAEA,mBAFA,EA9BA,CA5DA;;AA8FA,wBA9FA;AA+FA,gFA/FA;AAgGA,mBAhGA;;AAkGA,GApGA;AAqGA;AACA,WADA,qBACA;AACA,uBADA,GACA,IADA,CACA,iBADA;AAEA;AACA,KAJA,EArGA;;AA2GA,gBA3GA;AA4GA;AACA;AACA;AACA,kBADA;AAEA;AACA,sBADA;AAEA,oBAFA;AAGA,qBAHA;AAIA,sBAJA;AAKA,0BALA;AAMA;AACA,yBAPA,CAOA;AAPA,WAFA,EAFA,EA5GA;;;;AA4HA;AACA;AACA;AACA;AACA,0BADA;AAEA,wBAFA;AAGA,wBAHA;;AAKA,OAPA;AAQA,qBARA;AASA,gBATA,EADA,EA5HA;;;AAyIA;AACA;AACA;AACA;AACA,wBADA;AAEA,0BAFA;AAGA,sBAHA;AAIA,qBAJA;;AAMA,GAlJA;AAmJA;AACA;AACA;AACA;AACA;AACA,GAxJA;AAyJA;AACA;AACA;AACA,GA5JA;AA6JA;AACA;AACA,sCAFA,CAEA;;AAEA;AACA,GAlKA;AAmKA;AACA;AACA;AACA,GAtKA;AAuKA;AACA;AACA;;AAEA;AACA;AACA,oCAFA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCADA;AAEA,UAFA,CAEA;AACA;AACA;AACA;AACA;AACA,OAPA;AAQA,KAnBA,MAmBA;AACA,cADA,CACA,MADA,GACA,CADA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAPA,CAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAhBA,CAgBA;;;AAGA;AACA,8BADA;AAEA,UAFA,CAEA;AACA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ACA;AACA,WAXA,EAWA,CAXA;AAYA,SA/CA;AAgDA;;AAEA;AACA;AACA,KApgCA;;AAsgCA;;;;;AAKA,uBA3gCA,+BA2gCA,SA3gCA,EA2gCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDADA;AAEA;AACA,SADA,KACA,mBADA;AAEA;AACA,gBADA;AAEA,kBAFA;AAGA,oBAHA;AAIA,yBAJA;;AAMA;AACA,uCADA;AAEA,yBAFA;AAGA,qBAHA;AAIA,8BAJA;;AAMA;AACA;AACA;AACA,kBADA;AAEA;AACA,8BADA;AAEA,8BAFA,EAFA;;AAMA,wBANA;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBADA,GACA,MADA,GACA,UADA,GACA,MADA,GACA,WADA;AAEA,uCAFA,CAVA,CAYA;AACA;;AAEA;AACA;AACA;AACA,wCADA;AAEA,8BAFA,EADA;;AAKA;;AAEA;AACA;AACA,gCADA;AAEA,eAHA,MAGA;AACA;AACA,eAbA,CAaA;;;AAGA;AACA;AACA,eAFA,MAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAjDA;AAkDA;AACA;AACA;AACA,WArDA;;AAuDA,OAxDA;AAyDA,KA7lCA;;AA+lCA,gCA/lCA,wCA+lCA,KA/lCA,EA+lCA;AACA;AACA;AACA;AACA,8CAJA,CAIA;;AAEA;AACA,4DADA,EACA,CADA;AAEA,qDARA,CAQA;;AAEA;AACA;;AAEA;AACA,QADA,EACA;AACA;AACA;;AAEA;AACA;AACA,0BADA;AAEA,kCAFA;AAGA,cAHA,CAGA;AACA;AACA,WALA,EAKA,KALA,CAKA,cALA;AAMA,SAPA,MAOA;AACA;AACA,wBAFA,CAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BADA;AAEA,kCAFA;AAGA,gCAHA;AAIA,cAJA,CAIA;AACA;AACA,WANA,EAMA,KANA,CAMA,cANA;AAOA;;AAEA;AACA;;AAEA;AACA,KA7oCA;;AA+oCA;;;AAGA,gBAlpCA,0BAkpCA;AACA;AACA;AACA;AACA;AACA,uCADA;AAEA;AACA;A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DA,kCAmgDA,UAngDA,EAmgDA,cAngDA,EAmgDA;AACA;AACA;AACA;AACA;AACA;AACA,OALA,EADA,CAMA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAbA;;AAeA;AACA;AACA,YADA,EADA,CAEA;;AAEA;AACA,wGADA,EACA;AACA;AACA;AACA;AACA,OAhCA,CAgCA;;;AAGA;AACA,KAviDA;;AAyiDA,kCAziDA,0CAyiDA,IAziDA,EAyiDA;AACA;AACA,+BAFA,CAEA;;AAEA;AACA;AACA,2BANA,CAMA;;AAEA;;AAEA;AACA;AACA;AACA,SAFA,MAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBADA,GACA,sBADA,GACA,CADA;;AAGA;AACA,OAdA,MAcA;AACA;AACA;AACA,uBADA,GACA,sBADA;;AAGA;;AAEA;AACA;AACA;AACA;AACA,uBADA;AAEA;AACA,SALA,MAKA;AACA;AACA;AACA;AACA,OAzCA,CAyCA;;;AAGA;AACA;AACA;AACA,+BADA;;AAGA;AACA;;AAEA;AACA,KA9lDA;;AAgmDA;;;AAGA,mBAnmDA,6BAmmDA;AACA;AACA;AACA,4BADA;;AAGA,OAJA,EAIA,KAJA;AAKA,KAzmDA;;AA2mDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA,aAznDA,qBAynDA,MAznDA,EAynDA;AACA;AACA;AACA;;AAEA,+CALA,CAKA;;AAEA;AACA,iCADA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAnBA,CAmBA;;;AAGA;AACA;AACA;AACA;AACA,6DA1BA,CA0BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA5pDA;;AA8pDA,cA9pDA,sBA8pDA,MA9pDA,EA8pDA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BADA;AAEA,+BAFA;;AAIA,KAxqDA;;AA0qDA,eA1qDA,yBA0qDA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAjrDA;;AAmrDA,aAnrDA,uBAmrDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBADA;AAEA,UAFA,CAEA;AACA;AACA;AACA;AACA;AACA,0BADA;AAEA,cAFA,CAEA;AACA;AACA;AACA,WALA,EAKA,KALA,CAKA;AACA;AACA;AACA,WARA;AASA,SAXA,MAWA;AACA,yCADA,CACA;;AAEA;AACA,SAJA,MAIA;AACA;AACA;AACA,0BADA;AAEA,cAFA,CAEA;AACA;AACA;AACA,WALA,EAKA,KALA,CAKA;AACA;AACA;AACA,WARA;AASA;AACA,OA/BA,EA+BA,KA/BA,CA+BA;AACA,uCADA,CACA;;AAEA;AACA,OAnCA;AAoCA,KAjuDA;;AAmuDA,kBAnuDA,0BAmuDA,MAnuDA,EAmuDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAHA,EAGA,KAHA,CAGA;AACA,kFADA,CACA;AACA,OALA;AAMA;AACA,KAlvDA;;AAovDA;;;;;AAKA,kBAzvDA,0BAyvDA,MAzvDA,EAyvDA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCADA;AAEA,gCAFA;AAGA,2BAHA;;AAKA;AACA;AACA,6EAFA,CAEA;AACA,OAHA,EAGA,KAHA,CAGA;AACA,8DADA,CACA;AACA,OALA;AAMA;AACA,KA3wDA;;AA6wDA;;;;;AAKA,gBAlxDA,wBAkxDA,MAlxDA,EAkxDA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCADA;AAEA,2BAFA;;AAIA;AACA;AACA;AACA;AACA;;AAEA,wDALA,CAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAjBA;;AAmBA,OApBA,EAoBA,KApBA,CAoBA;AACA,2DADA,CACA;AACA,OAtBA;AAuBA;AACA,KApzDA;;AAszDA,gBAtzDA,wBAszDA,MAtzDA,EAszDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAFA,EAEA,KAFA,CAEA;AACA;AACA,OAJA;AAKA;AACA,KAn0DA;;AAq0DA,mBAr0DA,2BAq0DA,MAr0DA,EAq0DA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A;;AAEA;AACA;AACA;AACA,0BADA;;AAGA;;AAEA;AACA;AACA,0BADA;;AAGA,gBAXA;;AAaA,KAtzEA;;AAwzEA,uBAxzEA,+BAwzEA,KAxzEA,EAwzEA;AACA;AACA;AACA;AACA,sBADA;AAEA,8BAFA;;;AAKA;AACA;AACA;AACA,0BADA;AAEA,8BAFA;;AAIA,SALA,MAKA;AACA;AACA,0BADA;AAEA,+BAFA;;AAIA;AACA;AACA,KA70EA;;AA+0EA,0BA/0EA,kCA+0EA,KA/0EA,EA+0EA;AACA;AACA,qBADA;AAEA,oBAFA;AAGA,sBAHA;;AAKA;AACA;AACA;AACA,sBADA;AAEA,8BAFA;;AAIA,KA31EA;;AA61EA;;;AAGA,oBAh2EA,8BAg2EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cADA,CAJA,CAKA;;AAEA;AACA,wBADA;AAEA;AACA,oBAHA,CAGA;AAHA;;;AAOA;AACA;AACA;;AAEA;AACA,wCADA;AAEA,qFAFA;AAGA,sBAHA;AAIA,OAtBA;AAuBA;AACA;AACA;AACA;AACA,kCADA;;AAGA,OANA;AAOA;AACA;AACA;AACA,8CAHA,CAGA;;AAEA;AACA,wBADA;AAEA,YAFA;AAGA,OARA;AASA,KAz4EA;;AA24EA,2BA34EA,mCA24EA,KA34EA,EA24EA;AACA;AACA;AACA,KA94EA;;AAg5EA,yBAh5EA,iCAg5EA,KAh5EA,EAg5EA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;AACA,KA35EA;;AA65EA,qBA75EA,6BA65EA,UA75EA,EA65EA;AACA;;AAEA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA,KAt6EA;;AAw6EA,mBAx6EA,6BAw6EA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAh7EA;;AAk7EA,mBAl7EA,6BAk7EA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KA17EA;;AA47EA,sBA57EA,gCA47EA;AACA;AACA;AACA;AACA,6CADA;AAEA,yCAFA;AAGA,4CAHA;AAIA,mCAJA;AAKA,yEALA;AAMA,oBANA;AAOA,KAt8EA;;AAw8EA,uBAx8EA,+BAw8EA,KAx8EA,EAw8EA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,kBADA;AAEA,SAFA,EAEA,cAFA;AAGA;AACA;AACA,oBADA;AAEA;AACA,sBADA,EAFA;AAIA,WAJA,EAIA,cAJA;AAKA,OANA,EAMA,IANA;AAOA,KA79EA;;AA+9EA,uBA/9EA,+BA+9EA,KA/9EA,EA+9EA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBADA;AAEA,gCAFA;AAGA,YAHA,CAGA;AACA;AACA,SALA,EAKA,KALA,CAKA,cALA;AAMA,OAPA,MAOA;AACA;AACA,0BAFA,CAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBADA;AAEA,gCAFA;AAGA,8BAHA;AAIA,YAJA,CAIA;AACA;AACA,SANA,EAMA,KANA,CAMA,cANA;AAOA;AACA,KA3/EA;;AA6/EA,qBA7/EA,+BA6/EA;AACA;AACA,4CADA;;AAGA,KAjgFA;;AAmgFA,oBAngFA,8BAmgFA;AACA;AACA;AACA,sBADA;AAEA,+CAFA;;AAIA;;AAEA;AACA,sCADA;;AAGA,KA9gFA;;AAghFA,yBAhhFA,iCAghFA,KAhhFA,EAghFA;AACA;;AAEA;AACA;AACA,8FADA;;AAGA;AACA,KAxhFA;;AA0hFA;AACA;AACA,WADA,EADA,CAEA;;AAEA;AACA;AACA;AACA,0BAFA;AAGA;AACA;AACA,gDADA;AAEA,2DAFA;;AAIA,OARA;AASA,KAxiFA;AAyiFA;AACA;AACA;AACA;AACA,0BADA;AAEA;AACA;AACA,kDADA;;AAGA,OANA;AAOA,KAnjFA;AAojFA;AACA;AACA;AACA;AACA,wCADA;;AAGA,KA1jFA;;AA4jFA,oBA5jFA,4BA4jFA,KA5jFA,EA4jFA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBADA;AAEA,wBAFA;AAGA;;AAEA;AACA,oBADA;AAEA,wBAFA;;AAIA;AACA,0BADA;;AAGA,KAllFA;;AAolFA,qBAplFA,6BAolFA,KAplFA,EAolFA;AACA;AACA;AACA,0CADA;;AAGA,KAzlFA;;AA2lFA,sBA3lFA,8BA2lFA,MA3lFA,EA2lFA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCADA;AAEA,2DAFA;AAGA,oBAHA;AAIA,KArmFA,EApPA,E;;;;;;;;;;;;;AC5hBA;AAAA;AAAA;AAAA;AAAorC,CAAgB,omCAAG,EAAC,C;;;;;;;;;;;ACAxsC;AACA,OAAO,KAAU,EAAE,kBAKd","file":"components/trtc-room/trtc-room.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./trtc-room.vue?vue&type=template&id=62884a08&\"\nvar renderjs\nimport script from \"./trtc-room.vue?vue&type=script&lang=js&\"\nexport * from \"./trtc-room.vue?vue&type=script&lang=js&\"\nimport style0 from \"./trtc-room.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"components/trtc-room/trtc-room.vue\"\nexport default component.exports","export * from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./trtc-room.vue?vue&type=template&id=62884a08&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./trtc-room.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./trtc-room.vue?vue&type=script&lang=js&\"","<template>\r\n\t<view>\r\n\t\t<!--<import src=\"./template/1v1/1v1.wxml\"></import>-->\r\n\t\t<!--<import src=\"./template/grid/grid.wxml\"></import>-->\r\n\t\t<!--<import src=\"./template/custom/custom.wxml\"></import>-->\r\n\r\n\t\t<view :class=\"'trtc-room-container ' + (isFullscreenDevice?'fullscreen-device-fix':'')\">\r\n\t\t\t<block v-if=\"template === '1v1'\">\r\n\t\t\t\t<block data-type=\"template\" data-is=\"1v1\" data-attr=\"pusher, streamList, debug, enableIM\">\r\n\t\t\t\t\t<view class=\"template-1v1\">\r\n\t\t\t\t\t\t<view v-for=\"(item, index) in streamList\" :key=\"index\"\r\n\t\t\t\t\t\t\tv-if=\"item.src && (item.hasVideo || item.hasAudio)\"\r\n\t\t\t\t\t\t\t:class=\"'view-container player-container ' + (item.isVisible?'':'none')\">\r\n\t\t\t\t\t\t\t<live-player class=\"player\" :id=\"item.streamID\" :data-userid=\"item.userID\"\r\n\t\t\t\t\t\t\t\t:data-streamid=\"item.streamID\" :data-streamtype=\"item.streamType\" :src=\"item.src\"\r\n\t\t\t\t\t\t\t\tmode=\"RTC\" :autoplay=\"item.autoplay\" :mute-audio=\"item.muteAudio\"\r\n\t\t\t\t\t\t\t\t:mute-video=\"item.muteVideo\" :orientation=\"item.orientation\"\r\n\t\t\t\t\t\t\t\t:object-fit=\"item.objectFit\" :background-mute=\"item.enableBackgroundMute\"\r\n\t\t\t\t\t\t\t\t:min-cache=\"item.minCache\" :max-cache=\"item.maxCache\" :sound-mode=\"item.soundMode\"\r\n\t\t\t\t\t\t\t\t:enable-recv-message=\"item.enableRecvMessage\"\r\n\t\t\t\t\t\t\t\t:auto-pause-if-navigate=\"item.autoPauseIfNavigate\"\r\n\t\t\t\t\t\t\t\t:auto-pause-if-open-native=\"item.autoPauseIfOpenNative\" :debug=\"debug\"\r\n\t\t\t\t\t\t\t\t@statechange=\"playerStateChangeFun\" @fullscreenchange=\"playerFullscreenChangeFun\"\r\n\t\t\t\t\t\t\t\t@netstatus=\"playerNetStatusFun\" @audiovolumenotify=\"playerAudioVolumeNotifyFun\">\r\n\t\t\t\t\t\t\t</live-player>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view\r\n\t\t\t\t\t\t\t:class=\"'view-container pusher-container ' + (pusher.isVisible?'':'none') + ' ' + (streamList.length===0? 'fullscreen':'')\">\r\n\t\t\t\t\t\t\t<live-pusher class=\"pusher\" :url=\"pusher.url\" :mode=\"pusher.mode\"\r\n\t\t\t\t\t\t\t\t:autopush=\"pusher.autopush\" :enable-camera=\"pusher.enableCamera\"\r\n\t\t\t\t\t\t\t\t:enable-mic=\"pusher.enableMic\" :muted=\"!pusher.enableMic\" :enable-agc=\"pusher.enableAgc\"\r\n\t\t\t\t\t\t\t\t:enable-ans=\"pusher.enableAns\" :enable-ear-monitor=\"pusher.enableEarMonitor\"\r\n\t\t\t\t\t\t\t\t:auto-focus=\"pusher.enableAutoFocus\" :zoom=\"pusher.enableZoom\"\r\n\t\t\t\t\t\t\t\t:min-bitrate=\"pusher.minBitrate\" :max-bitrate=\"pusher.maxBitrate\"\r\n\t\t\t\t\t\t\t\t:video-width=\"pusher.videoWidth\" :video-height=\"pusher.videoHeight\"\r\n\t\t\t\t\t\t\t\t:beauty=\"pusher.beautyLevel\" :whiteness=\"pusher.whitenessLevel\"\r\n\t\t\t\t\t\t\t\t:orientation=\"pusher.videoOrientation\" :aspect=\"pusher.videoAspect\"\r\n\t\t\t\t\t\t\t\t:device-position=\"pusher.frontCamera\" :remote-mirror=\"pusher.enableRemoteMirror\"\r\n\t\t\t\t\t\t\t\t:local-mirror=\"pusher.localMirror\" :background-mute=\"pusher.enableBackgroundMute\"\r\n\t\t\t\t\t\t\t\t:audio-quality=\"pusher.audioQuality\" :audio-volume-type=\"pusher.audioVolumeType\"\r\n\t\t\t\t\t\t\t\t:audio-reverb-type=\"pusher.audioReverbType\" :waiting-image=\"pusher.waitingImage\"\r\n\t\t\t\t\t\t\t\t:debug=\"debug\" @statechange=\"pusherStateChangeHandlerFun\"\r\n\t\t\t\t\t\t\t\t@netstatus=\"pusherNetStatusHandlerFun\" @error=\"pusherErrorHandlerFun\"\r\n\t\t\t\t\t\t\t\t@bgmstart=\"pusherBGMStartHandlerFun\" @bgmprogress=\"pusherBGMProgressHandlerFun\"\r\n\t\t\t\t\t\t\t\t@bgmcomplete=\"pusherBGMCompleteHandlerFun\" @audiovolumenotify=\"pusherAudioVolumeNotifyFun\">\r\n\t\t\t\t\t\t\t</live-pusher>\r\n\t\t\t\t\t\t\t<view class=\"loading\" v-if=\"streamList.length === 0\">\r\n\t\t\t\t\t\t\t\t<view class=\"loading-img\">\r\n\t\t\t\t\t\t\t\t\t<image src=\"../../static/components/trtc-room/static/loading.png\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"rotate-img\"></image>\r\n\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t<view class=\"loading-text\">等待接听中...</view>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view class=\"handle-btns\">\r\n\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"toggleAudioFun\">\r\n\t\t\t\t\t\t\t\t<image class=\"btn-image\"\r\n\t\t\t\t\t\t\t\t\t:src=\"(pusher.enableMic? '../../static/components/trtc-room/static/audio-true.png': '../../static/components/trtc-room/static/audio-false.png') + ' '\">\r\n\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"switchCamera\">\r\n\t\t\t\t\t\t\t\t<image class=\"btn-image\" src=\"../../static/components/trtc-room/static/switch.png\">\r\n\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<!-- <view class=\"btn-normal\" bindtap=\"toggleVideoFun\">\r\n        <image class=\"btn-image\" src=\"{{pusher.enableCamera? '../../static/components/trtc-room/static/camera-true.png': '../../static/components/trtc-room/static/camera-false.png'}} \"></image>\r\n      </view> -->\r\n\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"toggleSoundModeFun\">\r\n\t\t\t\t\t\t\t\t<image class=\"btn-image\"\r\n\t\t\t\t\t\t\t\t\t:src=\"(streamList[0].soundMode === 'ear' ? '../../static/components/trtc-room/static/phone.png': '../../static/components/trtc-room/static/speaker-true.png') + ' '\">\r\n\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view class=\"bottom-btns\">\r\n\t\t\t\t\t\t\t<view class=\"btn-normal\" data-key=\"beautyLevel\" data-value=\"9|0\" data-value-type=\"number\"\r\n\t\t\t\t\t\t\t\t@tap=\"setPuserPropertyFun\">\r\n\t\t\t\t\t\t\t\t<image class=\"btn-image\"\r\n\t\t\t\t\t\t\t\t\t:src=\"(pusher.beautyLevel == 9 ? '../../static/components/trtc-room/static/beauty-true.png': '../../static/components/trtc-room/static/beauty-false.png') + ' '\">\r\n\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<view class=\"btn-hangup\" @tap=\"hangUpFun\">\r\n\t\t\t\t\t\t\t\t<image class=\"btn-image\" src=\"../../static/components/trtc-room/static/hangup.png\">\r\n\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"toggleIMPanelFun\">\r\n\t\t\t\t\t\t\t\t<image class=\"btn-image\"\r\n\t\t\t\t\t\t\t\t\t:src=\"enableIM? '../../static/components/trtc-room/static/im.png': '../../static/components/trtc-room/static/im-disable.png'\">\r\n\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</block>\r\n\t\t\t</block>\r\n\t\t\t<block v-if=\"template === 'grid'\">\r\n\t\t\t\t<block data-type=\"template\" data-is=\"grid\"\r\n\t\t\t\t\tdata-attr=\"pusher, streamList, visibleStreamList, debug, enableIM, panelName, gridPagePlaceholderStreamList, gridPageCount, gridCurrentPage, gridPlayerPerPage, isShowMoreMenu, MICVolume, BGMVolume, BGMProgress, beautyStyle, beautyStyleArray, filterIndex, filterArray, audioReverbTypeArray\">\r\n\t\t\t\t\t<view class=\"template-grid\">\r\n\t\t\t\t\t\t<view class=\"column-layout\">\r\n\t\t\t\t\t\t\t<view class=\"column-1\">\r\n\t\t\t\t\t\t\t\t<view class=\"grid-scroll-container\" @touchstart=\"handleGridTouchStartFun\"\r\n\t\t\t\t\t\t\t\t\t@touchend=\"handleGridTouchEndFun\">\r\n\t\t\t\t\t\t\t\t\t<!-- <view id=\"grid-container-id\" class=\"grid-container {{visibleStreamList.length < 4 ? 'stream-' + visibleStreamList.length : visibleStreamList.length%2 == 0? 'stream-odd':'stream-even'}}\"> -->\r\n\t\t\t\t\t\t\t\t\t<view id=\"grid-container-id\" :class=\"sbstyle\" >\r\n\t\t\t\t\t\t\t\t\t\t<!-- :class=\"'grid-container ' + (visibleStreamList.length < 4 ? 'stream-' + visibleStreamList.length : 'stream-3')\"> -->\r\n\r\n\t\t\t\t\t\t\t\t\t\t<view\r\n\t\t\t\t\t\t\t\t\t\t\t:class=\"'view-container pusher-container ' + (pusher.isVisible && ((gridCurrentPage === 1 && gridPlayerPerPage > 3) || gridPlayerPerPage < 4)?'':'none')\">\r\n\t\t\t\t\t\t\t\t\t\t\t<live-pusher class=\"pusher\" :url=\"pusher.url\" :mode=\"pusher.mode\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:autopush=\"pusher.autopush\" :enable-camera=\"pusher.enableCamera\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:enable-mic=\"pusher.enableMic\" :muted=\"!pusher.enableMic\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:enable-agc=\"pusher.enableAgc\" :enable-ans=\"pusher.enableAns\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:enable-ear-monitor=\"pusher.enableEarMonitor\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:auto-focus=\"pusher.enableAutoFocus\" :zoom=\"pusher.enableZoom\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:min-bitrate=\"pusher.minBitrate\" :max-bitrate=\"pusher.maxBitrate\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:video-width=\"pusher.videoWidth\" :video-height=\"pusher.videoHeight\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:beauty=\"pusher.beautyLevel\" :whiteness=\"pusher.whitenessLevel\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:orientation=\"pusher.videoOrientation\" :aspect=\"pusher.videoAspect\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:device-position=\"pusher.frontCamera\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:remote-mirror=\"pusher.enableRemoteMirror\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:local-mirror=\"pusher.localMirror\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:background-mute=\"pusher.enableBackgroundMute\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:audio-quality=\"pusher.audioQuality\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:audio-volume-type=\"pusher.audioVolumeType\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:audio-reverb-type=\"pusher.audioReverbType\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:waiting-image=\"pusher.waitingImage\" :debug=\"debug\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:beauty-style=\"pusher.beautyStyle\" :filter=\"pusher.filter\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t@statechange=\"pusherStateChangeHandlerFun\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t@netstatus=\"pusherNetStatusHandlerFun\" @error=\"pusherErrorHandlerFun\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t@bgmstart=\"pusherBGMStartHandlerFun\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t@bgmprogress=\"pusherBGMProgressHandlerFun\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t@bgmcomplete=\"pusherBGMCompleteHandlerFun\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t@audiovolumenotify=\"pusherAudioVolumeNotifyFun\"></live-pusher>\r\n\t\t\t\t\t\t\t\t\t\t\t<view class=\"no-video\" v-if=\"!pusher.enableCamera\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/mute-camera-white.png\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t\t\t<!-- <view class=\"no-audio\" wx:if=\"{{!pusher.enableMic}}\">\r\n                <image class=\"image\" src=\"../../static/components/trtc-room/static/mute-mic-white.png\"></image>\r\n              </view>\r\n              <view class=\"audio-volume\" wx:if=\"{{pusher.enableMic}}\">\r\n                <image class=\"image\" src=\"../../static/components/trtc-room/static/micro-open.png\"></image>\r\n                <view class=\"audio-active\" style=\"height:{{pusher.volume}}%\">\r\n                  <image class=\"image\" src=\"../../static/components/trtc-room/static/audio-active.png\"></image>\r\n                </view>\r\n              </view> -->\r\n\t\t\t\t\t\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<view v-for=\"(item, index) in visibleStreamList\" :key=\"index\"\r\n\t\t\t\t\t\t\t\t\t\t\t:class=\"'view-container player-container ' + (item.isVisible?'':'none')\"\r\n\t\t\t\t\t\t\t\t\t\t\t:id=\"'player-'+item.streamID\" :data-userid=\"item.userID\"\r\n\t\t\t\t\t\t\t\t\t\t\t:data-streamtype=\"item.streamType\" @tap=\"doubleTabToggleFullscreenFun\">\r\n\t\t\t\t\t\t\t\t\t\t\t<live-player class=\"player\" :id=\"item.streamID\" :data-userid=\"item.userID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:data-streamid=\"item.streamID\" :data-streamtype=\"item.streamType\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:src=\"item.src\" mode=\"RTC\" :autoplay=\"item.autoplay\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:mute-audio=\"item.muteAudio\" :mute-video=\"item.muteVideo\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:orientation=\"item.orientation\" :object-fit=\"item.objectFit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:background-mute=\"item.enableBackgroundMute\" :min-cache=\"item.minCache\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:max-cache=\"item.maxCache\" :sound-mode=\"item.soundMode\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:enable-recv-message=\"item.enableRecvMessage\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:auto-pause-if-navigate=\"item.autoPauseIfNavigate\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:auto-pause-if-open-native=\"item.autoPauseIfOpenNative\" :debug=\"debug\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t@statechange=\"playerStateChangeFun\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t@fullscreenchange=\"playerFullscreenChangeFun\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t@netstatus=\"playerNetStatusFun\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t@audiovolumenotify=\"playerAudioVolumeNotifyFun\"></live-player>\r\n\t\t\t\t\t\t\t\t\t\t\t<view class=\"no-video\" v-if=\"item.muteVideo\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/display-pause-white.png\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<view class=\"text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{{item.userID}}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t\t\t<view class=\"no-video\" v-if=\"!item.hasVideo && !item.muteVideo\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/mute-camera-white.png\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<view class=\"text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{{item.userID}}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<view class=\"text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>对方摄像头未打开</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t\t\t<view class=\"no-audio\" v-if=\"!item.hasAudio\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/mute-mic-white.png\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t\t\t<view class=\"audio-volume\" v-if=\"item.hasAudio\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/micro-open.png\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<view class=\"audio-active\" :style=\"'height:' + item.volume + '%'\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/audio-active.png\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t\t\t<view class=\"operation-bar\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<view class=\"operation-item-container\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<view class=\"operation-item\" @tap.stop=\"handleSubscribeRemoteAudioFun\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:data-user-i-d=\"item.userID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:data-stream-type=\"item.streamType\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"item-image\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:src=\"item.muteAudio? '../../static/components/trtc-room/static/speaker-false.png': '../../static/components/trtc-room/static/speaker-white.png'\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<view class=\"operation-item\" @tap.stop=\"handleSubscribeRemoteVideoFun\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:data-user-i-d=\"item.userID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:data-stream-type=\"item.streamType\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"item-image\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:src=\"item.muteVideo? '../../static/components/trtc-room/static/display-pause-false.png': '../../static/components/trtc-room/static/display-play-white.png'\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<view class=\"operation-item\" @tap=\"toggleFullscreenFun\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:data-user-i-d=\"item.userID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t:data-stream-type=\"item.streamType\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<image class=\"item-image\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/fullscreen-white.png\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<view v-for=\"(item, index) in gridPagePlaceholderStreamList\" :key=\"index\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"view-container player-container player-placeholder\">\r\n\t\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/mute-camera-white.png\">\r\n\t\t\t\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<view class=\"column-2\">\r\n\t\t\t\t\t\t\t\t<view class=\"menu\" v-if=\"!isShowMoreMenu\">\r\n\t\t\t\t\t\t\t\t\t<view class=\"menu-item\" @tap=\"switchSettingPanelFun\">\r\n\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\r\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/setting-white.png\">\r\n\t\t\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"menu-item\" @tap=\"switchMemberListPanelFun\">\r\n\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\r\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/list-white.png\">\r\n\t\t\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"menu-item\" @tap=\"hangUpFun\">\r\n\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\r\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/hangup-red.png\">\r\n\t\t\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"menu-item\" @tap=\"toggleIMPanelFun\">\r\n\t\t\t\t\t\t\t\t\t\t<image class=\"image\"\r\n\t\t\t\t\t\t\t\t\t\t\t:src=\"enableIM? '../../static/components/trtc-room/static/im-white.png': '../../static/components/trtc-room/static/im-disable.png'\">\r\n\t\t\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t\t<view class=\"pages-container\" v-if=\"gridPageCount > 1\">\r\n\t\t\t\t\t\t\t<view v-for=\"(item, index) in gridPageCount\" :key=\"index\"\r\n\t\t\t\t\t\t\t\t:class=\"'page-item ' + (index+1 === gridCurrentPage? 'current':'')\"></view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view :class=\"'panel memberlist-panel ' + (panelName === 'memberlist-panel' ? '' : 'none')\">\r\n\t\t\t\t\t\t\t<view @tap=\"handleMaskerClickFun\" class=\"close-btn\">X</view>\r\n\t\t\t\t\t\t\t<view class=\"panel-header\">成员列表</view>\r\n\t\t\t\t\t\t\t<view class=\"panel-body\">\r\n\t\t\t\t\t\t\t\t<view class=\"panel-tips\" v-if=\"streamList.length === 0\">暂无成员</view>\r\n\t\t\t\t\t\t\t\t<scroll-view class=\"scroll-container\" scroll-y=\"true\">\r\n\t\t\t\t\t\t\t\t\t<view v-for=\"(item, index) in streamList\" :key=\"index\" class=\"member-item\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"member-id\">{{item.userID}}</view>\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"member-btns\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button class=\"btn\" hover-class=\"btn-hover\" :data-userid=\"item.userID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:data-streamtype=\"item.streamType\" data-key=\"objectFit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-value=\"fillCrop|contain\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t@tap=\"setPlayerPropertyFun\">{{item.objectFit === 'fillCrop'? '填充':'适应'}}</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button class=\"btn\" hover-class=\"btn-hover\" :data-userid=\"item.userID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:data-streamtype=\"item.streamType\" data-key=\"orientation\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata-value=\"vertical|horizontal\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t@tap=\"setPlayerPropertyFun\">{{item.orientation === 'vertical'? '竖屏':'横屏'}}</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button class=\"btn\" hover-class=\"btn-hover\" :data-userid=\"item.userID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:data-streamtype=\"item.streamType\" @tap=\"switchStreamTypeFun\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tv-if=\"item.streamType === 'main'\">{{item._definitionType === 'small'? '小画面':'主画面'}}</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<button class=\"btn\" hover-class=\"btn-hover\" :data-userid=\"item.userID\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:data-streamtype=\"item.streamType\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t@tap=\"handleSnapshotClickFun\">截屏</button>\r\n\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t</scroll-view>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view :class=\"'panel setting-panel ' + (panelName === 'setting-panel' ? '' : 'none')\">\r\n\t\t\t\t\t\t\t<view @tap=\"handleMaskerClickFun\" class=\"close-btn\">X</view>\r\n\t\t\t\t\t\t\t<view class=\"panel-header\">推流设置</view>\r\n\t\t\t\t\t\t\t<view class=\"panel-body\">\r\n\t\t\t\t\t\t\t\t<scroll-view class=\"scroll-container\" scroll-y=\"true\">\r\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">启用摄像头</view>\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"toggleVideoFun\">\r\n\t\t\t\t\t\t\t\t\t\t\t<image class=\"btn-image\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:src=\"pusher.enableCamera? '../../static/components/trtc-room/static/camera-true.png': '../../static/components/trtc-room/static/camera-false.png'\">\r\n\t\t\t\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">启用麦克风</view>\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"toggleAudioFun\">\r\n\t\t\t\t\t\t\t\t\t\t\t<image class=\"btn-image\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t:src=\"pusher.enableMic? '../../static/components/trtc-room/static/audio-true.png': '../../static/components/trtc-room/static/audio-false.png'\">\r\n\t\t\t\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">切换摄像头</view>\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"btn-normal\" @tap=\"switchCamera\">\r\n\t\t\t\t\t\t\t\t\t\t\t<image class=\"btn-image\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"../../static/components/trtc-room/static/switch.png\">\r\n\t\t\t\t\t\t\t\t\t\t\t</image>\r\n\t\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">开启美颜</view>\r\n\t\t\t\t\t\t\t\t\t\t<switch class=\"setting-switch\" color=\"#006eff\"\r\n\t\t\t\t\t\t\t\t\t\t\t:checked=\"pusher.beautyLevel == 9 ? true: false\" data-key=\"beautyLevel\"\r\n\t\t\t\t\t\t\t\t\t\t\tdata-value=\"9|0\" data-value-type=\"number\" @change=\"setPuserPropertyFun\">\r\n\t\t\t\t\t\t\t\t\t\t</switch>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">开启AGC</view>\r\n\t\t\t\t\t\t\t\t\t\t<switch class=\"setting-switch\" color=\"#006eff\" :checked=\"pusher.enableAgc\"\r\n\t\t\t\t\t\t\t\t\t\t\tdata-key=\"enableAgc\" data-value=\"true\" data-value-type=\"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t@change=\"setPuserPropertyFun\"></switch>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">开启ANS</view>\r\n\t\t\t\t\t\t\t\t\t\t<switch class=\"setting-switch\" color=\"#006eff\" :checked=\"pusher.enableAns\"\r\n\t\t\t\t\t\t\t\t\t\t\tdata-key=\"enableAns\" data-value=\"true\" data-value-type=\"boolean\"\r\n\t\t\t\t\t\t\t\t\t\t\t@change=\"setPuserPropertyFun\"></switch>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"setting-option\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">开启横屏推流</view>\r\n\t\t\t\t\t\t\t\t\t\t<switch class=\"setting-switch\" color=\"#006eff\"\r\n\t\t\t\t\t\t\t\t\t\t\t:checked=\"pusher.videoOrientation === 'vertical' ? false: true\"\r\n\t\t\t\t\t\t\t\t\t\t\tdata-key=\"videoOrientation\" data-value=\"horizontal|vertical\"\r\n\t\t\t\t\t\t\t\t\t\t\tdata-value-type=\"string\" @change=\"setPuserPropertyFun\"></switch>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t</scroll-view>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view :class=\"'panel bgm-panel ' + (panelName === 'bgm-panel' ? '' : 'none')\">\r\n\t\t\t\t\t\t\t<view @tap=\"handleMaskerClickFun\" class=\"close-btn\">X</view>\r\n\t\t\t\t\t\t\t<view class=\"panel-header\">背景音乐</view>\r\n\t\t\t\t\t\t\t<view class=\"panel-body\">\r\n\t\t\t\t\t\t\t\t<view class=\"setting-option\">\r\n\t\t\t\t\t\t\t\t\t<view class=\"label\">MIC音量</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"slider-content\">\r\n\t\t\t\t\t\t\t\t\t\t<slider :value=\"MICVolume\" min=\"0\" max=\"100\" show-value=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\tactiveColor=\"#006eff\" @change=\"changePropertyFun\"\r\n\t\t\t\t\t\t\t\t\t\t\tdata-property-name=\"MICVolume\"></slider>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t<view class=\"setting-option\">\r\n\t\t\t\t\t\t\t\t\t<view class=\"label\">BGM音量</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"slider-content\">\r\n\t\t\t\t\t\t\t\t\t\t<slider :value=\"BGMVolume\" min=\"0\" max=\"100\" show-value=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\tactiveColor=\"#006eff\" @change=\"changePropertyFun\"\r\n\t\t\t\t\t\t\t\t\t\t\tdata-property-name=\"BGMVolume\"></slider>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t<view class=\"setting-option\">\r\n\t\t\t\t\t\t\t\t\t<view class=\"label\">播放进度</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"slider-content\">\r\n\t\t\t\t\t\t\t\t\t\t<progress activeColor=\"#006eff\" :percent=\"BGMProgress\"></progress>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t<view class=\"menu\">\r\n\t\t\t\t\t\t\t\t\t<view class=\"menu-item\" @tap=\"handleBGMOperationFun\" data-operation-name=\"playBGM\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">播放</view>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"menu-item\" @tap=\"handleBGMOperationFun\" data-operation-name=\"pauseBGM\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">暂停</view>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"menu-item\" @tap=\"handleBGMOperationFun\" data-operation-name=\"resumeBGM\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">继续</view>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t\t<view class=\"menu-item\" @tap=\"handleBGMOperationFun\" data-operation-name=\"stopBGM\">\r\n\t\t\t\t\t\t\t\t\t\t<view class=\"label\">停止</view>\r\n\t\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view :class=\"'masker ' + (panelName =='' ? 'none' : '')\" @tap=\"handleMaskerClickFun\"></view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</block>\r\n\t\t\t</block>\r\n\t\t\t<block v-if=\"template === 'custom'\">\r\n\t\t\t\t<block data-type=\"template\" data-is=\"custom\" data-attr=\"pusher, streamList, debug\">\r\n\t\t\t\t\t<view class=\"template-custom\">\r\n\t\t\t\t\t\t<view class=\"players-container\">\r\n\t\t\t\t\t\t\t<view v-for=\"(item, index) in streamList\" :key=\"index\"\r\n\t\t\t\t\t\t\t\tv-if=\"item.src && (item.hasVideo || item.hasAudio)\"\r\n\t\t\t\t\t\t\t\t:class=\"'view-container player-container ' + (item.isVisible?'':'none')\"\r\n\t\t\t\t\t\t\t\t:style=\"'left:' + item.xAxis + 'top:' + item.yAxis + 'width:' + item.width + 'height:' + item.height + 'z-index:' + item.zIndex + ''\">\r\n\t\t\t\t\t\t\t\t<live-player class=\"player\" :id=\"item.streamID\" :data-userid=\"item.userID\"\r\n\t\t\t\t\t\t\t\t\t:data-streamid=\"item.streamID\" :data-streamtype=\"item.streamType\" :src=\"item.src\"\r\n\t\t\t\t\t\t\t\t\t:mode=\"item.mode\" :autoplay=\"item.autoplay\" :mute-audio=\"item.muteAudio\"\r\n\t\t\t\t\t\t\t\t\t:mute-video=\"item.muteVideo\" :orientation=\"item.orientation\"\r\n\t\t\t\t\t\t\t\t\t:object-fit=\"item.objectFit\" :background-mute=\"item.enableBackgroundMute\"\r\n\t\t\t\t\t\t\t\t\t:min-cache=\"item.minCache\" :max-cache=\"item.maxCache\" :sound-mode=\"item.soundMode\"\r\n\t\t\t\t\t\t\t\t\t:enable-recv-message=\"item.enableRecvMessage\"\r\n\t\t\t\t\t\t\t\t\t:auto-pause-if-navigate=\"item.autoPauseIfNavigate\"\r\n\t\t\t\t\t\t\t\t\t:auto-pause-if-open-native=\"item.autoPauseIfOpenNative\" :debug=\"debug\"\r\n\t\t\t\t\t\t\t\t\t@statechange=\"playerStateChangeFun\" @fullscreenchange=\"playerFullscreenChangeFun\"\r\n\t\t\t\t\t\t\t\t\t@netstatus=\"playerNetStatusFun\" @audiovolumenotify=\"playerAudioVolumeNotifyFun\">\r\n\t\t\t\t\t\t\t\t</live-player>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view :class=\"'view-container pusher-container ' + (pusher.isVisible?'':'none')\"\r\n\t\t\t\t\t\t\t:style=\"'left:' + pusher.xAxis + 'top:' + pusher.yAxis + 'width:' + pusher.width + 'height:' + pusher.height + 'z-index:' + pusher.zIndex + ''\">\r\n\t\t\t\t\t\t\t<live-pusher class=\"pusher\" :url=\"pusher.url\" :mode=\"pusher.mode\"\r\n\t\t\t\t\t\t\t\t:autopush=\"pusher.autopush\" :enable-camera=\"pusher.enableCamera\"\r\n\t\t\t\t\t\t\t\t:enable-mic=\"pusher.enableMic\" :muted=\"!pusher.enableMic\" :enable-agc=\"pusher.enableAgc\"\r\n\t\t\t\t\t\t\t\t:enable-ans=\"pusher.enableAns\" :enable-ear-monitor=\"pusher.enableEarMonitor\"\r\n\t\t\t\t\t\t\t\t:auto-focus=\"pusher.enableAutoFocus\" :zoom=\"pusher.enableZoom\"\r\n\t\t\t\t\t\t\t\t:min-bitrate=\"pusher.minBitrate\" :max-bitrate=\"pusher.maxBitrate\"\r\n\t\t\t\t\t\t\t\t:video-width=\"pusher.videoWidth\" :video-height=\"pusher.videoHeight\"\r\n\t\t\t\t\t\t\t\t:beauty=\"pusher.beautyLevel\" :whiteness=\"pusher.whitenessLevel\"\r\n\t\t\t\t\t\t\t\t:orientation=\"pusher.videoOrientation\" :aspect=\"pusher.videoAspect\"\r\n\t\t\t\t\t\t\t\t:device-position=\"pusher.frontCamera\" :remote-mirror=\"pusher.enableRemoteMirror\"\r\n\t\t\t\t\t\t\t\t:local-mirror=\"pusher.localMirror\" :background-mute=\"pusher.enableBackgroundMute\"\r\n\t\t\t\t\t\t\t\t:audio-quality=\"pusher.audioQuality\" :audio-volume-type=\"pusher.audioVolumeType\"\r\n\t\t\t\t\t\t\t\t:audio-reverb-type=\"pusher.audioReverbType\" :waiting-image=\"pusher.waitingImage\"\r\n\t\t\t\t\t\t\t\t:debug=\"debug\" @statechange=\"pusherStateChangeHandlerFun\"\r\n\t\t\t\t\t\t\t\t@netstatus=\"pusherNetStatusHandlerFun\" @error=\"pusherErrorHandlerFun\"\r\n\t\t\t\t\t\t\t\t@bgmstart=\"pusherBGMStartHandlerFun\" @bgmprogress=\"pusherBGMProgressHandlerFun\"\r\n\t\t\t\t\t\t\t\t@bgmcomplete=\"pusherBGMCompleteHandlerFun\" @audiovolumenotify=\"pusherAudioVolumeNotifyFun\">\r\n\t\t\t\t\t\t\t</live-pusher>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</block>\r\n\t\t\t</block>\r\n\r\n\t\t\t<view class=\"im-panel\" v-if=\"enableIM && showIMPanel\">\r\n\t\t\t\t<view class=\"message-panel-body\">\r\n\t\t\t\t\t<scroll-view scroll-y=\"true\" class=\"message-scroll-container\"\r\n\t\t\t\t\t\t:scroll-into-view=\"'message' + (messageList.length-1)\" scroll-with-animation=\"true\">\r\n\t\t\t\t\t\t<view class=\"message-list\">\r\n\t\t\t\t\t\t\t<view v-for=\"(item, index) in messageList\" :key=\"index\" class=\"message-item\"\r\n\t\t\t\t\t\t\t\t:id=\"'message' + index\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t:class=\"'user-name ' + (item.name == config.userID?'mine':'')\">{{item.name}}</span>\r\n\t\t\t\t\t\t\t\t<span class=\"message-content\">{{item.message}}</span>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t\t<view id=\"message-bottom\"></view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</scroll-view>\r\n\r\n\t\t\t\t</view>\r\n\t\t\t\t<view class=\"message-panel-bottom\">\r\n\t\t\t\t\t<view class=\"message-input-container\">\r\n\t\t\t\t\t\t<input class=\"message-input\" type=\"text\" :value=\"messageContent\" @input=\"inputIMMessageFun\"\r\n\t\t\t\t\t\t\t@confirm=\"sendIMMessageFun\" confirm-type=\"send\" placeholder=\"请输入消息\" maxlength=\"200\"\r\n\t\t\t\t\t\t\tplaceholder-style=\"color:#ffffff;opacity: 0.55;\"></input>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<view class=\"message-send-btn\">\r\n\t\t\t\t\t\t<button class=\"btn\" @tap=\"sendIMMessageFun\" hover-class=\"btn-hover\">发送</button>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view @tap=\"toggleIMPanelFun\" class=\"close-btn\">X</view>\r\n\t\t\t</view>\r\n\r\n\t\t\t<view :class=\"'debug-info-btn ' + (debugMode && !debugPanel?'':'none')\">\r\n\t\t\t\t<button class=\"debug-btn\" @tap=\"debugTogglePanelFun\" hover-class=\"button-hover\">Debug</button>\r\n\t\t\t</view>\r\n\t\t\t<view :class=\"'debug-info ' + (debugMode && debugPanel?'':'none')\">\r\n\t\t\t\t<view @tap=\"debugTogglePanelFun\" class=\"close-btn\">X</view>\r\n\t\t\t\t<view>appVersion: {{appVersion}}</view>\r\n\t\t\t\t<view>libVersion: {{libVersion}}</view>\r\n\t\t\t\t<view>template: {{template}}</view>\r\n\t\t\t\t<view>debug: <button :class=\"(debug?'':'false') + ' debug-btn'\" @tap=\"debugToggleVideoDebugFun\"\r\n\t\t\t\t\t\thover-class=\"button-hover\">{{debug}}</button></view>\r\n\t\t\t\t<view>userID: {{pusher.userID}}</view>\r\n\t\t\t\t<view>roomID: {{pusher.roomID}}</view>\r\n\t\t\t\t<view>camera: <button :class=\"(pusher.enableCamera?'':'false') + ' debug-btn'\" @tap=\"toggleVideoFun\"\r\n\t\t\t\t\t\thover-class=\"button-hover\">{{pusher.enableCamera}}</button></view>\r\n\t\t\t\t<view>mic: <button :class=\"(pusher.enableMic?'':'false') + ' debug-btn'\" @tap=\"toggleAudioFun\"\r\n\t\t\t\t\t\thover-class=\"button-hover\">{{pusher.enableMic}}</button></view>\r\n\t\t\t\t<view>switch camera: <button class=\"debug-btn\" @tap=\"switchCamera\"\r\n\t\t\t\t\t\thover-class=\"button-hover\">{{cameraPosition||pusher.frontCamera}}</button></view>\r\n\t\t\t\t<view>Room:\r\n\t\t\t\t\t<button class=\"debug-btn\" @tap=\"debugEnterRoomFun\" hover-class=\"button-hover\">Enter</button>\r\n\t\t\t\t\t<button class=\"debug-btn\" @tap=\"debugExitRoomFun\" hover-class=\"button-hover\">Exit</button>\r\n\t\t\t\t\t<button class=\"debug-btn\" @tap=\"debugGoBackFun\" hover-class=\"button-hover\">Go back</button>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view>IM: <button class=\"debug-btn\" @tap=\"debugSendRandomMessageFun\"\r\n\t\t\t\t\t\thover-class=\"button-hover\">send</button></view>\r\n\t\t\t\t<view>user count: {{userList.length}}</view>\r\n\t\t\t\t<view v-for=\"(item, index) in userList\" :key=\"index\">{{item.userID}}|\r\n\t\t\t\t\tmainV:<span\r\n\t\t\t\t\t\t:class=\"'text ' + (item.hasMainVideo? 'true' : 'false' )\">{{item.hasMainVideo||false}}</span>|\r\n\t\t\t\t\tmainA:<span\r\n\t\t\t\t\t\t:class=\"'text ' + (item.hasMainAudio? 'true' : 'false' )\">{{item.hasMainAudio||false}}</span>|\r\n\t\t\t\t\tauxV:<span\r\n\t\t\t\t\t\t:class=\"'text ' + (item.hasAuxVideo? 'true' : 'false' )\">{{item.hasAuxVideo||false}}</span>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view>stream count: {{streamList.length}}</view>\r\n\t\t\t\t<view v-for=\"(item, index) in streamList\" :key=\"index\">{{item.userID}}|{{item.streamType}}|\r\n\t\t\t\t\tSubV:<button :class=\"(!item.muteVideo?'':'false') + ' debug-btn'\" @tap=\"debugToggleRemoteVideoFun\"\r\n\t\t\t\t\t\thover-class=\"button-hover\" :data-user-i-d=\"item.userID\"\r\n\t\t\t\t\t\t:data-stream-type=\"item.streamType\">{{!item.muteVideo}}</button>|\r\n\t\t\t\t\tSubA:<button :class=\"(!item.muteAudio?'':'false') + ' debug-btn'\" @tap=\"debugToggleRemoteAudioFun\"\r\n\t\t\t\t\t\thover-class=\"button-hover\" :data-user-i-d=\"item.userID\"\r\n\t\t\t\t\t\t:data-stream-type=\"item.streamType\">{{!item.muteAudio}}</button></view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\timport UserController from \"./controller/user-controller\";\r\n\timport Pusher from \"./model/pusher\";\r\n\timport {\r\n\t\tEVENT,\r\n\t\tDEFAULT_COMPONENT_CONFIG\r\n\t} from \"./common/constants\";\r\n\timport Event from \"./utils/event\";\r\n\timport * as ENV from \"./utils/environment\";\r\n\timport TIM from \"./libs/tim-wx\";\r\n\timport MTA from \"./libs/mta_analysis\";\r\n\tconst TAG_NAME = 'TRTC-ROOM';\r\n\tconst IM_GROUP_TYPE = TIM.TYPES\r\n\t.GRP_CHATROOM; // TIM.TYPES.GRP_CHATROOM 体验版IM无数量限制，成员20个， TIM.TYPES.GRP_AVCHATROOM IM体验版最多10个，升级后无限制\r\n\t// TIM.TYPES.GRP_CHATROOM 体验版IM无数量限制，成员20个， TIM.TYPES.GRP_AVCHATROOM IM体验版最多10个，升级后无限制\r\n\tlet touchX = 0;\r\n\tlet touchY = 0;\r\n\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tpusher: null,\r\n\t\t\t\tdebugPanel: true,\r\n\t\t\t\t// 是否打开组件调试面板\r\n\t\t\t\tdebug: false,\r\n\t\t\t\t// 是否打开player pusher 的调试信息\r\n\t\t\t\tstreamList: [],\r\n\t\t\t\t// 用于渲染player列表,存储stram\r\n\t\t\t\tvisibleStreamList: [],\r\n\t\t\t\t// 有音频或者视频的StreamList\r\n\t\t\t\tuserList: [],\r\n\t\t\t\t// 扁平化的数据用来返回给用户\r\n\t\t\t\ttemplate: '',\r\n\t\t\t\t// 不能设置默认值，当默认值和传入组件的值不一致时，iOS渲染失败\r\n\t\t\t\tcameraPosition: '',\r\n\t\t\t\t// 摄像头位置，用于debug\r\n\t\t\t\tpanelName: '',\r\n\t\t\t\t// 控制面板名称，包括 setting-panel  memberlist-panel\r\n\t\t\t\tlocalVolume: 0,\r\n\t\t\t\tremoteVolumeList: [],\r\n\t\t\t\tenableIM: false,\r\n\t\t\t\t// 用于组件内渲染\r\n\t\t\t\tshowIMPanel: false,\r\n\t\t\t\texitIMThrottle: false,\r\n\t\t\t\tmessageContent: '',\r\n\t\t\t\tmessageList: [],\r\n\t\t\t\t// 仅保留10条消息\r\n\t\t\t\tmaxMessageListLength: 10,\r\n\t\t\t\tmessageListScrollTop: 0,\r\n\t\t\t\tappVersion: ENV.APP_VERSION,\r\n\t\t\t\tlibVersion: ENV.LIB_VERSION,\r\n\t\t\t\thasGridPageTipsShow: false,\r\n\t\t\t\tgridPageCount: 0,\r\n\t\t\t\t// grid 布局 player 分页的总页数\r\n\t\t\t\tgridCurrentPage: 1,\r\n\t\t\t\t// grid 布局 当前页码\r\n\t\t\t\tgridPlayerPerPage: 4,\r\n\t\t\t\t// grid 布局每页 player的数量, 如果大于3，在逻辑里第一页需要减1。等于3 pusher 在每一页都出现。可选值: 3,4\r\n\t\t\t\tgridPagePlaceholderStreamList: [],\r\n\t\t\t\t// 占位数量\r\n\t\t\t\tisFullscreenDevice: ENV.IS_FULLSCREEN_DEVICE,\r\n\t\t\t\tisShowMoreMenu: false,\r\n\t\t\t\tMICVolume: 50,\r\n\t\t\t\tBGMVolume: 50,\r\n\t\t\t\tBGMProgress: 0,\r\n\t\t\t\tbeautyStyle: 'smooth',\r\n\t\t\t\tbeautyStyleArray: [{\r\n\t\t\t\t\tvalue: 'smooth',\r\n\t\t\t\t\tlabel: '光滑',\r\n\t\t\t\t\tchecked: true\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: 'nature',\r\n\t\t\t\t\tlabel: '自然',\r\n\t\t\t\t\tchecked: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: 'close',\r\n\t\t\t\t\tlabel: '关闭',\r\n\t\t\t\t\tchecked: false\r\n\t\t\t\t}],\r\n\t\t\t\tfilterIndex: 0,\r\n\t\t\t\tfilterArray: [{\r\n\t\t\t\t\tvalue: 'standard',\r\n\t\t\t\t\tlabel: '标准'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: 'pink',\r\n\t\t\t\t\tlabel: '粉嫩'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: 'nostalgia',\r\n\t\t\t\t\tlabel: '怀旧'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: 'blues',\r\n\t\t\t\t\tlabel: '蓝调'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: 'romantic',\r\n\t\t\t\t\tlabel: '浪漫'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: 'cool',\r\n\t\t\t\t\tlabel: '清凉'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: 'fresher',\r\n\t\t\t\t\tlabel: '清新'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: 'solor',\r\n\t\t\t\t\tlabel: '日系'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: 'aestheticism',\r\n\t\t\t\t\tlabel: '唯美'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: 'whitening',\r\n\t\t\t\t\tlabel: '美白'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tvalue: 'cerisered',\r\n\t\t\t\t\tlabel: '樱红'\r\n\t\t\t\t}],\r\n\t\t\t\taudioReverbType: 0,\r\n\t\t\t\taudioReverbTypeArray: ['关闭', 'KTV', '小房间', '大会堂', '低沉', '洪亮', '金属声', '磁性'],\r\n\t\t\t\tdebugMode: \"\"\r\n\t\t\t};\r\n\t\t},\r\n        computed: {\n            sbstyle() {\n                let { visibleStreamList } = this\n                return 'grid-container ' + (visibleStreamList.length < 4 ? 'stream-' + visibleStreamList.length : 'stream-3')\n            }\n        },\r\n\t\tcomponents: {},\r\n\t\tprops: {\r\n\t\t\t// 必要的初始化参数\r\n\t\t\tconfig: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault: () => ({\r\n\t\t\t\t\tsdkAppID: '',\r\n\t\t\t\t\tuserID: '',\r\n\t\t\t\t\tuserSig: '',\r\n\t\t\t\t\ttemplate: '',\r\n\t\t\t\t\tdebugMode: false,\r\n\t\t\t\t\t// 是否开启调试模式\r\n\t\t\t\t\tenableIM: false // 是否开启 IM\r\n\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tconfig: {\r\n\t\t\t\thandler: function(newVal, oldVal) {\r\n\t\t\t\t\tthis.propertyObserverFun({\r\n\t\t\t\t\t\t'name': 'config',\r\n\t\t\t\t\t\tnewVal,\r\n\t\t\t\t\t\toldVal\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\timmediate: true,\r\n\t\t\t\tdeep: true\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated: function() {\r\n\t\t\t// 在组件实例刚刚被创建时执行\r\n\t\t\tconsole.log(TAG_NAME, 'created', ENV);\r\n\t\t\tMTA.App.init({\r\n\t\t\t\tappID: '500710685',\r\n\t\t\t\teventID: '500710697',\r\n\t\t\t\tautoReport: true,\r\n\t\t\t\tstatParam: true\r\n\t\t\t});\r\n\t\t},\r\n\t\tbeforeMount: function() {\r\n\t\t\t// 在组件实例进入页面节点树时执行\r\n\t\t\tconsole.log(TAG_NAME, 'attached');\r\n\t\t\tthis.initFun();\r\n\t\t\tMTA.Page.stat();\r\n\t\t},\r\n\t\tmounted: function() {\r\n\t\t\t// 在组件在视图层布局完成后执行\r\n\t\t\tconsole.log(TAG_NAME, 'ready');\r\n\t\t},\r\n\t\tdestroyed: function() {\r\n\t\t\t// 在组件实例被从页面节点树移除时执行\r\n\t\t\tconsole.log(TAG_NAME, 'detached'); // 停止所有拉流，并重置数据\r\n\r\n\t\t\tthis.exitRoom();\r\n\t\t},\r\n\t\terror: function(error) {\r\n\t\t\t// 每当组件方法抛出错误时执行\r\n\t\t\tconsole.log(TAG_NAME, 'error', error);\r\n\t\t},\r\n\t\tonPageShow: function() {\r\n\t\t\t// 组件所在的页面被展示时执行\r\n\t\t\tconsole.log(TAG_NAME, 'show status:', this.status);\r\n\r\n\t\t\tif (this.status.isPending) {\r\n\t\t\t\t// 经历了 5000 挂起事件\r\n\t\t\t\tthis.status.isPending = false; // 修复iOS 最小化触发5000事件后，音频推流失败的问题\r\n\t\t\t\t// if (ENV.IS_IOS && this.data.pusher.enableMic) {\r\n\t\t\t\t//   this.unpublishLocalAudio().then(()=>{\r\n\t\t\t\t//     this.publishLocalAudio()\r\n\t\t\t\t//   })\r\n\t\t\t\t// }\r\n\t\t\t\t// 经历了 5001 浮窗关闭事件，小程序底层会自动退房，恢复小程序时组件需要重新进房\r\n\t\t\t\t// 重新进房\r\n\r\n\t\t\t\tthis.enterRoom({\r\n\t\t\t\t\troomID: this.config.roomID\r\n\t\t\t\t}).then(() => { // 进房后开始推送视频或音频\r\n\t\t\t\t\t// setTimeout(()=>{\r\n\t\t\t\t\t//   this.publishLocalVideo()\r\n\t\t\t\t\t//   this.publishLocalAudio()\r\n\t\t\t\t\t// }, 2000)\r\n\t\t\t\t});\r\n\t\t\t} else if (ENV.IS_ANDROID && this.status.pageLife === 'hide' && this.status.isOnHideAddStream && this\r\n\t\t\t\t.streamList.length > 0) {\r\n\t\t\t\t// 微信没有提供明确的最小化事件，onHide事件，不一定是最小化\r\n\t\t\t\t// 获取所有的player 清空 src 重新赋值 验证无效\r\n\t\t\t\t// 清空 visibleStreamList 重新赋值， 验证无效\r\n\t\t\t\t// 退房重新进房，有效但是成本比较高\r\n\t\t\t\t// 将标记了 isOnHideAdd 的 stream 的 palyer 销毁并重新渲染\r\n\t\t\t\tconst streamList = this.streamList;\r\n\t\t\t\tlet tempStreamList = []; // 过滤 onHide 时新增的 stream\r\n\r\n\t\t\t\tfor (let i = 0; i < streamList.length; i++) {\r\n\t\t\t\t\tif (streamList[i].isOnHideAdd && streamList[i].playerContext) {\r\n\t\t\t\t\t\tconst stream = streamList[i];\r\n\t\t\t\t\t\ttempStreamList.push(stream);\r\n\t\t\t\t\t\tstream.playerContext = undefined;\r\n\t\t\t\t\t\tstreamList.splice(i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t} // 设置渲染，销毁onHide 时新增的 player\r\n\r\n\r\n\t\t\t\tthis.setListFun({\r\n\t\t\t\t\tstreamList: streamList\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\tfor (let i = 0; i < tempStreamList.length; i++) {\r\n\t\t\t\t\t\tstreamList.push(tempStreamList[i]);\r\n\t\t\t\t\t} // 设置渲染，重新创建 onHide 时新增的 player\r\n\t\t\t\t\t// setTimeout(()=>{\r\n\r\n\r\n\t\t\t\t\tthis.setListFun({\r\n\t\t\t\t\t\tstreamList: streamList\r\n\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\tfor (let i = 0; i < tempStreamList.length; i++) {\r\n\t\t\t\t\t\t\ttempStreamList[i] = uni.createLivePlayerContext(tempStreamList[i].streamID,\r\n\t\t\t\t\t\t\t\tthis);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttempStreamList = [];\r\n\t\t\t\t\t}); // }, 500)\r\n\t\t\t\t});\r\n\t\t\t\tthis.status.isOnHideAddStream = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.status.pageLife = 'show';\r\n\t\t},\r\n\t\tonPageHide: function() {\r\n\t\t\t// 组件所在的页面被隐藏时执行\r\n\t\t\tconsole.log(TAG_NAME, 'hide');\r\n\t\t\tthis.status.pageLife = 'hide';\r\n\t\t},\r\n\t\tonPageResize: function(size) {\r\n\t\t\t// 组件所在的页面尺寸变化时执行\r\n\t\t\tconsole.log(TAG_NAME, 'resize', size);\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t/**\r\n\t\t\t * 初始化各项参数和用户控制模块，在组件实例触发 attached 时调用，此时不建议对View进行变更渲染（调用setData方法）\r\n\t\t\t */\r\n\t\t\tinitFun() {\r\n\t\t\t\tconsole.log(TAG_NAME, '_init');\r\n\t\t\t\tthis.userController = new UserController(this);\r\n\t\t\t\tthis._emitter = new Event();\r\n\t\t\t\tthis.EVENT = EVENT;\r\n\t\t\t\tthis.initStatusFun();\r\n\t\t\t\tthis.bindEventFun();\r\n\t\t\t\tthis.gridBindEventFun();\r\n\t\t\t\tthis.keepScreenOnFun();\r\n\t\t\t\tconsole.log(TAG_NAME, '_init success component:', this);\r\n\t\t\t},\r\n\r\n\t\t\tinitStatusFun() {\r\n\t\t\t\tthis.status = {\r\n\t\t\t\t\tisPush: false,\r\n\t\t\t\t\t// 推流状态\r\n\t\t\t\t\tisPending: false,\r\n\t\t\t\t\t// 挂起状态，触发5000事件标记为true，onShow后标记为false\r\n\t\t\t\t\tpageLife: '',\r\n\t\t\t\t\t// 页面生命周期 hide, show\r\n\t\t\t\t\tisOnHideAddStream: false // onHide后有新增Stream\r\n\r\n\t\t\t\t};\r\n\t\t\t\tthis._lastTapTime = 0; // 点击时间戳 用于判断双击事件\r\n\r\n\t\t\t\tthis._beforeLastTapTime = 0; // 点击时间戳 用于判断双击事件\r\n\r\n\t\t\t\tthis._lastTapCoordinate = {\r\n\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\ty: 0\r\n\t\t\t\t\t}, // 点击时的坐标\r\n\t\t\t\t\tthis._isFullscreen = false; // 是否进入全屏状态\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 监听组件属性变更，外部变更组件属性时触发该监听\r\n\t\t\t * @param {Object} data newVal，oldVal\r\n\t\t\t */\r\n\t\t\tpropertyObserverFun(data) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'propertyObserverFun', data, this.config);\r\n\r\n\t\t\t\tif (data.name === 'config') {\r\n\t\t\t\t\tconst config = Object.assign({}, DEFAULT_COMPONENT_CONFIG, data.newVal);\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'propertyObserverFun config:', config); // 由于 querystring 只支持 String 类型，做一个类型防御\r\n\r\n\t\t\t\t\tif (typeof config.debugMode === 'string') {\r\n\t\t\t\t\t\tconfig.debugMode = config.debugMode === 'true' ? true : false;\r\n\t\t\t\t\t} // 初始化IM\r\n\r\n\r\n\t\t\t\t\tif (config.enableIM && config.sdkAppID) {\r\n\t\t\t\t\t\tthis.initIMFun(config);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (config.sdkAppID && data.oldVal.sdkAppID !== config.sdkAppID && MTA) {\r\n\t\t\t\t\t\tMTA.Event.stat('sdkAppID', {\r\n\t\t\t\t\t\t\t'value': config.sdkAppID\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} // 独立设置与pusher无关的配置\r\n\r\n\r\n\t\t\t\t\tthis.setData({\r\n\t\t\t\t\t\tenableIM: config.enableIM,\r\n\t\t\t\t\t\ttemplate: config.template,\r\n\t\t\t\t\t\tdebugMode: config.debugMode || false,\r\n\t\t\t\t\t\tdebug: config.debugMode || false\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.setPusherConfigFun(config);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t//  _______             __        __  __\r\n\t\t\t//  |       \\           |  \\      |  \\|  \\\r\n\t\t\t//  | $$$$$$$\\ __    __ | $$____  | $$ \\$$  _______\r\n\t\t\t//  | $$__/ $$|  \\  |  \\| $$    \\ | $$|  \\ /       \\\r\n\t\t\t//  | $$    $$| $$  | $$| $$$$$$$\\| $$| $$|  $$$$$$$\r\n\t\t\t//  | $$$$$$$ | $$  | $$| $$  | $$| $$| $$| $$\r\n\t\t\t//  | $$      | $$__/ $$| $$__/ $$| $$| $$| $$_____\r\n\t\t\t//  | $$       \\$$    $$| $$    $$| $$| $$ \\$$     \\\r\n\t\t\t//   \\$$        \\$$$$$$  \\$$$$$$$  \\$$ \\$$  \\$$$$$$$\r\n\r\n\t\t\t/**\r\n\t\t\t * 进房\r\n\t\t\t * @param {Object} params 必传 roomID 取值范围 1 ~ 4294967295\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tenterRoom(params) {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'enterRoom');\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'params', params);\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'config', this.config);\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'pusher', this.pusher); // 1. 补齐进房参数，校验必要参数是否齐全\r\n\r\n\t\t\t\t\tif (params) {\r\n\t\t\t\t\t\tObject.assign(this.pusher, params);\r\n\t\t\t\t\t\tObject.assign(this.config, params);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!this.checkParamFun(this.config)) {\r\n\t\t\t\t\t\treject(new Error('缺少必要参数'));\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} // 2. 根据参数拼接 push url，赋值给 live-pusher，\r\n\r\n\r\n\t\t\t\t\tthis.getPushUrlFun(this.config).then(pushUrl => {\r\n\t\t\t\t\t\tthis.pusher.url = pushUrl;\r\n\t\t\t\t\t\tthis.setData({\r\n\t\t\t\t\t\t\tpusher: this.pusher\r\n\t\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\t\t// 真正进房成功需要通过 1018 事件通知\r\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'enterRoom', this.pusher); // view 渲染成功回调后，开始推流\r\n\r\n\t\t\t\t\t\t\tthis.pusher.getPusherContext().start();\r\n\t\t\t\t\t\t\tthis.status.isPush = true;\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}).catch(res => {\r\n\t\t\t\t\t\t// 进房失败需要通过 pusher state 事件通知，目前还没有准确的事件通知\r\n\t\t\t\t\t\tconsole.error(TAG_NAME, 'enterRoom error', res);\r\n\t\t\t\t\t\treject(res);\r\n\t\t\t\t\t}); // 初始化 IM SDK\r\n\t\t\t\t\t// this._initIM(this.data.config)\r\n\t\t\t\t\t// 登录IM\r\n\r\n\t\t\t\t\tthis.loginIMFun({\r\n\t\t\t\t\t\t...this.config,\r\n\t\t\t\t\t\troomID: params.roomID\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 退房，停止推流和拉流，并重置数据\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\texitRoom() {\r\n\t\t\t\tif (this.status.pageLife === 'hide') {\r\n\t\t\t\t\t// 如果是退后台触发 onHide，不能调用 pusher API\r\n\t\t\t\t\tconsole.warn(TAG_NAME, '小程序最小化时不能调用 exitRoom，如果不想听到远端声音，可以调用取消订阅，如果不想远端听到声音，可以调用取消发布');\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'exitRoom');\r\n\t\t\t\t\tthis.exitIMFun();\r\n\t\t\t\t\tthis.pusher.reset();\r\n\t\t\t\t\tthis.status.isPush = false;\r\n\t\t\t\t\tconst result = this.userController.reset();\r\n\t\t\t\t\tthis.setData({\r\n\t\t\t\t\t\tpusher: this.pusher,\r\n\t\t\t\t\t\tuserList: result.userList,\r\n\t\t\t\t\t\tstreamList: result.streamList,\r\n\t\t\t\t\t\tvisibleStreamList: this.filterVisibleStreamFun(result.streamList)\r\n\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\t// 在销毁页面时调用exitRoom时，不会走到这里\r\n\t\t\t\t\t\tresolve({\r\n\t\t\t\t\t\t\tuserList: this.userList,\r\n\t\t\t\t\t\t\tstreamList: this.streamList\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, 'exitRoom success', this.pusher, this.streamList, this\r\n\t\t\t\t\t\t\t.userList); // 20200421 iOS 仍然没有1019事件通知退房，退房事件移动到 exitRoom 方法里，但不是后端通知的退房成功\r\n\r\n\t\t\t\t\t\tthis._emitter.emit(EVENT.LOCAL_LEAVE, {\r\n\t\t\t\t\t\t\tuserID: this.pusher.userID\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 开启摄像头\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tpublishLocalVideo() {\r\n\t\t\t\t// 设置 pusher enableCamera\r\n\t\t\t\tconsole.log(TAG_NAME, 'publishLocalVideo 开启摄像头');\r\n\t\t\t\treturn this.setPusherConfigFun({\r\n\t\t\t\t\tenableCamera: true\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 关闭摄像头\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tunpublishLocalVideo() {\r\n\t\t\t\t// 设置 pusher enableCamera\r\n\t\t\t\tconsole.log(TAG_NAME, 'unpublshLocalVideo 关闭摄像头');\r\n\t\t\t\treturn this.setPusherConfigFun({\r\n\t\t\t\t\tenableCamera: false\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 开启麦克风\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tpublishLocalAudio() {\r\n\t\t\t\t// 设置 pusher enableCamera\r\n\t\t\t\tconsole.log(TAG_NAME, 'publishLocalAudio 开启麦克风');\r\n\t\t\t\treturn this.setPusherConfigFun({\r\n\t\t\t\t\tenableMic: true\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 关闭麦克风\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tunpublishLocalAudio() {\r\n\t\t\t\t// 设置 pusher enableCamera\r\n\t\t\t\tconsole.log(TAG_NAME, 'unpublshLocalAudio 关闭麦克风');\r\n\t\t\t\treturn this.setPusherConfigFun({\r\n\t\t\t\t\tenableMic: false\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 订阅远端视频 主流 小画面 辅流\r\n\t\t\t * @param {Object} params {userID,streamType} streamType 传入 small 时修改对应的主流 url 的 _definitionType 参数为 small, stream.streamType 仍为 main\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tsubscribeRemoteVideo(params) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'subscribeRemoteVideo', params); // 设置指定 user streamType 的 muteVideo 为 false\r\n\r\n\t\t\t\tconst config = {\r\n\t\t\t\t\tmuteVideo: false\r\n\t\t\t\t}; // 本地数据结构里的 streamType 只支持 main 和 aux ，订阅 small 也是对 main 进行处理\r\n\r\n\t\t\t\tconst streamType = params.streamType === 'small' ? 'main' : params.streamType;\r\n\t\t\t\tconst stream = this.userController.getStream({\r\n\t\t\t\t\tuserID: params.userID,\r\n\t\t\t\t\tstreamType: streamType\r\n\t\t\t\t});\r\n\t\t\t\tstream.muteVideoPrev = false; // 用于分页切换时保留player当前的订阅状态\r\n\r\n\t\t\t\tif (params.streamType === 'small' || params.streamType === 'main') {\r\n\t\t\t\t\tif (stream && stream.streamType === 'main') {\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, 'subscribeRemoteVideo switch small', stream.src);\r\n\r\n\t\t\t\t\t\tif (params.streamType === 'small') {\r\n\t\t\t\t\t\t\tconfig.src = stream.src.replace('main', 'small');\r\n\t\t\t\t\t\t\tconfig._definitionType = 'small'; // 用于设置面板的渲染\r\n\t\t\t\t\t\t} else if (params.streamType === 'main') {\r\n\t\t\t\t\t\t\tstream.src = stream.src.replace('small', 'main');\r\n\t\t\t\t\t\t\tconfig._definitionType = 'main';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, 'subscribeRemoteVideo', stream.src);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\t\tuserID: params.userID,\r\n\t\t\t\t\tstreamType: streamType,\r\n\t\t\t\t\tconfig: config\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 取消订阅远端视频\r\n\t\t\t * @param {Object} params {userID,streamType}\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tunsubscribeRemoteVideo(params) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'unsubscribeRemoteVideo', params);\r\n\t\t\t\tconst stream = this.userController.getStream({\r\n\t\t\t\t\tuserID: params.userID,\r\n\t\t\t\t\tstreamType: params.streamType\r\n\t\t\t\t});\r\n\t\t\t\tstream.muteVideoPrev = true; // 用于分页切换时保留player当前的订阅状态\r\n\t\t\t\t// 设置指定 user streamType 的 muteVideo 为 true\r\n\r\n\t\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\t\tuserID: params.userID,\r\n\t\t\t\t\tstreamType: params.streamType,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tmuteVideo: true\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 订阅远端音频\r\n\t\t\t * @param {Object} params userID 用户ID\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tsubscribeRemoteAudio(params) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'subscribeRemoteAudio', params);\r\n\t\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\t\tuserID: params.userID,\r\n\t\t\t\t\tstreamType: 'main',\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tmuteAudio: false\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 取消订阅远端音频\r\n\t\t\t * @param {Object} params userID 用户ID\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tunsubscribeRemoteAudio(params) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'unsubscribeRemoteAudio', params);\r\n\t\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\t\tuserID: params.userID,\r\n\t\t\t\t\tstreamType: 'main',\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tmuteAudio: true\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\ton(eventCode, handler, context) {\r\n\t\t\t\tthis._emitter.on(eventCode, handler, context);\r\n\t\t\t},\r\n\r\n\t\t\toff(eventCode, handler) {\r\n\t\t\t\tthis._emitter.off(eventCode, handler);\r\n\t\t\t},\r\n\r\n\t\t\tgetRemoteUserList() {\r\n\t\t\t\treturn this.userList;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 切换前后摄像头\r\n\t\t\t */\r\n\t\t\tswitchCamera() {\r\n\t\t\t\tif (!this.cameraPosition) {\r\n\t\t\t\t\t// this.data.pusher.cameraPosition 是初始值，不支持动态设置\r\n\t\t\t\t\tthis.cameraPosition = this.pusher.frontCamera;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(TAG_NAME, 'switchCamera', this.cameraPosition);\r\n\t\t\t\tthis.cameraPosition = this.cameraPosition === 'front' ? 'back' : 'front';\r\n\t\t\t\tthis.setData({\r\n\t\t\t\t\tcameraPosition: this.cameraPosition\r\n\t\t\t\t}, () => {\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'switchCamera success', this.cameraPosition);\r\n\t\t\t\t}); // wx 7.0.9 不支持动态设置 pusher.frontCamera ，只支持调用 API switchCamer() 设置，这里修改 cameraPosition 是为了记录状态\r\n\r\n\t\t\t\tthis.pusher.getPusherContext().switchCamera();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 设置指定player view的渲染坐标和尺寸\r\n\t\t\t * @param {object} params\r\n\t\t\t * userID: string\r\n\t\t\t * streamType: string\r\n\t\t\t * xAxis: number\r\n\t\t\t * yAxis: number\r\n\t\t\t * width: number\r\n\t\t\t * height: number\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tsetViewRect(params) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'setViewRect', params);\r\n\r\n\t\t\t\tif (this.template !== 'custom') {\r\n\t\t\t\t\tconsole.warn(`如需使用setViewRect方法，请初始化时设置template:\"custom\", 当前 template:\"${this.template}\"`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.info(`不建议使用该方法动态修改样式，避免引起微信小程序渲染问题，建议直接修改 wxml wxss 进行样式定制化`);\r\n\r\n\t\t\t\tif (this.pusher.userID === params.userID) {\r\n\t\t\t\t\treturn this.setPusherConfigFun({\r\n\t\t\t\t\t\txAxis: params.xAxis,\r\n\t\t\t\t\t\tyAxis: params.yAxis,\r\n\t\t\t\t\t\twidth: params.width,\r\n\t\t\t\t\t\theight: params.height\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\t\tuserID: params.userID,\r\n\t\t\t\t\tstreamType: params.streamType,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\txAxis: params.xAxis,\r\n\t\t\t\t\t\tyAxis: params.yAxis,\r\n\t\t\t\t\t\twidth: params.width,\r\n\t\t\t\t\t\theight: params.height\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 设置指定 player 或者 pusher view 是否可见\r\n\t\t\t * @param {object} params\r\n\t\t\t * userID: string\r\n\t\t\t * streamType: string\r\n\t\t\t * isVisible：boolean\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tsetViewVisible(params) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'setViewVisible', params);\r\n\r\n\t\t\t\tif (this.template !== 'custom') {\r\n\t\t\t\t\tconsole.warn(`如需使用setViewVisible方法，请初始化时设置template:\"custom\", 当前 template:\"${this.template}\"`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.info(`不建议使用该方法动态修改样式，避免引起微信小程序渲染问题，建议直接修改 wxml wxss 进行样式定制化`);\r\n\r\n\t\t\t\tif (this.pusher.userID === params.userID) {\r\n\t\t\t\t\treturn this.setPusherConfigFun({\r\n\t\t\t\t\t\tisVisible: params.isVisible\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\t\tuserID: params.userID,\r\n\t\t\t\t\tstreamType: params.streamType,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tisVisible: params.isVisible\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 设置指定player view的层级\r\n\t\t\t * @param {Object} params\r\n\t\t\t * userID: string\r\n\t\t\t * streamType: string\r\n\t\t\t * zIndex: number\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tsetViewZIndex(params) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'setViewZIndex', params);\r\n\r\n\t\t\t\tif (this.template !== 'custom') {\r\n\t\t\t\t\tconsole.warn(`如需使用setViewZIndex方法，请初始化时设置template:\"custom\", 当前 template:\"${this.template}\"`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.info(`不建议使用该方法动态修改样式，避免引起微信小程序渲染问题，建议直接修改 wxml wxss 进行样式定制化`);\r\n\r\n\t\t\t\tif (this.pusher.userID === params.userID) {\r\n\t\t\t\t\treturn this.setPusherConfigFun({\r\n\t\t\t\t\t\tzIndex: params.zindex || params.zIndex\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\t\tuserID: params.userID,\r\n\t\t\t\t\tstreamType: params.streamType,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tzIndex: params.zindex || params.zIndex\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 播放背景音\r\n\t\t\t * @param {Object} params url\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tplayBGM(params) {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tthis.pusher.getPusherContext().playBGM({\r\n\t\t\t\t\t\turl: params.url,\r\n\t\t\t\t\t\t// 已经有相关事件不需要在这里监听,目前用于测试\r\n\t\t\t\t\t\tsuccess: () => {\r\n\t\t\t\t\t\t\tconsole.log(TAG_NAME,\r\n\t\t\t\t\t\t\t'播放背景音成功'); // this._emitter.emit(EVENT.BGM_PLAY_START)\r\n\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tfail: () => {\r\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, '播放背景音失败');\r\n\r\n\t\t\t\t\t\t\tthis._emitter.emit(EVENT.BGM_PLAY_FAIL);\r\n\r\n\t\t\t\t\t\t\treject(new Error('播放背景音失败'));\r\n\t\t\t\t\t\t} // complete: () => {\r\n\t\t\t\t\t\t//   console.log(TAG_NAME, '背景完成')\r\n\t\t\t\t\t\t//   this._emitter.emit(EVENT.BGM_PLAY_COMPLETE)\r\n\t\t\t\t\t\t// },\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tstopBGM() {\r\n\t\t\t\tthis.pusher.getPusherContext().stopBGM();\r\n\t\t\t},\r\n\r\n\t\t\tpauseBGM() {\r\n\t\t\t\tthis.pusher.getPusherContext().pauseBGM();\r\n\t\t\t},\r\n\r\n\t\t\tresumeBGM() {\r\n\t\t\t\tthis.pusher.getPusherContext().resumeBGM();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 设置背景音音量\r\n\t\t\t * @param {Object} params volume\r\n\t\t\t */\r\n\t\t\tsetBGMVolume(params) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'setBGMVolume', params);\r\n\t\t\t\tthis.pusher.getPusherContext().setBGMVolume({\r\n\t\t\t\t\tvolume: params.volume\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 设置麦克风音量\r\n\t\t\t * @param {Object} params volume\r\n\t\t\t */\r\n\t\t\tsetMICVolume(params) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'setMICVolume', params);\r\n\t\t\t\tthis.pusher.getPusherContext().setMICVolume({\r\n\t\t\t\t\tvolume: params.volume\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 发送SEI消息\r\n\t\t\t * @param {Object} params message\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tsendSEI(params) {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tthis.pusher.getPusherContext().sendMessage({\r\n\t\t\t\t\t\tmsg: params.message,\r\n\t\t\t\t\t\tsuccess: function(result) {\r\n\t\t\t\t\t\t\tresolve(result);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * pusher 和 player 的截图并保存\r\n\t\t\t * @param {Object} params userID streamType\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tsnapshot(params) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'snapshot', params);\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tthis.captureSnapshot(params).then(result => {\r\n\t\t\t\t\t\tuni.saveImageToPhotosAlbum({\r\n\t\t\t\t\t\t\tfilePath: result.tempImagePath,\r\n\r\n\t\t\t\t\t\t\tsuccess(res) {\r\n\t\t\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\t\t\ttitle: '已保存到相册'\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tconsole.log('save photo is success', res);\r\n\t\t\t\t\t\t\t\tresolve(result);\r\n\t\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t\tfail: function(error) {\r\n\t\t\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\t\t\ticon: 'none',\r\n\t\t\t\t\t\t\t\t\ttitle: '保存失败'\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tconsole.log('save photo is fail', error);\r\n\t\t\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}).catch(error => {\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 获取pusher 和 player 的截图\r\n\t\t\t * @param {Object} params userID streamType\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tcaptureSnapshot(params) {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tif (params.userID === this.pusher.userID) {\r\n\t\t\t\t\t\t// pusher\r\n\t\t\t\t\t\tthis.pusher.getPusherContext().snapshot({\r\n\t\t\t\t\t\t\tquality: 'raw',\r\n\t\t\t\t\t\t\tcomplete: result => {\r\n\t\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'snapshot pusher', result);\r\n\r\n\t\t\t\t\t\t\t\tif (result.tempImagePath) {\r\n\t\t\t\t\t\t\t\t\tresolve(result);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tconsole.log('snapShot 回调失败', result);\r\n\t\t\t\t\t\t\t\t\treject(new Error('截图失败'));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// player\r\n\t\t\t\t\t\tthis.userController.getStream(params).playerContext.snapshot({\r\n\t\t\t\t\t\t\tquality: 'raw',\r\n\t\t\t\t\t\t\tcomplete: result => {\r\n\t\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'snapshot player', result);\r\n\r\n\t\t\t\t\t\t\t\tif (result.tempImagePath) {\r\n\t\t\t\t\t\t\t\t\tresolve(result);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tconsole.log('snapShot 回调失败', result);\r\n\t\t\t\t\t\t\t\t\treject(new Error('截图失败'));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 将远端视频全屏\r\n\t\t\t * @param {Object} params userID streamType direction\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tenterFullscreen(params) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'enterFullscreen', params);\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tthis.userController.getStream(params).playerContext.requestFullScreen({\r\n\t\t\t\t\t\tdirection: params.direction || 0,\r\n\t\t\t\t\t\tsuccess: event => {\r\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'enterFullscreen success', event);\r\n\t\t\t\t\t\t\tresolve(event);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tfail: event => {\r\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'enterFullscreen fail', event);\r\n\t\t\t\t\t\t\treject(event);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 将远端视频取消全屏\r\n\t\t\t * @param {Object} params userID streamType\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\texitFullscreen(params) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'exitFullscreen', params);\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tthis.userController.getStream(params).playerContext.exitFullScreen({\r\n\t\t\t\t\t\tsuccess: event => {\r\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'exitFullScreen success', event);\r\n\t\t\t\t\t\t\tresolve(event);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tfail: event => {\r\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'exitFullScreen fail', event);\r\n\t\t\t\t\t\t\treject(event);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 设置 player 视图的横竖屏显示\r\n\t\t\t * @param {Object} params userID streamType orientation: vertical, horizontal\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tsetRemoteOrientation(params) {\r\n\t\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\t\tuserID: params.userID,\r\n\t\t\t\t\tstreamType: params.streamType,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\torientation: params.orientation\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t// 改为：\r\n\t\t\tsetViewOrientation(params) {\r\n\t\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\t\tuserID: params.userID,\r\n\t\t\t\t\tstreamType: params.streamType,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\torientation: params.orientation\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 设置 player 视图的填充模式\r\n\t\t\t * @param {Object} params userID streamType fillMode: contain，fillCrop\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tsetRemoteFillMode(params) {\r\n\t\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\t\tuserID: params.userID,\r\n\t\t\t\t\tstreamType: params.streamType,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tobjectFit: params.fillMode\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t// 改为：\r\n\t\t\tsetViewFillMode(params) {\r\n\t\t\t\treturn this.setPlayerConfigFun({\r\n\t\t\t\t\tuserID: params.userID,\r\n\t\t\t\t\tstreamType: params.streamType,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tobjectFit: params.fillMode\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 发送C2C文本消息\r\n\t\t\t * @param {*} params userID,message\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tsendC2CTextMessage(params) {\r\n\t\t\t\tif (!this.tim) {\r\n\t\t\t\t\tconsole.warn(TAG_NAME, '未开启IM功能，该方法无法使用', params);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(TAG_NAME, 'sendC2CTextMessage', params);\r\n\t\t\t\tconst message = this.tim.createTextMessage({\r\n\t\t\t\t\tto: params.userID + '',\r\n\t\t\t\t\tconversationType: TIM.TYPES.CONV_C2C,\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\ttext: params.message\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tconst promise = this.tim.sendMessage(message);\r\n\t\t\t\tpromise.then(function(imResponse) {\r\n\t\t\t\t\t// 发送成功\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'sendC2CTextMessage success', imResponse);\r\n\t\t\t\t}).catch(function(imError) {\r\n\t\t\t\t\t// 发送失败\r\n\t\t\t\t\tconsole.warn(TAG_NAME, 'sendC2CTextMessage error:', imError);\r\n\t\t\t\t});\r\n\t\t\t\treturn promise;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 发送C2C自定义消息\r\n\t\t\t * @param {*} params: userID payload\r\n\t\t\t * @returns {Promise}\r\n\t\t\t *\r\n\t\t\t */\r\n\t\t\tsendC2CCustomMessage(params) {\r\n\t\t\t\tif (!this.tim) {\r\n\t\t\t\t\tconsole.warn(TAG_NAME, '未开启IM功能，该方法无法使用', params);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(TAG_NAME, 'sendC2CCustomMessage', params);\r\n\t\t\t\tconst message = this.tim.createCustomMessage({\r\n\t\t\t\t\tto: params.userID + '',\r\n\t\t\t\t\tconversationType: TIM.TYPES.CONV_C2C,\r\n\t\t\t\t\tpayload: params.payload\r\n\t\t\t\t});\r\n\t\t\t\tconst promise = this.tim.sendMessage(message);\r\n\t\t\t\tpromise.then(function(imResponse) {\r\n\t\t\t\t\t// 发送成功\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'sendMessage success', imResponse);\r\n\t\t\t\t}).catch(function(imError) {\r\n\t\t\t\t\t// 发送失败\r\n\t\t\t\t\tconsole.warn(TAG_NAME, 'sendMessage error:', imError);\r\n\t\t\t\t});\r\n\t\t\t\treturn promise;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 发送群组文本消息\r\n\t\t\t * @param {*} params roomID message\r\n\t\t\t * @returns {Promise}\r\n\t\t\t *\r\n\t\t\t */\r\n\t\t\tsendGroupTextMessage(params) {\r\n\t\t\t\tif (!this.tim) {\r\n\t\t\t\t\tconsole.warn(TAG_NAME, '未开启IM功能，该方法无法使用', params);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(TAG_NAME, 'sendGroupTextMessage', params);\r\n\t\t\t\tconst message = this.tim.createTextMessage({\r\n\t\t\t\t\tto: params.roomID + '',\r\n\t\t\t\t\tconversationType: TIM.TYPES.CONV_GROUP,\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\ttext: params.message\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tconst promise = this.tim.sendMessage(message);\r\n\t\t\t\tpromise.then(function(imResponse) {\r\n\t\t\t\t\t// 发送成功\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'sendGroupTextMessage success', imResponse);\r\n\t\t\t\t}).catch(function(imError) {\r\n\t\t\t\t\t// 发送失败\r\n\t\t\t\t\tconsole.warn(TAG_NAME, 'sendGroupTextMessage error:', imError);\r\n\t\t\t\t});\r\n\t\t\t\treturn promise;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 发送群组自定义消息\r\n\t\t\t * @param {*} params roomID payload\r\n\t\t\t * @returns {Promise}\r\n\t\t\t *\r\n\t\t\t */\r\n\t\t\tsendGroupCustomMessage(params) {\r\n\t\t\t\tif (!this.tim) {\r\n\t\t\t\t\tconsole.warn(TAG_NAME, '未开启IM功能，该方法无法使用', params);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(TAG_NAME, 'sendGroupCustomMessage', params);\r\n\t\t\t\tconst message = this.tim.createCustomMessage({\r\n\t\t\t\t\tto: params.roomID + '',\r\n\t\t\t\t\tconversationType: TIM.TYPES.CONV_GROUP,\r\n\t\t\t\t\tpayload: params.payload\r\n\t\t\t\t});\r\n\t\t\t\tconst promise = this.tim.sendMessage(message);\r\n\t\t\t\tpromise.then(function(imResponse) {\r\n\t\t\t\t\t// 发送成功\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'sendMessage success', imResponse);\r\n\t\t\t\t}).catch(function(imError) {\r\n\t\t\t\t\t// 发送失败\r\n\t\t\t\t\tconsole.warn(TAG_NAME, 'sendMessage error:', imError);\r\n\t\t\t\t});\r\n\t\t\t\treturn promise;\r\n\t\t\t},\r\n\r\n\t\t\t// ______             __                                              __\r\n\t\t\t// |      \\           |  \\                                            |  \\\r\n\t\t\t//  \\$$$$$$ _______  _| $$_     ______    ______   _______    ______  | $$\r\n\t\t\t//   | $$  |       \\|   $$ \\   /      \\  /      \\ |       \\  |      \\ | $$\r\n\t\t\t//   | $$  | $$$$$$$\\\\$$$$$$  |  $$$$$$\\|  $$$$$$\\| $$$$$$$\\  \\$$$$$$\\| $$\r\n\t\t\t//   | $$  | $$  | $$ | $$ __ | $$    $$| $$   \\$$| $$  | $$ /      $$| $$\r\n\t\t\t//  _| $$_ | $$  | $$ | $$|  \\| $$$$$$$$| $$      | $$  | $$|  $$$$$$$| $$\r\n\t\t\t// |   $$ \\| $$  | $$  \\$$  $$ \\$$     \\| $$      | $$  | $$ \\$$    $$| $$\r\n\t\t\t//  \\$$$$$$ \\$$   \\$$   \\$$$$   \\$$$$$$$ \\$$       \\$$   \\$$  \\$$$$$$$ \\$$\r\n\r\n\t\t\t/**\r\n\t\t\t * 设置推流参数并触发页面渲染更新\r\n\t\t\t * @param {Object} config live-pusher 的配置\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tsetPusherConfigFun(config, skipLog = false) {\r\n\t\t\t\tif (!skipLog) {\r\n\t\t\t\t\tconsole.log(TAG_NAME, '_setPusherConfig', config, this.pusher);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tif (!this.pusher) {\r\n\t\t\t\t\t\tthis.pusher = new Pusher(config);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tObject.assign(this.pusher, config);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.setData({\r\n\t\t\t\t\t\tpusher: this.pusher\r\n\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\tif (!skipLog) {\r\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, '_setPusherConfig setData compelete', 'config:', config,\r\n\t\t\t\t\t\t\t\t'pusher:', this.pusher);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tresolve(config);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 设置指定 player 属性并触发页面渲染\r\n\t\t\t * @param {Object} params include userID,streamType,config\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tsetPlayerConfigFun(params) {\r\n\t\t\t\tconst userID = params.userID;\r\n\t\t\t\tconst streamType = params.streamType;\r\n\t\t\t\tconst config = params.config;\r\n\t\t\t\tconsole.log(TAG_NAME, '_setPlayerConfig', params);\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\t// 获取指定的userID streamType 的 stream\r\n\t\t\t\t\tconst user = this.userController.getUser(userID);\r\n\r\n\t\t\t\t\tif (user && user.streams[streamType]) {\r\n\t\t\t\t\t\tObject.assign(user.streams[streamType], config); // user.streams引用的对象和 streamList 里的是同一个\r\n\r\n\t\t\t\t\t\tthis.setData({\r\n\t\t\t\t\t\t\tstreamList: this.streamList,\r\n\t\t\t\t\t\t\tvisibleStreamList: this.filterVisibleStreamFun(this.streamList, true)\r\n\t\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\t\t// console.log(TAG_NAME, '_setPlayerConfig complete', params, 'streamList:', this.data.streamList)\r\n\t\t\t\t\t\t\tresolve(params);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 不需要reject，静默处理\r\n\t\t\t\t\t\tconsole.warn(TAG_NAME,\r\n\t\t\t\t\t\t'指定 userID 或者 streamType 不存在'); // reject(new Error('指定 userID 或者 streamType 不存在'))\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 设置列表数据，并触发页面渲染\r\n\t\t\t * @param {Object} params include userList, stramList\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tsetListFun(params) {\r\n\t\t\t\tconsole.log(TAG_NAME, '_setList', params, this.template);\r\n\t\t\t\tconst {\r\n\t\t\t\t\tuserList,\r\n\t\t\t\t\tstreamList\r\n\t\t\t\t} = params;\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tlet visibleStreamList = [];\r\n\t\t\t\t\tconst data = {\r\n\t\t\t\t\t\tuserList: userList || this.userList,\r\n\t\t\t\t\t\tstreamList: streamList || this.streamList\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif (this.template === 'grid') {\r\n\t\t\t\t\t\tvisibleStreamList = this.filterVisibleStreamFun(streamList);\r\n\t\t\t\t\t\tdata.visibleStreamList = visibleStreamList || this.visibleStreamList;\r\n\t\t\t\t\t\tdata.gridPagePlaceholderStreamList = this.gridPagePlaceholderStreamList;\r\n\t\t\t\t\t\tdata.gridCurrentPage = this.gridCurrentPage;\r\n\t\t\t\t\t\tdata.gridPageCount = this.gridPageCount;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.setData(data, () => {\n\t\t\t\t\t\tresolve(params);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 必选参数检测\r\n\t\t\t * @param {Object} rtcConfig rtc参数\r\n\t\t\t * @returns {Boolean}\r\n\t\t\t */\r\n\t\t\tcheckParamFun(rtcConfig) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'checkParam config:', rtcConfig);\r\n\r\n\t\t\t\tif (!rtcConfig.sdkAppID) {\r\n\t\t\t\t\tconsole.error('未设置 sdkAppID');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (rtcConfig.roomID === undefined) {\r\n\t\t\t\t\tconsole.error('未设置 roomID');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (rtcConfig.roomID < 1 || rtcConfig.roomID > 4294967296) {\r\n\t\t\t\t\tconsole.error('roomID 超出取值范围 1 ~ 4294967295');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!rtcConfig.userID) {\r\n\t\t\t\t\tconsole.error('未设置 userID');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!rtcConfig.userSig) {\r\n\t\t\t\t\tconsole.error('未设置 userSig');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!rtcConfig.template) {\r\n\t\t\t\t\tconsole.error('未设置 template');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tgetPushUrlFun(rtcConfig) {\r\n\t\t\t\t// 拼接 puhser url rtmp 方案\r\n\t\t\t\tconsole.log(TAG_NAME, '_getPushUrl', rtcConfig);\r\n\r\n\t\t\t\tif (ENV.IS_TRTC) {\r\n\t\t\t\t\t// 版本高于7.0.8，基础库版本高于2.10.0 使用新的 url\r\n\t\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t// appscene videocall live\r\n\t\t\t\t\t\t// cloudenv PRO CCC DEV UAT\r\n\t\t\t\t\t\t// encsmall 0\r\n\t\t\t\t\t\t// 对外的默认值是rtc ，对内的默认值是videocall\r\n\t\t\t\t\t\trtcConfig.scene = !rtcConfig.scene || rtcConfig.scene === 'rtc' ? 'videocall' : rtcConfig\r\n\t\t\t\t\t\t\t.scene;\r\n\t\t\t\t\t\trtcConfig.enableBlackStream = rtcConfig.enableBlackStream ||\r\n\t\t\t\t\t\t''; // 是否支持在纯音频下推送SEI消息，注意：在关闭enable-recv-message后还是无法接收\r\n\r\n\t\t\t\t\t\trtcConfig.encsmall = rtcConfig.encsmall || 0; // 是否编小画面，这个特性不建议学生默认开启，只有老师端才比较有意义\r\n\r\n\t\t\t\t\t\trtcConfig.cloudenv = rtcConfig.cloudenv || 'PRO';\r\n\t\t\t\t\t\trtcConfig.streamID = rtcConfig.streamID || ''; // 指定旁边路直播的流ID\r\n\r\n\t\t\t\t\t\trtcConfig.userDefineRecordID = rtcConfig.userDefineRecordID || ''; // 指定录制文件的recordid\r\n\r\n\t\t\t\t\t\trtcConfig.privateMapKey = rtcConfig.privateMapKey || ''; // 字符串房间号\r\n\r\n\t\t\t\t\t\trtcConfig.pureAudioMode = rtcConfig.pureAudioMode ||\r\n\t\t\t\t\t\t''; // 指定是否纯音频推流及录制，默认不填，值为1 或 2，其他值非法不处理\r\n\r\n\t\t\t\t\t\trtcConfig.recvMode = rtcConfig.recvMode ||\r\n\t\t\t\t\t\t1; // 1. 自动接收音视频 2. 仅自动接收音频 3. 仅自动接收视频 4. 音视频都不自动接收, 不能绑定player\r\n\r\n\t\t\t\t\t\tlet roomID = '';\r\n\r\n\t\t\t\t\t\tif (/^\\d+$/.test(rtcConfig.roomID)) {\r\n\t\t\t\t\t\t\t// 数字房间号\r\n\t\t\t\t\t\t\troomID = '&roomid=' + rtcConfig.roomID;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// 字符串房间号\r\n\t\t\t\t\t\t\troomID = '&strroomid=' + rtcConfig.roomID;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tconst pushUrl = 'room://cloud.tencent.com/rtc?sdkappid=' + rtcConfig.sdkAppID +\r\n\t\t\t\t\t\t\t\troomID + '&userid=' + rtcConfig.userID + '&usersig=' + rtcConfig.userSig +\r\n\t\t\t\t\t\t\t\t'&appscene=' + rtcConfig.scene + '&encsmall=' + rtcConfig.encsmall +\r\n\t\t\t\t\t\t\t\t'&cloudenv=' + rtcConfig.cloudenv + '&enableBlackStream=' + rtcConfig\r\n\t\t\t\t\t\t\t\t.enableBlackStream + '&streamid=' + rtcConfig.streamID +\r\n\t\t\t\t\t\t\t\t'&userdefinerecordid=' + rtcConfig.userDefineRecordID + '&privatemapkey=' +\r\n\t\t\t\t\t\t\t\trtcConfig.privateMapKey + '&pureaudiomode=' + rtcConfig.pureAudioMode +\r\n\t\t\t\t\t\t\t\t'&recvmode=' + rtcConfig.recvMode;\r\n\t\t\t\t\t\t\tconsole.warn(TAG_NAME, 'getPushUrl result:', pushUrl);\r\n\t\t\t\t\t\t\tresolve(pushUrl);\r\n\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.error(TAG_NAME, '组件仅支持微信 App iOS >=7.0.9, Android >= 7.0.8, 小程序基础库版 >= 2.10.0');\r\n\t\t\t\tconsole.error(TAG_NAME, '需要真机运行，开发工具不支持实时音视频');\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 获取签名和推流地址\r\n\t\t\t * @param {Object} rtcConfig 进房参数配置\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\trequestSigServerFun(rtcConfig) {\r\n\t\t\t\tconsole.log(TAG_NAME, '_requestSigServer:', rtcConfig);\r\n\t\t\t\tconst sdkAppID = rtcConfig.sdkAppID;\r\n\t\t\t\tconst userID = rtcConfig.userID;\r\n\t\t\t\tconst userSig = rtcConfig.userSig;\r\n\t\t\t\tconst roomID = rtcConfig.roomID;\r\n\t\t\t\tconst privateMapKey = rtcConfig.privateMapKey;\r\n\t\t\t\trtcConfig.useCloud = rtcConfig.useCloud === undefined ? true : rtcConfig.useCloud;\r\n\t\t\t\tlet url = rtcConfig.useCloud ? 'https://official.opensso.tencent-cloud.com/v4/openim/jsonvideoapp' :\r\n\t\t\t\t\t'https://yun.tim.qq.com/v4/openim/jsonvideoapp';\r\n\t\t\t\turl += '?sdkappid=' + sdkAppID + '&identifier=' + userID + '&usersig=' + userSig + '&random=' + Date\r\n\t\t\t\t.now() + '&contenttype=json';\r\n\t\t\t\tconst reqHead = {\r\n\t\t\t\t\t'Cmd': 1,\r\n\t\t\t\t\t'SeqNo': 1,\r\n\t\t\t\t\t'BusType': 7,\r\n\t\t\t\t\t'GroupId': roomID\r\n\t\t\t\t};\r\n\t\t\t\tconst reqBody = {\r\n\t\t\t\t\t'PrivMapEncrypt': privateMapKey,\r\n\t\t\t\t\t'TerminalType': 1,\r\n\t\t\t\t\t'FromType': 3,\r\n\t\t\t\t\t'SdkVersion': 26280566\r\n\t\t\t\t};\r\n\t\t\t\tconsole.log(TAG_NAME, '_requestSigServer:', url, reqHead, reqBody);\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tuni.request({\r\n\t\t\t\t\t\turl: url,\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t'ReqHead': reqHead,\r\n\t\t\t\t\t\t\t'ReqBody': reqBody\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\tsuccess: res => {\r\n\t\t\t\t\t\t\tconsole.log('_requestSigServer success:', res);\r\n\r\n\t\t\t\t\t\t\tif (res.data['ErrorCode'] || res.data['RspHead']['ErrorCode'] !== 0) {\r\n\t\t\t\t\t\t\t\t// console.error(res.data['ErrorInfo'] || res.data['RspHead']['ErrorInfo'])\r\n\t\t\t\t\t\t\t\tconsole.error('获取roomsig失败');\r\n\t\t\t\t\t\t\t\treject(res);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst roomSig = JSON.stringify(res.data['RspBody']);\r\n\t\t\t\t\t\t\tlet pushUrl = 'room://cloud.tencent.com?sdkappid=' + sdkAppID +\r\n\t\t\t\t\t\t\t\t'&roomid=' + roomID + '&userid=' + userID + '&roomsig=' +\r\n\t\t\t\t\t\t\t\tencodeURIComponent(roomSig); // TODO 需要重新整理的逻辑 TRTC尚未支持 20200213\r\n\t\t\t\t\t\t\t// 如果有配置纯音频推流或者recordId参数\r\n\r\n\t\t\t\t\t\t\tif (rtcConfig.pureAudioPushMod || rtcConfig.recordId) {\r\n\t\t\t\t\t\t\t\tconst bizbuf = {\r\n\t\t\t\t\t\t\t\t\tStr_uc_params: {\r\n\t\t\t\t\t\t\t\t\t\tpure_audio_push_mod: 0,\r\n\t\t\t\t\t\t\t\t\t\trecord_id: 0\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}; // 纯音频推流\r\n\r\n\t\t\t\t\t\t\t\tif (rtcConfig.pureAudioPushMod) {\r\n\t\t\t\t\t\t\t\t\tbizbuf.Str_uc_params.pure_audio_push_mod = rtcConfig\r\n\t\t\t\t\t\t\t\t\t\t.pureAudioPushMod;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tdelete bizbuf.Str_uc_params.pure_audio_push_mod;\r\n\t\t\t\t\t\t\t\t} // 自动录制时业务自定义id\r\n\r\n\r\n\t\t\t\t\t\t\t\tif (rtcConfig.recordId) {\r\n\t\t\t\t\t\t\t\t\tbizbuf.Str_uc_params.record_id = rtcConfig.recordId;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tdelete bizbuf.Str_uc_params.record_id;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tpushUrl += '&bizbuf=' + encodeURIComponent(JSON.stringify(bizbuf));\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconsole.log('roomSigInfo', pushUrl);\r\n\t\t\t\t\t\t\tresolve(pushUrl);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tfail: res => {\r\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, 'requestSigServer fail:', res);\r\n\t\t\t\t\t\t\treject(res);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tdoubleTabToggleFullscreenFun(event) {\r\n\t\t\t\tconst curTime = event.timeStamp;\r\n\t\t\t\tconst lastTime = this._lastTapTime;\r\n\t\t\t\tconst lastTapCoordinate = this._lastTapCoordinate;\r\n\t\t\t\tconst currentTapCoordinate = event.detail; // 计算两次点击的距离\r\n\r\n\t\t\t\tconst distence = Math.sqrt(Math.pow(Math.abs(currentTapCoordinate.x - lastTapCoordinate.x), 2) + Math.pow(\r\n\t\t\t\t\tMath.abs(currentTapCoordinate.y - lastTapCoordinate.y), 2));\r\n\t\t\t\tthis._lastTapCoordinate = currentTapCoordinate; // 已知问题：上次全屏操作后，必须等待1.5s后才能再次进行全屏操作，否则引发SDK全屏异常，因此增加节流逻辑\r\n\r\n\t\t\t\tconst beforeLastTime = this._beforeLastTapTime;\r\n\t\t\t\tconsole.log(TAG_NAME, 'doubleTabToggleFullscreenFun', event, lastTime, beforeLastTime, distence);\r\n\r\n\t\t\t\tif (curTime - lastTime > 0 && curTime - lastTime < 300 && lastTime - beforeLastTime > 1500 && distence <\r\n\t\t\t\t\t20) {\r\n\t\t\t\t\tconst userID = event.currentTarget.dataset.userid;\r\n\t\t\t\t\tconst streamType = event.currentTarget.dataset.streamtype;\r\n\r\n\t\t\t\t\tif (this._isFullscreen) {\r\n\t\t\t\t\t\tthis.exitFullscreen({\r\n\t\t\t\t\t\t\tuserID,\r\n\t\t\t\t\t\t\tstreamType\r\n\t\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\t\tthis._isFullscreen = false;\r\n\t\t\t\t\t\t}).catch(() => {});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// const stream = this.userController.getStream({ userID, streamType })\r\n\t\t\t\t\t\tlet direction; // // 已知问题：视频的尺寸需要等待player触发NetStatus事件才能获取到，如果进房就双击全屏，全屏后的方向有可能不对。\r\n\t\t\t\t\t\t// if (stream && stream.videoWidth && stream.videoHeight) {\r\n\t\t\t\t\t\t//   // 如果是横视频，全屏时进行横屏处理。如果是竖视频，则为0\r\n\t\t\t\t\t\t//   direction = stream.videoWidth > stream.videoHeight ? 90 : 0\r\n\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\tthis.enterFullscreen({\r\n\t\t\t\t\t\t\tuserID,\r\n\t\t\t\t\t\t\tstreamType,\r\n\t\t\t\t\t\t\tdirection\r\n\t\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\t\tthis._isFullscreen = true;\r\n\t\t\t\t\t\t}).catch(() => {});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._beforeLastTapTime = lastTime;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._lastTapTime = curTime;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * TRTC-room 远端用户和音视频状态处理\r\n\t\t\t */\r\n\t\t\tbindEventFun() {\r\n\t\t\t\t// 远端用户进房\r\n\t\t\t\tthis.userController.on(EVENT.REMOTE_USER_JOIN, event => {\r\n\t\t\t\t\tconsole.log(TAG_NAME, '远端用户进房', event, event.data.userID);\r\n\t\t\t\t\tthis.setData({\r\n\t\t\t\t\t\tuserList: event.data.userList\r\n\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_USER_JOIN, {\r\n\t\t\t\t\t\t\tuserID: event.data.userID\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_USER_JOIN', 'streamList:', this.streamList, 'userList:', this\r\n\t\t\t\t\t\t.userList);\r\n\t\t\t\t}); // 远端用户离开\r\n\r\n\t\t\t\tthis.userController.on(EVENT.REMOTE_USER_LEAVE, event => {\r\n\t\t\t\t\tconsole.log(TAG_NAME, '远端用户离开', event, event.data.userID);\r\n\r\n\t\t\t\t\tif (event.data.userID) {\r\n\t\t\t\t\t\tthis.setListFun({\r\n\t\t\t\t\t\t\tuserList: event.data.userList,\r\n\t\t\t\t\t\t\tstreamList: event.data.streamList\r\n\t\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_USER_LEAVE, {\r\n\t\t\t\t\t\t\t\tuserID: event.data.userID\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_USER_LEAVE', 'streamList:', this.streamList, 'userList:', this\r\n\t\t\t\t\t\t.userList);\r\n\t\t\t\t}); // 视频状态 true\r\n\r\n\t\t\t\tthis.userController.on(EVENT.REMOTE_VIDEO_ADD, event => {\r\n\t\t\t\t\tconsole.log(TAG_NAME, '远端视频可用', event, event.data.stream.userID);\r\n\t\t\t\t\tconst stream = event.data.stream; // 如果Android onHide 时，新增的player 无法播放 记录标识位\r\n\r\n\t\t\t\t\tif (this.status.pageLife === 'hide') {\r\n\t\t\t\t\t\tthis.status.isOnHideAddStream = true;\r\n\t\t\t\t\t\tstream.isOnHideAdd = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.setListFun({\r\n\t\t\t\t\t\tuserList: event.data.userList,\r\n\t\t\t\t\t\tstreamList: event.data.streamList\r\n\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\t// 完善 的stream 的 playerContext\r\n\t\t\t\t\t\tstream.playerContext = uni.createLivePlayerContext(stream.streamID,\r\n\t\t\t\t\t\tthis); // 新增的需要触发一次play 默认属性才能生效\r\n\t\t\t\t\t\t// stream.playerContext.play()\r\n\t\t\t\t\t\t// console.log(TAG_NAME, 'REMOTE_VIDEO_ADD playerContext.play()', stream)\r\n\r\n\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_VIDEO_ADD, {\r\n\t\t\t\t\t\t\tuserID: stream.userID,\r\n\t\t\t\t\t\t\tstreamType: stream.streamType\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_VIDEO_ADD', 'streamList:', this.streamList, 'userList:', this\r\n\t\t\t\t\t\t.userList);\r\n\t\t\t\t}); // 视频状态 false\r\n\r\n\t\t\t\tthis.userController.on(EVENT.REMOTE_VIDEO_REMOVE, event => {\r\n\t\t\t\t\tconsole.log(TAG_NAME, '远端视频移除', event, event.data.stream.userID);\r\n\t\t\t\t\tconst stream = event.data.stream;\r\n\t\t\t\t\tthis.setListFun({\r\n\t\t\t\t\t\tuserList: event.data.userList,\r\n\t\t\t\t\t\tstreamList: event.data.streamList\r\n\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\t// 有可能先触发了退房事件，用户名下的所有stream都已清除\r\n\t\t\t\t\t\tif (stream.userID && stream.streamType) {\r\n\t\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_VIDEO_REMOVE, {\r\n\t\t\t\t\t\t\t\tuserID: stream.userID,\r\n\t\t\t\t\t\t\t\tstreamType: stream.streamType\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_VIDEO_REMOVE', 'streamList:', this.streamList, 'userList:', this\r\n\t\t\t\t\t\t.userList);\r\n\t\t\t\t}); // 音频可用\r\n\r\n\t\t\t\tthis.userController.on(EVENT.REMOTE_AUDIO_ADD, event => {\r\n\t\t\t\t\tconsole.log(TAG_NAME, '远端音频可用', event);\r\n\t\t\t\t\tconst stream = event.data.stream;\r\n\t\t\t\t\tthis.setListFun({\r\n\t\t\t\t\t\tuserList: event.data.userList,\r\n\t\t\t\t\t\tstreamList: event.data.streamList\r\n\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\tstream.playerContext = uni.createLivePlayerContext(stream.streamID,\r\n\t\t\t\t\t\tthis); // 新增的需要触发一次play 默认属性才能生效\r\n\t\t\t\t\t\t// stream.playerContext.play()\r\n\t\t\t\t\t\t// console.log(TAG_NAME, 'REMOTE_AUDIO_ADD playerContext.play()', stream)\r\n\r\n\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_AUDIO_ADD, {\r\n\t\t\t\t\t\t\tuserID: stream.userID,\r\n\t\t\t\t\t\t\tstreamType: stream.streamType\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_AUDIO_ADD', 'streamList:', this.streamList, 'userList:', this\r\n\t\t\t\t\t\t.userList);\r\n\t\t\t\t}); // 音频不可用\r\n\r\n\t\t\t\tthis.userController.on(EVENT.REMOTE_AUDIO_REMOVE, event => {\r\n\t\t\t\t\tconsole.log(TAG_NAME, '远端音频移除', event, event.data.stream.userID);\r\n\t\t\t\t\tconst stream = event.data.stream;\r\n\t\t\t\t\tthis.setListFun({\r\n\t\t\t\t\t\tuserList: event.data.userList,\r\n\t\t\t\t\t\tstreamList: event.data.streamList\r\n\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\t// 有可能先触发了退房事件，用户名下的所有stream都已清除\r\n\t\t\t\t\t\tif (stream.userID && stream.streamType) {\r\n\t\t\t\t\t\t\tthis._emitter.emit(EVENT.REMOTE_AUDIO_REMOVE, {\r\n\t\t\t\t\t\t\t\tuserID: stream.userID,\r\n\t\t\t\t\t\t\t\tstreamType: stream.streamType\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'REMOTE_AUDIO_REMOVE', 'streamList:', this.streamList, 'userList:', this\r\n\t\t\t\t\t\t.userList);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * pusher event handler\r\n\t\t\t * @param {*} event 事件实例\r\n\t\t\t */\r\n\t\t\tpusherStateChangeHandlerFun(event) {\r\n\t\t\t\tconst code = event.detail.code;\r\n\t\t\t\tconst message = event.detail.message;\r\n\t\t\t\tconsole.log(TAG_NAME, 'pusherStateChange：', code, event);\r\n\r\n\t\t\t\tswitch (code) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t// 未知状态码，不做处理\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, message, code);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 1001:\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '已经连接推流服务器', code);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 1002:\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '已经与服务器握手完毕,开始推流', code);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 1003:\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '打开摄像头成功', code);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 1004:\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '录屏启动成功', code);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 1005:\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '推流动态调整分辨率', code);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 1006:\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '推流动态调整码率', code);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 1007:\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '首帧画面采集完成', code);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 1008:\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '编码器启动', code);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 1018:\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '进房成功', code);\r\n\r\n\t\t\t\t\t\tthis._emitter.emit(EVENT.LOCAL_JOIN, {\r\n\t\t\t\t\t\t\tuserID: this.pusher.userID\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 1019:\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '退出房间',\r\n\t\t\t\t\t\tcode); // 20200421 iOS 仍然没有1019事件通知退房，退房事件移动到 exitRoom 方法里，但不是后端通知的退房成功\r\n\t\t\t\t\t\t// this._emitter.emit(EVENT.LOCAL_LEAVE, { userID: this.data.pusher.userID })\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2003:\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '渲染首帧视频', code);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 1020:\r\n\t\t\t\t\tcase 1031:\r\n\t\t\t\t\tcase 1032:\r\n\t\t\t\t\tcase 1033:\r\n\t\t\t\t\tcase 1034:\r\n\t\t\t\t\t\t// 通过 userController 处理 1020 1031 1032 1033 1034\r\n\t\t\t\t\t\tthis.userController.userEventHandler(event);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase -1301:\r\n\t\t\t\t\t\tconsole.error(TAG_NAME, '打开摄像头失败: ', code);\r\n\r\n\t\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\r\n\t\t\t\t\t\t\tcode,\r\n\t\t\t\t\t\t\tmessage\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase -1302:\r\n\t\t\t\t\t\tconsole.error(TAG_NAME, '打开麦克风失败: ', code);\r\n\r\n\t\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\r\n\t\t\t\t\t\t\tcode,\r\n\t\t\t\t\t\t\tmessage\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase -1303:\r\n\t\t\t\t\t\tconsole.error(TAG_NAME, '视频编码失败: ', code);\r\n\r\n\t\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\r\n\t\t\t\t\t\t\tcode,\r\n\t\t\t\t\t\t\tmessage\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase -1304:\r\n\t\t\t\t\t\tconsole.error(TAG_NAME, '音频编码失败: ', code);\r\n\r\n\t\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\r\n\t\t\t\t\t\t\tcode,\r\n\t\t\t\t\t\t\tmessage\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase -1307:\r\n\t\t\t\t\t\tconsole.error(TAG_NAME, '推流连接断开: ', code);\r\n\r\n\t\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\r\n\t\t\t\t\t\t\tcode,\r\n\t\t\t\t\t\t\tmessage\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase -100018:\r\n\t\t\t\t\t\tconsole.error(TAG_NAME, '进房失败: userSig 校验失败，请检查 userSig 是否填写正确', code, message);\r\n\r\n\t\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\r\n\t\t\t\t\t\t\tcode,\r\n\t\t\t\t\t\t\tmessage\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 5000:\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '小程序被挂起: ', code); // 20200421 iOS 微信点击胶囊圆点会触发该事件\r\n\t\t\t\t\t\t// 触发 5000 后，底层SDK会退房，返回前台后会自动进房\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 5001:\r\n\t\t\t\t\t\t// 20200421 仅有 Android 微信会触发该事件\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '小程序悬浮窗被关闭: ', code);\r\n\t\t\t\t\t\tthis.status.isPending = true;\r\n\r\n\t\t\t\t\t\tif (this.status.isPush) {\r\n\t\t\t\t\t\t\tthis.exitRoom();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 1021:\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '网络类型发生变化，需要重新进房', code);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2007:\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '本地视频播放loading: ', code);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2004:\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, '本地视频播放开始: ', code);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, message, code);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tpusherNetStatusHandlerFun(event) {\r\n\t\t\t\t// 触发 LOCAL_NET_STATE_UPDATE\r\n\t\t\t\tthis._emitter.emit(EVENT.LOCAL_NET_STATE_UPDATE, event);\r\n\t\t\t},\r\n\r\n\t\t\tpusherErrorHandlerFun(event) {\r\n\t\t\t\t// 触发 ERROR\r\n\t\t\t\tconsole.warn(TAG_NAME, 'pusher error', event);\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst code = event.detail.errCode;\r\n\t\t\t\t\tconst message = event.detail.errMsg;\r\n\r\n\t\t\t\t\tthis._emitter.emit(EVENT.ERROR, {\r\n\t\t\t\t\t\tcode,\r\n\t\t\t\t\t\tmessage\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch (exception) {\r\n\t\t\t\t\tconsole.error(TAG_NAME, 'pusher error data parser exception', event, exception);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tpusherBGMStartHandlerFun(event) { // 触发 BGM_START 已经在playBGM方法中进行处理\r\n\t\t\t\t// this._emitter.emit(EVENT.BGM_PLAY_START, { data: event })\r\n\t\t\t},\r\n\r\n\t\t\tpusherBGMProgressHandlerFun(event) {\r\n\t\t\t\t// BGM_PROGRESS\r\n\t\t\t\tthis._emitter.emit(EVENT.BGM_PLAY_PROGRESS, event);\r\n\t\t\t},\r\n\r\n\t\t\tpusherBGMCompleteHandlerFun(event) {\r\n\t\t\t\t// BGM_COMPLETE\r\n\t\t\t\tthis._emitter.emit(EVENT.BGM_PLAY_COMPLETE, event);\r\n\t\t\t},\r\n\r\n\t\t\tpusherAudioVolumeNotifyFun: function(event) {\r\n\t\t\t\t// console.log(TAG_NAME, 'pusherAudioVolumeNotifyFun', event)\r\n\t\t\t\tthis._emitter.emit(EVENT.LOCAL_AUDIO_VOLUME_UPDATE, event);\r\n\t\t\t},\r\n\r\n\t\t\t// player event handler\r\n\t\t\t// 获取 player ID 再进行触发\r\n\t\t\tplayerStateChangeFun(event) {\r\n\t\t\t\t// console.log(TAG_NAME, 'playerStateChangeFun', event)\r\n\t\t\t\tthis._emitter.emit(EVENT.REMOTE_STATE_UPDATE, event);\r\n\t\t\t},\r\n\r\n\t\t\tplayerFullscreenChangeFun(event) {\r\n\t\t\t\t// console.log(TAG_NAME, 'playerFullscreenChangeFun', event)\r\n\t\t\t\tthis._emitter.emit(EVENT.REMOTE_FULLSCREEN_UPDATE, event);\r\n\r\n\t\t\t\tthis._emitter.emit(EVENT.VIDEO_FULLSCREEN_UPDATE, event);\r\n\t\t\t},\r\n\r\n\t\t\tplayerNetStatusFun(event) {\r\n\t\t\t\t// console.log(TAG_NAME, 'playerNetStatusFun', event)\r\n\t\t\t\t// 获取player 视频的宽高\r\n\t\t\t\tconst stream = this.userController.getStream({\r\n\t\t\t\t\tuserID: event.currentTarget.dataset.userid,\r\n\t\t\t\t\tstreamType: event.currentTarget.dataset.streamtype\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (stream && (stream.videoWidth !== event.detail.info.videoWidth || stream.videoHeight !== event.detail\r\n\t\t\t\t\t\t.info.videoHeight)) {\r\n\t\t\t\t\tconsole.log(TAG_NAME, 'playerNetStatusFun update video size', event);\r\n\t\t\t\t\tstream.videoWidth = event.detail.info.videoWidth;\r\n\t\t\t\t\tstream.videoHeight = event.detail.info.videoHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._emitter.emit(EVENT.REMOTE_NET_STATE_UPDATE, event);\r\n\t\t\t},\r\n\r\n\t\t\tplayerAudioVolumeNotifyFun(event) {\r\n\t\t\t\t// console.log(TAG_NAME, 'playerAudioVolumeNotifyFun', event)\r\n\t\t\t\tthis._emitter.emit(EVENT.REMOTE_AUDIO_VOLUME_UPDATE, event);\r\n\t\t\t},\r\n\r\n\t\t\tfilterVisibleStreamFun(streamList, skipPagination) {\r\n\t\t\t\tconst list = streamList.filter(item => {\r\n\t\t\t\t\t// 全部显示\r\n\t\t\t\t\t// return true\r\n\t\t\t\t\t// 只显示有视频或者有音频的 stream\r\n\t\t\t\t\treturn item.hasVideo || item.hasAudio;\r\n\t\t\t\t}); // 按 userID 进行排序\r\n\r\n\t\t\t\tlist.sort((item1, item2) => {\r\n\t\t\t\t\tconst id1 = item1.userID.toUpperCase();\r\n\t\t\t\t\tconst id2 = item2.userID.toUpperCase();\r\n\r\n\t\t\t\t\tif (id1 < id2) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (id1 > id2) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (this.template === 'grid' && !skipPagination) {\r\n\t\t\t\t\tthis.filterGridPageVisibleStreamFun(\r\n\t\t\t\t\tlist); // console.log(TAG_NAME, '_filterVisibleStream gridPagePlaceholderStreamList:', this.data.gridPagePlaceholderStreamList)\r\n\r\n\t\t\t\t\tif ( // list.length > this.data.gridPlayerPerPage - 2 &&\r\n\t\t\t\t\t\tthis.gridCurrentPage > 1 && this.gridPagePlaceholderStreamList.length === this.gridPlayerPerPage) {\r\n\t\t\t\t\t\t// 如果stream 数量大于每页可显示数量，当前页面已经没有可显示的stream(占位数量==3) 回到上一个页面。\r\n\t\t\t\t\t\tthis.gridPageToPrevFun(list);\r\n\t\t\t\t\t}\r\n\t\t\t\t} // console.log(TAG_NAME, '_filterVisibleStream list:', list)\r\n\r\n\r\n\t\t\t\treturn list;\r\n\t\t\t},\r\n\r\n\t\t\tfilterGridPageVisibleStreamFun(list) {\r\n\t\t\t\t// 最多只显示 gridPlayerPerPage 个stream\r\n\t\t\t\tconst length = list.length; // +1 pusher\r\n\r\n\t\t\t\tthis.gridPageCount = Math.ceil((length + 1) / this.gridPlayerPerPage);\r\n\t\t\t\tthis.gridPagePlaceholderStreamList = [];\r\n\t\t\t\tlet visibleCount = 0; // 需要显示的player区间\r\n\r\n\t\t\t\tlet interval;\r\n\r\n\t\t\t\tif (this.gridPlayerPerPage > 3) {\r\n\t\t\t\t\tif (this.gridCurrentPage === 1) {\r\n\t\t\t\t\t\tinterval = [-1, this.gridPlayerPerPage - 1];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 每页显示4个时，第一页显示3个，pusher只在第一页\r\n\t\t\t\t\t\t// -1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14\r\n\t\t\t\t\t\t//    1     2       3        4\r\n\t\t\t\t\t\t// -1 3\r\n\t\t\t\t\t\t// 2 7\r\n\t\t\t\t\t\t// 6 11\r\n\t\t\t\t\t\tinterval = [this.gridCurrentPage * this.gridPlayerPerPage - (this.gridPlayerPerPage + 2), this\r\n\t\t\t\t\t\t\t.gridCurrentPage * this.gridPlayerPerPage - 1\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 每页显示3个，每页都有pusher\r\n\t\t\t\t\tinterval = [this.gridCurrentPage * this.gridPlayerPerPage - (this.gridPlayerPerPage + 1), this\r\n\t\t\t\t\t\t.gridCurrentPage * this.gridPlayerPerPage\r\n\t\t\t\t\t];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\t\tif (i > interval[0] && i < interval[1]) {\r\n\t\t\t\t\t\tlist[i].isVisible = true;\r\n\t\t\t\t\t\tlist[i].muteVideo = list[i].muteVideoPrev === undefined ? list[i].muteVideo : list[i]\r\n\t\t\t\t\t\t.muteVideoPrev;\r\n\t\t\t\t\t\tvisibleCount++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlist[i].isVisible = false;\r\n\t\t\t\t\t\tlist[i].muteVideo = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} // 第一页，不需要占位\r\n\r\n\r\n\t\t\t\tif (this.gridCurrentPage !== 1) {\r\n\t\t\t\t\tfor (let i = 0; i < this.gridPlayerPerPage - visibleCount; i++) {\r\n\t\t\t\t\t\tthis.gridPagePlaceholderStreamList.push({\r\n\t\t\t\t\t\t\tid: 'holder-' + i\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn list;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 保持屏幕常亮\r\n\t\t\t */\r\n\t\t\tkeepScreenOnFun() {\r\n\t\t\t\tsetInterval(() => {\r\n\t\t\t\t\tuni.setKeepScreenOn({\r\n\t\t\t\t\t\tkeepScreenOn: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 20000);\r\n\t\t\t},\r\n\r\n\t\t\t//  ______  __       __        ______             __                                              __\r\n\t\t\t//  |      \\|  \\     /  \\      |      \\           |  \\                                            |  \\\r\n\t\t\t//   \\$$$$$$| $$\\   /  $$       \\$$$$$$ _______  _| $$_     ______    ______   _______    ______  | $$\r\n\t\t\t//    | $$  | $$$\\ /  $$$        | $$  |       \\|   $$ \\   /      \\  /      \\ |       \\  |      \\ | $$\r\n\t\t\t//    | $$  | $$$$\\  $$$$        | $$  | $$$$$$$\\\\$$$$$$  |  $$$$$$\\|  $$$$$$\\| $$$$$$$\\  \\$$$$$$\\| $$\r\n\t\t\t//    | $$  | $$\\$$ $$ $$        | $$  | $$  | $$ | $$ __ | $$    $$| $$   \\$$| $$  | $$ /      $$| $$\r\n\t\t\t//   _| $$_ | $$ \\$$$| $$       _| $$_ | $$  | $$ | $$|  \\| $$$$$$$$| $$      | $$  | $$|  $$$$$$$| $$\r\n\t\t\t//  |   $$ \\| $$  \\$ | $$      |   $$ \\| $$  | $$  \\$$  $$ \\$$     \\| $$      | $$  | $$ \\$$    $$| $$\r\n\t\t\t//   \\$$$$$$ \\$$      \\$$       \\$$$$$$ \\$$   \\$$   \\$$$$   \\$$$$$$$ \\$$       \\$$   \\$$  \\$$$$$$$ \\$$\r\n\r\n\t\t\t/**\r\n\t\t\t * 初始化 IM SDK\r\n\t\t\t * @param {Object} config sdkAppID\r\n\t\t\t */\r\n\t\t\tinitIMFun(config) {\r\n\t\t\t\tif (!config.enableIM || !config.sdkAppID || this.tim) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(TAG_NAME, '_initIM', config); // 初始化 sdk 实例\r\n\r\n\t\t\t\tconst tim = TIM.create({\r\n\t\t\t\t\tSDKAppID: config.sdkAppID\r\n\t\t\t\t}); // 0 普通级别，日志量较多，接入时建议使用\r\n\t\t\t\t// 1 release级别，SDK 输出关键信息，生产环境时建议使用\r\n\t\t\t\t// 2 告警级别，SDK 只输出告警和错误级别的日志\r\n\t\t\t\t// 3 错误级别，SDK 只输出错误级别的日志\r\n\t\t\t\t// 4 无日志级别，SDK 将不打印任何日志\r\n\r\n\t\t\t\tif (config.debugMode) {\r\n\t\t\t\t\ttim.setLogLevel(1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttim.setLogLevel(4);\r\n\t\t\t\t} // 取消监听\r\n\r\n\r\n\t\t\t\ttim.off(TIM.EVENT.SDK_READY, this.onIMReadyFun);\r\n\t\t\t\ttim.off(TIM.EVENT.MESSAGE_RECEIVED, this.onIMMessageReceivedFun);\r\n\t\t\t\ttim.off(TIM.EVENT.SDK_NOT_READY, this.onIMNotReadyFun);\r\n\t\t\t\ttim.off(TIM.EVENT.KICKED_OUT, this.onIMKickedOutFun);\r\n\t\t\t\ttim.off(TIM.EVENT.ERROR, this.onIMErrorFun); // 监听事件\r\n\r\n\t\t\t\ttim.on(TIM.EVENT.SDK_READY, this.onIMReadyFun, this);\r\n\t\t\t\ttim.on(TIM.EVENT.MESSAGE_RECEIVED, this.onIMMessageReceivedFun, this);\r\n\t\t\t\ttim.on(TIM.EVENT.SDK_NOT_READY, this.onIMNotReadyFun, this);\r\n\t\t\t\ttim.on(TIM.EVENT.KICKED_OUT, this.onIMKickedOutFun, this);\r\n\t\t\t\ttim.on(TIM.EVENT.ERROR, this.onIMErrorFun, this);\r\n\t\t\t\tthis.tim = tim;\r\n\t\t\t\tuni.tim = tim;\r\n\t\t\t},\r\n\r\n\t\t\tloginIMFun(params) {\r\n\t\t\t\tif (!this.tim) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(TAG_NAME, '_loginIM', params);\r\n\t\t\t\treturn this.tim.login({\r\n\t\t\t\t\tuserID: params.userID,\r\n\t\t\t\t\tuserSig: params.userSig\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tlogoutIMFun() {\r\n\t\t\t\tif (!this.tim) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(TAG_NAME, '_logoutIM');\r\n\t\t\t\treturn this.tim.logout();\r\n\t\t\t},\r\n\r\n\t\t\texitIMFun() {\r\n\t\t\t\t// 方法需要调用限制，否则重复解散群 退群会有warn\r\n\t\t\t\tif (this.exitIMThrottle || !this.tim) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.exitIMThrottle = true;\r\n\t\t\t\tconst userList = this.getRemoteUserList();\r\n\t\t\t\tconst roomID = this.config.roomID;\r\n\t\t\t\tconst userID = this.config.userID;\r\n\t\t\t\tthis.searchGroupFun({\r\n\t\t\t\t\troomID\r\n\t\t\t\t}).then(imResponse => {\r\n\t\t\t\t\t// 查询群资料，判断是否为群主\r\n\t\t\t\t\tif (imResponse.data.group.ownerID === userID && userList.length === 0) {\r\n\t\t\t\t\t\t// 如果 userList 为 0 群主可以解散群，并登出IM\r\n\t\t\t\t\t\tthis.dismissGroupFun({\r\n\t\t\t\t\t\t\troomID\r\n\t\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\t\tthis.exitIMThrottle = false;\r\n\t\t\t\t\t\t\tthis.logoutIMFun();\r\n\t\t\t\t\t\t}).catch(imError => {\r\n\t\t\t\t\t\t\tthis.exitIMThrottle = false;\r\n\t\t\t\t\t\t\tthis.logoutIMFun();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else if (imResponse.data.group.ownerID === userID) {\r\n\t\t\t\t\t\tthis.exitIMThrottle = false; // 群主不能退群只能登出\r\n\r\n\t\t\t\t\t\tthis.logoutIMFun();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 普通成员退群并登出IM\r\n\t\t\t\t\t\tthis.quitGroupFun({\r\n\t\t\t\t\t\t\troomID\r\n\t\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\t\tthis.exitIMThrottle = false;\r\n\t\t\t\t\t\t\tthis.logoutIMFun();\r\n\t\t\t\t\t\t}).catch(imError => {\r\n\t\t\t\t\t\t\tthis.exitIMThrottle = false;\r\n\t\t\t\t\t\t\tthis.logoutIMFun();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch(imError => {\r\n\t\t\t\t\tthis.exitIMThrottle = false; // 查询异常直接登出\r\n\r\n\t\t\t\t\tthis.logoutIMFun();\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tsearchGroupFun(params) {\r\n\t\t\t\tif (!this.tim) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(TAG_NAME, '_searchGroup', params);\r\n\t\t\t\tconst tim = this.tim;\r\n\t\t\t\tconst promise = tim.searchGroupByID(params.roomID + '');\r\n\t\t\t\tpromise.then(function(imResponse) {\r\n\t\t\t\t\t// const group = imResponse.data.group // 群组信息\r\n\t\t\t\t\tconsole.log(TAG_NAME, '_searchGroup success', imResponse);\r\n\t\t\t\t}).catch(function(imError) {\r\n\t\t\t\t\tconsole.warn(TAG_NAME, '_searchGroup fail，TIM 报错信息不影响后续逻辑，可以忽略', imError); // 搜素群组失败的相关信息\r\n\t\t\t\t});\r\n\t\t\t\treturn promise;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 创建 AVchatroom\r\n\t\t\t * @param {*} params roomID\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tcreateGroupFun(params) {\r\n\t\t\t\tif (!this.tim) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(TAG_NAME, '_createGroup', params);\r\n\t\t\t\tconst promise = this.tim.createGroup({\r\n\t\t\t\t\tgroupID: params.roomID + '',\r\n\t\t\t\t\tname: params.roomID + '',\r\n\t\t\t\t\ttype: IM_GROUP_TYPE\r\n\t\t\t\t});\r\n\t\t\t\tpromise.then(imResponse => {\r\n\t\t\t\t\t// 创建成功\r\n\t\t\t\t\tconsole.log(TAG_NAME, '_createGroup success', imResponse.data.group); // 创建的群的资料\r\n\t\t\t\t}).catch(imError => {\r\n\t\t\t\t\tconsole.warn(TAG_NAME, '_createGroup error', imError); // 创建群组失败的相关信息\r\n\t\t\t\t});\r\n\t\t\t\treturn promise;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 进入 AVchatroom\r\n\t\t\t * @param {*} params roomID\r\n\t\t\t * @returns {Promise}\r\n\t\t\t */\r\n\t\t\tjoinGroupFun(params) {\r\n\t\t\t\tif (!this.tim) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(TAG_NAME, '_joinGroup', params);\r\n\t\t\t\tconst promise = this.tim.joinGroup({\r\n\t\t\t\t\tgroupID: params.roomID + '',\r\n\t\t\t\t\ttype: IM_GROUP_TYPE\r\n\t\t\t\t});\r\n\t\t\t\tpromise.then(imResponse => {\r\n\t\t\t\t\tswitch (imResponse.data.status) {\r\n\t\t\t\t\t\tcase TIM.TYPES.JOIN_STATUS_WAIT_APPROVAL:\r\n\t\t\t\t\t\t\t// 等待管理员同意\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase TIM.TYPES.JOIN_STATUS_SUCCESS: // 加群成功\r\n\r\n\t\t\t\t\t\tcase TIM.TYPES.JOIN_STATUS_ALREADY_IN_GROUP:\r\n\t\t\t\t\t\t\t// 已经在群中\r\n\t\t\t\t\t\t\t// console.log(imResponse.data.group) // 加入的群组资料\r\n\t\t\t\t\t\t\t// wx.showToast({\r\n\t\t\t\t\t\t\t//   title: '进群成功',\r\n\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, '_joinGroup success', imResponse);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch(imError => {\r\n\t\t\t\t\tconsole.warn(TAG_NAME, 'joinGroup error', imError); // 申请加群失败的相关信息\r\n\t\t\t\t});\r\n\t\t\t\treturn promise;\r\n\t\t\t},\r\n\r\n\t\t\tquitGroupFun(params) {\r\n\t\t\t\tif (!this.tim) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(TAG_NAME, '_quitGroup', params);\r\n\t\t\t\tconst promise = this.tim.quitGroup(params.roomID + '');\r\n\t\t\t\tpromise.then(imResponse => {\r\n\t\t\t\t\tconsole.log(TAG_NAME, '_quitGroup success', imResponse);\r\n\t\t\t\t}).catch(imError => {\r\n\t\t\t\t\tconsole.warn(TAG_NAME, 'quitGroup error', imError);\r\n\t\t\t\t});\r\n\t\t\t\treturn promise;\r\n\t\t\t},\r\n\r\n\t\t\tdismissGroupFun(params) {\r\n\t\t\t\tif (!this.tim) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(TAG_NAME, '_dismissGroup', params);\r\n\t\t\t\tconst promise = this.tim.dismissGroup(params.roomID + '');\r\n\t\t\t\tpromise.then(imResponse => {\r\n\t\t\t\t\tconsole.log(TAG_NAME, '_dismissGroup success', imResponse);\r\n\t\t\t\t}).catch(imError => {\r\n\t\t\t\t\tconsole.warn(TAG_NAME, '_dismissGroup error', imError);\r\n\t\t\t\t});\r\n\t\t\t\treturn promise;\r\n\t\t\t},\r\n\r\n\t\t\tonIMReadyFun(event) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'IM.READY', event);\r\n\r\n\t\t\t\tthis._emitter.emit(EVENT.IM_READY, event);\r\n\r\n\t\t\t\tconst roomID = this.config.roomID; // 查询群组是否存在\r\n\r\n\t\t\t\tthis.searchGroupFun({\r\n\t\t\t\t\troomID\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\t// console.log(TAG_NAME, 'searchGroup', res)\r\n\t\t\t\t\t// 存在直接进群\r\n\t\t\t\t\tthis.joinGroupFun({\r\n\t\t\t\t\t\troomID\r\n\t\t\t\t\t});\r\n\t\t\t\t}).catch(() => {\r\n\t\t\t\t\t// 不存在则创建，如果是avchatroom 创建后进群\r\n\t\t\t\t\tthis.createGroupFun({\r\n\t\t\t\t\t\troomID\r\n\t\t\t\t\t}).then(res => {\r\n\t\t\t\t\t\t// 进群\r\n\t\t\t\t\t\tthis.joinGroupFun({\r\n\t\t\t\t\t\t\troomID\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}).catch(imError => {\r\n\t\t\t\t\t\tif (imError.code === 10021) {\r\n\t\t\t\t\t\t\tconsole.log(TAG_NAME, '群已存在，直接进群', event);\r\n\t\t\t\t\t\t\tthis.joinGroupFun({\r\n\t\t\t\t\t\t\t\troomID\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}); // 收到离线消息和会话列表同步完毕通知，接入侧可以调用 sendMessage 等需要鉴权的接口\r\n\t\t\t\t// event.name - TIM.EVENT.IM_READY\r\n\t\t\t},\r\n\r\n\t\t\tonIMMessageReceivedFun(event) {\r\n\t\t\t\t// 收到推送的单聊、群聊、群提示、群系统通知的新消息，可通过遍历 event.data 获取消息列表数据并渲染到页面\r\n\t\t\t\tconsole.log(TAG_NAME, 'IM.MESSAGE_RECEIVED', event); // messageList 仅保留10条消息\r\n\r\n\t\t\t\tconst messageData = event.data;\r\n\t\t\t\tconst roomID = this.config.roomID + '';\r\n\t\t\t\tconst userID = this.config.userID + '';\r\n\r\n\t\t\t\tfor (let i = 0; i < messageData.length; i++) {\r\n\t\t\t\t\tconst message = messageData[\r\n\t\t\t\t\ti]; // console.log(TAG_NAME, 'IM.MESSAGE_RECEIVED', message, this.data.config, TIM.TYPES.MSG_TEXT)\r\n\r\n\t\t\t\t\tif (message.to === roomID + '' || message.to === userID) {\r\n\t\t\t\t\t\t// 遍历messageData 获取当前room 或者当前user的消息\r\n\t\t\t\t\t\tconsole.log(TAG_NAME, 'IM.MESSAGE_RECEIVED', message, message.type, TIM.TYPES.MSG_TEXT);\r\n\r\n\t\t\t\t\t\tif (message.type === TIM.TYPES.MSG_TEXT) {\r\n\t\t\t\t\t\t\tthis.pushMessageListFun({\r\n\t\t\t\t\t\t\t\tname: message.from,\r\n\t\t\t\t\t\t\t\tmessage: message.payload.text\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (message.type === TIM.TYPES.MSG_GRP_SYS_NOTICE && message.payload.operationType === 2) {\r\n\t\t\t\t\t\t\t\t// 群系统通知\r\n\t\t\t\t\t\t\t\tthis.pushMessageListFun({\r\n\t\t\t\t\t\t\t\t\tname: '系统通知',\r\n\t\t\t\t\t\t\t\t\tmessage: `欢迎 ${userID}`\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} // 其他消息暂不处理\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._emitter.emit(EVENT.IM_MESSAGE_RECEIVED, event);\r\n\t\t\t},\r\n\r\n\t\t\tonIMNotReadyFun(event) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'IM.NOT_READY', event);\r\n\r\n\t\t\t\tthis._emitter.emit(EVENT.IM_NOT_READY, event); // 收到 SDK 进入 not ready 状态通知，此时 SDK 无法正常工作\r\n\t\t\t\t// event.name - TIM.EVENT.IM_NOT_READY\r\n\r\n\t\t\t},\r\n\r\n\t\t\tonIMKickedOutFun(event) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'IM.KICKED_OUT', event);\r\n\r\n\t\t\t\tthis._emitter.emit(EVENT.IM_KICKED_OUT, event); // 收到被踢下线通知\r\n\t\t\t\t// event.name - TIM.EVENT.KICKED_OUT\r\n\t\t\t\t// event.data.type - 被踢下线的原因，例如 :\r\n\t\t\t\t//    - TIM.TYPES.KICKED_OUT_MULT_ACCOUNT 多实例登录被踢\r\n\t\t\t\t//    - TIM.TYPES.KICKED_OUT_MULT_DEVICE 多终端登录被踢\r\n\t\t\t\t//    - TIM.TYPES.KICKED_OUT_USERSIG_EXPIRED 签名过期被踢。使用前需要将SDK版本升级至v2.4.0或以上。\r\n\r\n\t\t\t},\r\n\r\n\t\t\tonIMErrorFun(event) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'IM.ERROR', event);\r\n\r\n\t\t\t\tthis._emitter.emit(EVENT.IM_ERROR, event); // 收到 SDK 发生错误通知，可以获取错误码和错误信息\r\n\t\t\t\t// event.name - TIM.EVENT.ERROR\r\n\t\t\t\t// event.data.code - 错误码\r\n\t\t\t\t// event.data.message - 错误信息\r\n\r\n\t\t\t},\r\n\r\n\t\t\t//  ________                                  __             __\r\n\t\t\t//  |        \\                                |  \\           |  \\\r\n\t\t\t//   \\$$$$$$$$______   ______ ____    ______  | $$  ______  _| $$_     ______\r\n\t\t\t//     | $$  /      \\ |      \\    \\  /      \\ | $$ |      \\|   $$ \\   /      \\\r\n\t\t\t//     | $$ |  $$$$$$\\| $$$$$$\\$$$$\\|  $$$$$$\\| $$  \\$$$$$$\\\\$$$$$$  |  $$$$$$\\\r\n\t\t\t//     | $$ | $$    $$| $$ | $$ | $$| $$  | $$| $$ /      $$ | $$ __ | $$    $$\r\n\t\t\t//     | $$ | $$$$$$$$| $$ | $$ | $$| $$__/ $$| $$|  $$$$$$$ | $$|  \\| $$$$$$$$\r\n\t\t\t//     | $$  \\$$     \\| $$ | $$ | $$| $$    $$| $$ \\$$    $$  \\$$  $$ \\$$     \\\r\n\t\t\t//      \\$$   \\$$$$$$$ \\$$  \\$$  \\$$| $$$$$$$  \\$$  \\$$$$$$$   \\$$$$   \\$$$$$$$\r\n\t\t\t//                                  | $$\r\n\t\t\t//                                  | $$\r\n\t\t\t//                                   \\$$\r\n\t\t\t// 以下为 debug & template 相关函数\r\n\t\t\ttoggleVideoFun() {\r\n\t\t\t\tif (this.pusher.enableCamera) {\r\n\t\t\t\t\tthis.unpublishLocalVideo();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.publishLocalVideo();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\ttoggleAudioFun() {\r\n\t\t\t\tif (this.pusher.enableMic) {\r\n\t\t\t\t\tthis.unpublishLocalAudio();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.publishLocalAudio();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tdebugToggleRemoteVideoFun(event) {\r\n\t\t\t\tconsole.log(TAG_NAME, '_debugToggleRemoteVideo', event.currentTarget.dataset);\r\n\t\t\t\tconst userID = event.currentTarget.dataset.userID;\r\n\t\t\t\tconst streamType = event.currentTarget.dataset.streamType;\r\n\t\t\t\tconst stream = this.streamList.find(item => {\r\n\t\t\t\t\treturn item.userID === userID && item.streamType === streamType;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (stream.muteVideo) {\r\n\t\t\t\t\tthis.subscribeRemoteVideo({\r\n\t\t\t\t\t\tuserID,\r\n\t\t\t\t\t\tstreamType\r\n\t\t\t\t\t}); // this.setViewVisible({ userID, streamType, isVisible: true })\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.unsubscribeRemoteVideo({\r\n\t\t\t\t\t\tuserID,\r\n\t\t\t\t\t\tstreamType\r\n\t\t\t\t\t}); // this.setViewVisible({ userID, streamType, isVisible: false })\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tdebugToggleRemoteAudioFun(event) {\r\n\t\t\t\tconsole.log(TAG_NAME, '_debugToggleRemoteAudio', event.currentTarget.dataset);\r\n\t\t\t\tconst userID = event.currentTarget.dataset.userID;\r\n\t\t\t\tconst streamType = event.currentTarget.dataset.streamType;\r\n\t\t\t\tconst stream = this.streamList.find(item => {\r\n\t\t\t\t\treturn item.userID === userID && item.streamType === streamType;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (stream.muteAudio) {\r\n\t\t\t\t\tthis.subscribeRemoteAudio({\r\n\t\t\t\t\t\tuserID\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.unsubscribeRemoteAudio({\r\n\t\t\t\t\t\tuserID\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tdebugToggleVideoDebugFun() {\r\n\t\t\t\tthis.setData({\r\n\t\t\t\t\tdebug: !this.debug\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tdebugExitRoomFun() {\r\n\t\t\t\tthis.exitRoom();\r\n\t\t\t},\r\n\r\n\t\t\tdebugEnterRoomFun() {\r\n\t\t\t\tObject.assign(this.pusher, this.config);\r\n\t\t\t\tthis.enterRoom({\r\n\t\t\t\t\troomID: this.config.roomID\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tthis.publishLocalVideo();\r\n\t\t\t\t\t\tthis.publishLocalAudio();\r\n\t\t\t\t\t}, 2000); // 进房后开始推送视频或音频\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tdebugGoBackFun() {\r\n\t\t\t\tuni.navigateBack({\r\n\t\t\t\t\tdelta: 1\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tdebugTogglePanelFun() {\r\n\t\t\t\tthis.setData({\r\n\t\t\t\t\tdebugPanel: !this.debugPanel\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tdebugSendRandomMessageFun() {\r\n\t\t\t\tconst userList = this.getRemoteUserList();\r\n\r\n\t\t\t\tif (userList.length === 0 || !this.tim) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst roomID = this.config.roomID;\r\n\t\t\t\tconst message = `Hello! ${userList[0].userID} ${9999 * Math.random()}`;\r\n\t\t\t\tconst userID = userList[0].userID;\r\n\t\t\t\tthis.sendC2CTextMessage({\r\n\t\t\t\t\tuserID: userID,\r\n\t\t\t\t\tmessage: message\r\n\t\t\t\t});\r\n\t\t\t\tconst promise = this.sendGroupTextMessage({\r\n\t\t\t\t\troomID: roomID,\r\n\t\t\t\t\tmessage: message\r\n\t\t\t\t}); // 消息上屏\r\n\r\n\t\t\t\tthis.pushMessageListFun({\r\n\t\t\t\t\tname: userID,\r\n\t\t\t\t\tmessage: message\r\n\t\t\t\t});\r\n\t\t\t\tpromise.then(function(imResponse) {\r\n\t\t\t\t\t// 发送成功\r\n\t\t\t\t\tconsole.log(TAG_NAME, '_debugSendRandomMessage success', imResponse);\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '发送成功',\r\n\t\t\t\t\t\ticon: 'success',\r\n\t\t\t\t\t\tduration: 1000\r\n\t\t\t\t\t});\r\n\t\t\t\t}).catch(function(imError) {\r\n\t\t\t\t\t// 发送失败\r\n\t\t\t\t\tconsole.warn(TAG_NAME, '_debugSendRandomMessage error', imError);\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '发送失败',\r\n\t\t\t\t\t\ticon: 'none',\r\n\t\t\t\t\t\tduration: 1000\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\ttoggleAudioVolumeTypeFun() {\r\n\t\t\t\tif (this.pusher.audioVolumeType === 'voicecall') {\r\n\t\t\t\t\tthis.setPusherConfigFun({\r\n\t\t\t\t\t\taudioVolumeType: 'media'\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setPusherConfigFun({\r\n\t\t\t\t\t\taudioVolumeType: 'voicecall'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\ttoggleSoundModeFun() {\r\n\t\t\t\tif (this.userList.length === 0) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst stream = this.userController.getStream({\r\n\t\t\t\t\tuserID: this.userList[0].userID,\r\n\t\t\t\t\tstreamType: 'main'\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (stream) {\r\n\t\t\t\t\tif (stream.soundMode === 'speaker') {\r\n\t\t\t\t\t\tstream['soundMode'] = 'ear';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstream['soundMode'] = 'speaker';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.setPlayerConfigFun({\r\n\t\t\t\t\t\tuserID: stream.userID,\r\n\t\t\t\t\t\tstreamType: 'main',\r\n\t\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\t\tsoundMode: stream['soundMode']\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 退出通话\r\n\t\t\t */\r\n\t\t\thangUpFun() {\r\n\t\t\t\tthis.exitRoom();\r\n\t\t\t\tuni.navigateBack({\r\n\t\t\t\t\tdelta: 1\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 切换订阅音频状态\r\n\t\t\t */\r\n\t\t\thandleSubscribeAudio() {\r\n\t\t\t\tif (this.pusher.enableMic) {\r\n\t\t\t\t\tthis.unpublishLocalAudio();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.publishLocalAudio();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 切换订阅远端视频状态\r\n\t\t\t * @param {Object} event native 事件对象\r\n\t\t\t */\r\n\t\t\thandleSubscribeRemoteVideoFun(event) {\r\n\t\t\t\tconst userID = event.currentTarget.dataset.userID;\r\n\t\t\t\tconst streamType = event.currentTarget.dataset.streamType;\r\n\t\t\t\tconst stream = this.streamList.find(item => {\r\n\t\t\t\t\treturn item.userID === userID && item.streamType === streamType;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (stream.muteVideo) {\r\n\t\t\t\t\tthis.subscribeRemoteVideo({\r\n\t\t\t\t\t\tuserID,\r\n\t\t\t\t\t\tstreamType\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.unsubscribeRemoteVideo({\r\n\t\t\t\t\t\tuserID,\r\n\t\t\t\t\t\tstreamType\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t *\r\n\t\t\t * @param {Object} event native 事件对象\r\n\t\t\t */\r\n\t\t\thandleSubscribeRemoteAudioFun(event) {\r\n\t\t\t\tconst userID = event.currentTarget.dataset.userID;\r\n\t\t\t\tconst streamType = event.currentTarget.dataset.streamType;\r\n\t\t\t\tconst stream = this.streamList.find(item => {\r\n\t\t\t\t\treturn item.userID === userID && item.streamType === streamType;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (stream.muteAudio) {\r\n\t\t\t\t\tthis.subscribeRemoteAudio({\r\n\t\t\t\t\t\tuserID\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.unsubscribeRemoteAudio({\r\n\t\t\t\t\t\tuserID\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * grid布局, 唤起 memberlist-panel\r\n\t\t\t */\r\n\t\t\tswitchMemberListPanelFun() {\r\n\t\t\t\tthis.setData({\r\n\t\t\t\t\tpanelName: this.panelName !== 'memberlist-panel' ? 'memberlist-panel' : ''\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * grid布局, 唤起 setting-panel\r\n\t\t\t */\r\n\t\t\tswitchSettingPanelFun() {\r\n\t\t\t\tthis.setData({\r\n\t\t\t\t\tpanelName: this.panelName !== 'setting-panel' ? 'setting-panel' : ''\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tswitchBGMPanelFun() {\r\n\t\t\t\tthis.setData({\r\n\t\t\t\t\tpanelName: this.panelName !== 'bgm-panel' ? 'bgm-panel' : ''\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\thandleMaskerClickFun() {\r\n\t\t\t\tthis.setData({\r\n\t\t\t\t\tpanelName: ''\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tsetPuserPropertyFun(event) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'setPuserPropertyFun', event);\r\n\t\t\t\tconst key = event.currentTarget.dataset.key;\r\n\t\t\t\tconst valueType = event.currentTarget.dataset.valueType;\r\n\t\t\t\tlet value = event.currentTarget.dataset.value;\r\n\t\t\t\tconst config = {};\r\n\r\n\t\t\t\tif (valueType === 'boolean') {\r\n\t\t\t\t\tvalue = value === 'true' ? true : false;\r\n\t\t\t\t\tconfig[key] = !this.pusher[key];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (valueType === 'number' && value.indexOf('|') > 0) {\r\n\t\t\t\t\tvalue = value.split('|'); // console.log(this.data.pusher, this.data.pusher[key], key, value)\r\n\r\n\t\t\t\t\tif (this.pusher[key] === Number(value[0])) {\r\n\t\t\t\t\t\tconfig[key] = Number(value[1]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconfig[key] = Number(value[0]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (valueType === 'string' && value.indexOf('|') > 0) {\r\n\t\t\t\t\tvalue = value.split('|');\r\n\r\n\t\t\t\t\tif (this.pusher[key] === value[0]) {\r\n\t\t\t\t\t\tconfig[key] = value[1];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconfig[key] = value[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setPusherConfigFun(config);\r\n\t\t\t},\r\n\r\n\t\t\tsetPlayerPropertyFun(event) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'setPlayerPropertyFun', event);\r\n\t\t\t\tconst userID = event.currentTarget.dataset.userid;\r\n\t\t\t\tconst streamType = event.currentTarget.dataset.streamtype;\r\n\t\t\t\tconst key = event.currentTarget.dataset.key;\r\n\t\t\t\tlet value = event.currentTarget.dataset.value;\r\n\t\t\t\tconst stream = this.userController.getStream({\r\n\t\t\t\t\tuserID: userID,\r\n\t\t\t\t\tstreamType: streamType\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (!stream) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst config = {};\r\n\r\n\t\t\t\tif (value === 'true') {\r\n\t\t\t\t\tvalue = true;\r\n\t\t\t\t} else if (value === 'false') {\r\n\t\t\t\t\tvalue = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof value === 'boolean') {\r\n\t\t\t\t\tconfig[key] = !stream[key];\r\n\t\t\t\t} else if (typeof value === 'string' && value.indexOf('|') > 0) {\r\n\t\t\t\t\tvalue = value.split('|');\r\n\r\n\t\t\t\t\tif (stream[key] === value[0]) {\r\n\t\t\t\t\t\tconfig[key] = value[1];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconfig[key] = value[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(TAG_NAME, 'setPlayerPropertyFun', config);\r\n\t\t\t\tthis.setPlayerConfigFun({\r\n\t\t\t\t\tuserID,\r\n\t\t\t\t\tstreamType,\r\n\t\t\t\t\tconfig\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tchangePropertyFun(event) {\r\n\t\t\t\tconst propertyName = event.currentTarget.dataset.propertyName;\r\n\t\t\t\tconst newData = {};\r\n\t\t\t\tnewData[propertyName] = event.detail.value;\r\n\t\t\t\tthis.setData(newData);\r\n\t\t\t\tconst volume = newData[propertyName] / 100;\r\n\r\n\t\t\t\tswitch (propertyName) {\r\n\t\t\t\t\tcase 'MICVolume':\r\n\t\t\t\t\t\tthis.setMICVolume({\r\n\t\t\t\t\t\t\tvolume\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BGMVolume':\r\n\t\t\t\t\t\tthis.setBGMVolume({\r\n\t\t\t\t\t\t\tvolume\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tswitchStreamTypeFun(event) {\r\n\t\t\t\tconst userID = event.currentTarget.dataset.userid;\r\n\t\t\t\tconst streamType = event.currentTarget.dataset.streamtype;\r\n\t\t\t\tconst stream = this.userController.getStream({\r\n\t\t\t\t\tuserID: userID,\r\n\t\t\t\t\tstreamType: streamType\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (stream && stream.streamType === 'main') {\r\n\t\t\t\t\tif (stream._definitionType === 'small') {\r\n\t\t\t\t\t\tthis.subscribeRemoteVideo({\r\n\t\t\t\t\t\t\tuserID,\r\n\t\t\t\t\t\t\tstreamType: 'main'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.subscribeRemoteVideo({\r\n\t\t\t\t\t\t\tuserID,\r\n\t\t\t\t\t\t\tstreamType: 'small'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\thandleSnapshotClickFun(event) {\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '开始截屏',\r\n\t\t\t\t\ticon: 'none',\r\n\t\t\t\t\tduration: 1000\r\n\t\t\t\t});\r\n\t\t\t\tconst userID = event.currentTarget.dataset.userid;\r\n\t\t\t\tconst streamType = event.currentTarget.dataset.streamtype;\r\n\t\t\t\tthis.snapshot({\r\n\t\t\t\t\tuserID,\r\n\t\t\t\t\tstreamType\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * grid布局, 绑定事件\r\n\t\t\t */\r\n\t\t\tgridBindEventFun() {\r\n\t\t\t\t// 远端音量变更\r\n\t\t\t\tthis.on(EVENT.REMOTE_AUDIO_VOLUME_UPDATE, event => {\r\n\t\t\t\t\tconst data = event.data;\r\n\t\t\t\t\tconst userID = data.currentTarget.dataset.userid;\r\n\t\t\t\t\tconst streamType = data.currentTarget.dataset.streamtype;\r\n\t\t\t\t\tconst volume = data.detail\r\n\t\t\t\t\t.volume; // console.log(TAG_NAME, '远端音量变更', userID, streamType, volume, event)\r\n\r\n\t\t\t\t\tconst stream = this.userController.getStream({\r\n\t\t\t\t\t\tuserID: userID,\r\n\t\t\t\t\t\tstreamType: streamType === 'aux' ? 'main' :\r\n\t\t\t\t\t\t\tstreamType // 远端推辅流后，音量回调会从辅流的 player 返回，而不是主流player 返回。需要等 native SDK修复。\r\n\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (stream) {\r\n\t\t\t\t\t\tstream.volume = volume;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.setData({\r\n\t\t\t\t\t\tstreamList: this.streamList,\r\n\t\t\t\t\t\tvisibleStreamList: this.filterVisibleStreamFun(this.streamList, true)\r\n\t\t\t\t\t}, () => {});\r\n\t\t\t\t});\r\n\t\t\t\tthis.on(EVENT.BGM_PLAY_PROGRESS, event => {\r\n\t\t\t\t\t// console.log(TAG_NAME, '_gridBindEvent on BGM_PLAY_PROGRESS', event)\r\n\t\t\t\t\tconst BGMProgress = event.data.detail.progress / event.data.detail.duration * 100;\r\n\t\t\t\t\tthis.setData({\r\n\t\t\t\t\t\tBGMProgress\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tthis.on(EVENT.LOCAL_AUDIO_VOLUME_UPDATE, event => {\r\n\t\t\t\t\t// console.log(TAG_NAME, '_gridBindEvent on LOCAL_AUDIO_VOLUME_UPDATE', event)\r\n\t\t\t\t\t// const data = event.data\r\n\t\t\t\t\tconst volume = event.data.detail.volume; // 避免频繁输出log\r\n\r\n\t\t\t\t\tthis.setPusherConfigFun({\r\n\t\t\t\t\t\tvolume\r\n\t\t\t\t\t}, true);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\thandleGridTouchStartFun(event) {\r\n\t\t\t\ttouchX = event.changedTouches[0].clientX;\r\n\t\t\t\ttouchY = event.changedTouches[0].clientY;\r\n\t\t\t},\r\n\r\n\t\t\thandleGridTouchEndFun(event) {\r\n\t\t\t\tconst x = event.changedTouches[0].clientX;\r\n\t\t\t\tconst y = event.changedTouches[0].clientY;\r\n\r\n\t\t\t\tif (x - touchX > 50 && Math.abs(y - touchY) < 50) {\r\n\t\t\t\t\t// console.log(TAG_NAME, '向右滑 当前页面', this.data.gridCurrentPage, this.data.gridPageCount)\r\n\t\t\t\t\tthis.gridPagePrevFun();\r\n\t\t\t\t} else if (x - touchX < -50 && Math.abs(y - touchY) < 50) {\r\n\t\t\t\t\t// console.log(TAG_NAME, '向左滑 当前页面', this.data.gridCurrentPage, this.data.gridPageCount)\r\n\t\t\t\t\tthis.gridPageNextFun();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tgridPageToPrevFun(streamList) {\r\n\t\t\t\tconst visibleStreamList = this.filterGridPageVisibleStreamFun(streamList);\r\n\r\n\t\t\t\tif (this.gridPagePlaceholderStreamList.length === this.gridPlayerPerPage) {\r\n\t\t\t\t\tthis.gridCurrentPage--;\r\n\t\t\t\t\tthis.gridPageToPrevFun(streamList);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn visibleStreamList;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tgridPageNextFun() {\r\n\t\t\t\tthis.gridCurrentPage++;\r\n\r\n\t\t\t\tif (this.gridCurrentPage > this.gridPageCount) {\r\n\t\t\t\t\tthis.gridCurrentPage = 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.gridPageSetDataFun();\r\n\t\t\t},\r\n\r\n\t\t\tgridPagePrevFun() {\r\n\t\t\t\tthis.gridCurrentPage--;\r\n\r\n\t\t\t\tif (this.gridCurrentPage < 1) {\r\n\t\t\t\t\tthis.gridCurrentPage = this.gridPageCount;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.gridPageSetDataFun();\r\n\t\t\t},\r\n\r\n\t\t\tgridPageSetDataFun() {\r\n\t\t\t\tthis.gridShowPageTipsFun();\r\n\t\t\t\tconst visibleStreamList = this.filterVisibleStreamFun(this.streamList);\r\n\t\t\t\tthis.setData({\r\n\t\t\t\t\tgridCurrentPage: this.gridCurrentPage,\r\n\t\t\t\t\tgridPageCount: this.gridPageCount,\r\n\t\t\t\t\tvisibleStreamList: visibleStreamList,\r\n\t\t\t\t\tstreamList: this.streamList,\r\n\t\t\t\t\tgridPagePlaceholderStreamList: this.gridPagePlaceholderStreamList\r\n\t\t\t\t}, () => {});\r\n\t\t\t},\r\n\r\n\t\t\tgridShowPageTipsFun(event) {\r\n\t\t\t\tif (this.gridPageCount < 2) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(TAG_NAME, '_gridShowPageTips', this);\r\n\r\n\t\t\t\tif (this.hasGridPageTipsShow) {\r\n\t\t\t\t\tclearTimeout(this.hasGridPageTipsShow);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.animate('.pages-container', [{\r\n\t\t\t\t\topacity: 1\r\n\t\t\t\t}], 100, () => {});\r\n\t\t\t\tthis.hasGridPageTipsShow = setTimeout(() => {\r\n\t\t\t\t\tthis.animate('.pages-container', [{\r\n\t\t\t\t\t\topacity: 1\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\topacity: 0.3\r\n\t\t\t\t\t}], 600, () => {});\r\n\t\t\t\t}, 3000);\r\n\t\t\t},\r\n\r\n\t\t\ttoggleFullscreenFun(event) {\r\n\t\t\t\tconsole.log(TAG_NAME, 'toggleFullscreenFun', event);\r\n\t\t\t\tconst userID = event.currentTarget.dataset.userID;\r\n\t\t\t\tconst streamType = event.currentTarget.dataset.streamType;\r\n\r\n\t\t\t\tif (this._isFullscreen) {\r\n\t\t\t\t\tthis.exitFullscreen({\r\n\t\t\t\t\t\tuserID,\r\n\t\t\t\t\t\tstreamType\r\n\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\tthis._isFullscreen = false;\r\n\t\t\t\t\t}).catch(() => {});\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// const stream = this.userController.getStream({ userID, streamType })\r\n\t\t\t\t\tconst direction = 0; // 已知问题：视频的尺寸需要等待player触发NetStatus事件才能获取到，如果进房就双击全屏，全屏后的方向有可能不对。\r\n\t\t\t\t\t// if (stream && stream.videoWidth && stream.videoHeight) {\r\n\t\t\t\t\t//   // 如果是横视频，全屏时进行横屏处理。如果是竖视频，则为0\r\n\t\t\t\t\t//   direction = stream.videoWidth > stream.videoHeight ? 90 : 0\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\tthis.enterFullscreen({\r\n\t\t\t\t\t\tuserID,\r\n\t\t\t\t\t\tstreamType,\r\n\t\t\t\t\t\tdirection\r\n\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\tthis._isFullscreen = true;\r\n\t\t\t\t\t}).catch(() => {});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\ttoggleMoreMenuFun() {\r\n\t\t\t\tthis.setData({\r\n\t\t\t\t\tisShowMoreMenu: !this.isShowMoreMenu\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\ttoggleIMPanelFun() {\r\n\t\t\t\tif (!this.enableIM) {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ticon: 'none',\r\n\t\t\t\t\t\ttitle: '当前没有开启IM功能，请设置 enableIM:true'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setData({\r\n\t\t\t\t\tshowIMPanel: !this.showIMPanel\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\thandleBGMOperationFun(event) {\r\n\t\t\t\tconst operationName = event.currentTarget.dataset.operationName;\r\n\r\n\t\t\t\tif (this[operationName]) {\r\n\t\t\t\t\tthis[operationName]({\r\n\t\t\t\t\t\turl: 'https://trtc-1252463788.cos.ap-guangzhou.myqcloud.com/web/assets/bgm-test.mp3'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tselectBeautyStyleFun: function(event) {\r\n\t\t\t\tconsole.log(TAG_NAME, '_selectBeautyStyle',\r\n\t\t\t\tevent); // this.data.beauty = (event.detail.value === 'close' ? 0 : 9)\r\n\r\n\t\t\t\tconst value = event.detail.value;\r\n\t\t\t\tthis.setData({\r\n\t\t\t\t\t// beauty: (value === 'close' ? 0 : 9),\r\n\t\t\t\t\tbeautyStyle: value\r\n\t\t\t\t}, () => {\r\n\t\t\t\t\tthis.setPusherConfigFun({\r\n\t\t\t\t\t\tbeautyLevel: value === 'close' ? 0 : 9,\r\n\t\t\t\t\t\tbeautyStyle: value === 'close' ? 'smooth' : value\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tselectFilterFun: function(event) {\r\n\t\t\t\tconsole.log(TAG_NAME, '_selectFilter', event);\r\n\t\t\t\tconst index = parseInt(event.detail.value);\r\n\t\t\t\tthis.setData({\r\n\t\t\t\t\tfilterIndex: index\r\n\t\t\t\t}, () => {\r\n\t\t\t\t\tthis.setPusherConfigFun({\r\n\t\t\t\t\t\tfilter: this.filterArray[index].value\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tselectAudioReverbTypeFun: function(event) {\r\n\t\t\t\tconsole.log(TAG_NAME, '_selectAudioReverbType', event);\r\n\t\t\t\tconst audioReverbType = parseInt(event.detail.value);\r\n\t\t\t\tthis.setPusherConfigFun({\r\n\t\t\t\t\taudioReverbType\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tsendIMMessageFun(event) {\r\n\t\t\t\tconsole.log(TAG_NAME, '_sendIMMessage', event);\r\n\r\n\t\t\t\tif (!this.messageContent) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst roomID = this.config.roomID;\r\n\t\t\t\tconst message = this.messageContent;\r\n\t\t\t\tconst userID = this.config.userID;\r\n\t\t\t\tthis.sendGroupTextMessage({\r\n\t\t\t\t\troomID,\r\n\t\t\t\t\tmessage\r\n\t\t\t\t}); // 消息上屏\r\n\r\n\t\t\t\tthis.pushMessageListFun({\r\n\t\t\t\t\tname: userID,\r\n\t\t\t\t\tmessage: message\r\n\t\t\t\t});\r\n\t\t\t\tthis.setData({\r\n\t\t\t\t\tmessageContent: ''\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tinputIMMessageFun(event) {\r\n\t\t\t\t// console.log(TAG_NAME, '_inputIMMessage', event)\r\n\t\t\t\tthis.setData({\r\n\t\t\t\t\tmessageContent: event.detail.value\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tpushMessageListFun(params) {\r\n\t\t\t\tif (this.messageList.length === this.maxMessageListLength) {\r\n\t\t\t\t\tthis.messageList.shift();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.messageList.push(params);\r\n\t\t\t\tthis.setData({\r\n\t\t\t\t\tmessageList: this.messageList,\r\n\t\t\t\t\tmessageListScrollTop: this.messageList.length * 100\r\n\t\t\t\t}, () => {});\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t};\r\n</script>\r\n<style>\r\n\t@import \"./template/1v1/1v1.css\";\r\n\t@import \"./template/grid/grid.css\";\r\n\t@import \"./template/custom/custom.css\";\r\n\r\n\t.pusher {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.player {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.debug-info {\r\n\t\tmax-width: 100vw;\r\n\t\tmax-height: 90vh;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow-y: scroll;\r\n\t\tposition: absolute;\r\n\t\tz-index: 9999;\r\n\t\tbackground-color: rgba(0, 0, 0, .5);\r\n\t\tcolor: #fff;\r\n\t\tbottom: 20rpx;\r\n\t\tleft: 0;\r\n\t\tpadding: 10rpx;\r\n\t\tfont-size: 12px;\r\n\t}\r\n\r\n\t.debug-info-btn .debug-btn,\r\n\t.debug-info .debug-btn {\r\n\t\tpadding: 0 8px;\r\n\t\tmin-height: 18px;\r\n\t\twidth: auto;\r\n\t\tfont-size: 12px;\r\n\t\tline-height: 18px;\r\n\t\tdisplay: inline-block;\r\n\t\tcolor: #06ae56;\r\n\t\tbackground-color: #f2f2f2;\r\n\t}\r\n\r\n\t.debug-info .debug-btn.false {\r\n\t\tcolor: rgb(114, 114, 114);\r\n\t}\r\n\r\n\t.debug-info-btn .debug-btn,\r\n\t.debug-info .button-hover {\r\n\t\tbackground-color: rgb(219, 219, 219);\r\n\t}\r\n\r\n\t.debug-info .close-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tright: 0;\r\n\t\tpadding: 5px 10px;\r\n\t}\r\n\r\n\t.debug-info .text.true {\r\n\t\tcolor: #1fff8b;\r\n\t}\r\n\r\n\t.debug-info .text.false {\r\n\t\tcolor: #ff2e2e;\r\n\t}\r\n\r\n\t.debug-info-btn {\r\n\t\tposition: absolute;\r\n\t\tz-index: 9998;\r\n\t\tbottom: 160rpx;\r\n\t\tleft: 0;\r\n\t}\r\n\r\n\t.trtc-room-container .btn {\r\n\t\tdisplay: inline-block;\r\n\t\twidth: auto;\r\n\t\theight: 60rpx;\r\n\t\tmin-height: 60rpx;\r\n\t\tline-height: 60rpx;\r\n\t\tfont-size: 12px;\r\n\t\tfont-weight: normal;\r\n\t\tpadding: 0 10rpx;\r\n\t\tcolor: #006eff;\r\n\t\tbackground-color: #f2f2f2;\r\n\t\tmargin: 0 16rpx;\r\n\t}\r\n\r\n\t.trtc-room-container .btn.active {\r\n\t\tcolor: #f2f2f2;\r\n\t\tbackground-color: #006eff;\r\n\t}\r\n\r\n\t.trtc-room-container .btn-hover {\r\n\t\tbackground-color: #d1d1d1;\r\n\t}\r\n\r\n\t.im-panel {\r\n\t\tposition: absolute;\r\n\t\tz-index: 9;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\twidth: 90vw;\r\n\t\theight: 320rpx;\r\n\t\ttop: 50vh;\r\n\t\tleft: 50vw;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t\tpadding: 20rpx 0;\r\n\t\tborder-radius: 10rpx;\r\n\t\tfont-size: 12px;\r\n\t\t/* bottom: 25vh; */\r\n\t\tcolor: #fff;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\t}\r\n\r\n\t.im-panel .close-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tright: -3px;\r\n\t\tpadding: 5px 10px;\r\n\t\tz-index: 99;\r\n\t}\r\n\r\n\t.message-panel-body {\r\n\t\twidth: 100%;\r\n\t\theight: 80%;\r\n\t\toverflow-x: hidden;\r\n\t\toverflow-y: scroll;\r\n\t}\r\n\r\n\t.message-scroll-container {\r\n\t\theight: 100%;\r\n\t\t/* box-sizing: border-box;\r\n  padding: 0 20rpx; */\r\n\t}\r\n\r\n\t.message-list {\r\n\t\twidth: 100%;\r\n\t\tbox-sizing: border-box;\r\n\t\tpadding: 0 20rpx;\r\n\t\t/* display: flex;\r\n  flex-direction: column; */\r\n\t}\r\n\r\n\t.message-item {\r\n\t\twidth: 100%;\r\n\t\t/* height: 36rpx; */\r\n\t\t/* padding: 0 20rpx; */\r\n\t\tpadding-bottom: 10rpx;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t}\r\n\r\n\t.message-item .user-name {\r\n\t\twidth: 20%;\r\n\t\tcolor: #2483ff;\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.user-name.mine {\r\n\t\tcolor: #ff7424;\r\n\t}\r\n\r\n\t.message-item .separate {\r\n\t\tpadding: 0 5px;\r\n\t\tcolor: #fff;\r\n\t}\r\n\r\n\t.message-item .message-content {\r\n\t\tword-wrap: break-word;\r\n\t\tword-break: break-all;\r\n\t\tpadding-left: 20rpx;\r\n\t\tposition: relative;\r\n\t\tmax-width: 80%;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.message-content::after {\r\n\t\tcontent: ':';\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\ttop: 0;\r\n\t}\r\n\r\n\t.message-panel-bottom {\r\n\t\twidth: 100%;\r\n\t\theight: 50rpx;\r\n\t\tbox-sizing: border-box;\r\n\t\tpadding: 0 20rpx 0;\r\n\t\tmargin-top: 20rpx;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t}\r\n\r\n\t.message-input-container {\r\n\t\tflex-grow: 1;\r\n\t}\r\n\r\n\t.message-input-container .message-input {\r\n\t\tfont-size: 12px;\r\n\t\tpadding-left: 20rpx;\r\n\t\tborder-radius: 10rpx;\r\n\t\theight: 100%;\r\n\t\tbackground-color: rgba(0, 0, 0, 0.1);\r\n\t}\r\n\r\n\t.message-send-btn .btn {\r\n\t\tmargin-right: 0;\r\n\t\theight: 50rpx;\r\n\t\tmin-height: 50rpx;\r\n\t\tline-height: 50rpx;\r\n\t}\r\n\r\n\t.volume-animation {\r\n\t\tposition: absolute;\r\n\t\twidth: 80rpx;\r\n\t\theight: 80rpx;\r\n\t\tleft: 0;\r\n\t\ttop: initial;\r\n\t\tbottom: 20rpx;\r\n\t\tz-index: 9;\r\n\t\t/* transform: translate(-50%, 0); */\r\n\t}\r\n\r\n\t.volume-animation .image {\r\n\t\tposition: absolute;\r\n\t\twidth: 80rpx;\r\n\t\theight: 80rpx;\r\n\t}\r\n\r\n\t.volume-animation .audio-active {\r\n\t\tanimation: viewlinear 1.5s linear infinite;\r\n\t}\r\n\r\n\t@keyframes viewlinear {\r\n\r\n\t\t/** 第一种写法**/\r\n\t\t0% {\r\n\t\t\theight: 0;\r\n\t\t}\r\n\r\n\t\t100% {\r\n\t\t\theight: 100%;\r\n\t\t}\r\n\t}\r\n\r\n\t.none,\r\n\t.view-container.none,\r\n\t.template-grid .view-container.none,\r\n\t.template-1v1 .view-container.none {\r\n\t\tdisplay: none !important;\r\n\t}\r\n</style>\n","import mod from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./trtc-room.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./trtc-room.vue?vue&type=style&index=0&lang=css&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1634546981611\n      var cssReload = require(\"/Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}